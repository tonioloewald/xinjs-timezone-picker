{"mappings":"AGAA;;;;;;;;;AGAO,GAAA,MAAM,4CAAN;IACL,OAAO;IACP,MAAM;AACR;AGEO,SAAS,gEAAW,GAAc;IACvC,IAAI,OAAO,QAAQ,OAAO,QAAQ,UAChC,OAAO;IAET,IAAI,MAAM,QAAQ,MAEhB,OAAO,IAAI,IAAI;IAEjB,MAAM,QAAmB,CAAC;IAC1B,IAAK,MAAM,OAAO,IAAK;QACrB,MAAM,MAAM,GAAG,CAAC,IAAI;QACpB,IAAI,OAAO,QAAQ,OAAO,QAAQ,UAChC,KAAK,CAAC,IAAI,GAAG,gEAAU;aAEvB,KAAK,CAAC,IAAI,GAAG;IAEjB;IACA,OAAO;AACT;ADpBO,MAAM,kEAAc;AACpB,MAAM,kEAAiB,CAAC,CAAC,EAAE,gEAAY,CAAC;AACxC,MAAM,kEAAc;AACpB,MAAM,kEAAiB,CAAC,CAAC,EAAE,gEAAY,CAAC;AAExC,MAAM,kEAAW,OAAO;AACxB,MAAM,kEAAY,OAAO;AAEzB,MAAM,4CAAU,CAAC;IACtB,OAAO,CAAC,CAAC,gEAAS;AACpB;AAEO,SAAS,0CAAwB,CAAI;IAC1C,2BAA2B;IAC3B,OAAQ,OAAO,MAAM,YAAY,MAAM,OAAO,CAA0B,CAAC,gEAAU,IAAI,IAAI;AAC7F;AAcO,MAAM,kEAAwD,IAAI;AAClE,MAAM,kEAAoD,IAAI;AAO9D,MAAM,kEAAqB,CAAC;IACjC,OAAO;QACL,eAAe,gEAAkB,IAAI;QACrC,cAAc,gEAAkB,IAAI;IACtC;AACF;AAEO,MAAM,kEAAoB,CAAC;IAChC,MAAM,SAAS,QAAQ;IACvB,IAAI,kBAAkB,aAAa;QACjC,MAAM,eAAe,gEAAkB,IAAI;QAC3C,MAAM,gBAAgB,gEAAkB,IAAI;QAC5C,IAAI,gBAAgB,MAElB,gEAAkB,IAAI,QAAQ,AAAA,gEAAU;QAE1C,IAAI,iBAAiB,MAEnB,gEAAkB,IAAI,QAAQ,AAAA,gEAAU;IAE5C;IACA,KAAK,MAAM,QAAQ,mBAAmB,sBAAsB,QAAQ,QAAQ,aAAa,QAAQ,WAC/F,IAAI,gBAAgB,eAAe,gBAAgB,kBACjD,OAAO,YAAY,gEAAkB;SAErC,OAAO,YAAY,KAAK;IAG5B,OAAO;AACT;AAEO,MAAM,kEAAiD,IAAI;AAE3D,MAAM,4CAAc,CAAC;IAC1B,MAAM,OAAO,SAAS,KAAK;IAC3B,MAAO,QAAQ,iBAAiB,QAAQ,QAAQ,kBAAkB,KAAM;QACtE,MAAM,OAAO,gEAAc,IAAI;QAC/B,IAAI,QAAQ,MACV,OAAO;QAET,UAAU,QAAQ;IACpB;IACA,OAAO;AACT;AD/EO,MAAM,4CAA0B,OAAO;AACvC,MAAM,kEAAwB,EAAE,CAAC,oCAAoC;;AAC5E,MAAM,2DAAyB,EAAE;AACjC,IAAI,8DAAoC;AACxC,IAAI;AACJ,IAAI;AAEG,MAAM;IAKX,YAAa,IAAwC,EAAE,QAA2C,CAAE;QAClG,MAAM,sBAAsB,OAAO,aAAa,WAAW,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,GAAG,CAAC,SAAS,EAAE,SAAS,KAAK,CAAC;QACxG,IAAI;QACJ,IAAI,OAAO,SAAS,UAAU;YAC5B,IAAI,CAAC,OAAO,CAAA,IAAK,OAAO,MAAM,YAAY,MAAM,MAAO,CAAA,KAAK,WAAW,MAAM,EAAE,WAAW,KAAA;YAC1F,kBAAkB,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;QACtC,OAAO,IAAI,gBAAgB,QAAQ;YACjC,IAAI,CAAC,OAAO,KAAK,KAAK,KAAK;YAC3B,kBAAkB,CAAC,QAAQ,EAAE,KAAK,WAAW,CAAC,CAAC;QACjD,OAAO,IAAI,gBAAgB,UAAU;YACnC,IAAI,CAAC,OAAO;YACZ,kBAAkB,CAAC,gBAAgB,EAAE,KAAK,KAAK,CAAC;QAClD,OACE,MAAM,IAAI,MACR;QAGJ,IAAI,CAAC,cAAc,CAAC,EAAE,gBAAgB,EAAE,EAAE,oBAAoB,CAAC;QAC/D,IAAI,OAAO,aAAa,YACtB,IAAI,CAAC,WAAW;aAEhB,MAAM,IAAI,MAAM;QAElB,gEAAU,KAAK,IAAI;IACrB;AACF;AAEO,MAAM,kEAAU;IACrB,IAAI,8DAAkB,WACpB;IAEF,MAAM;AACR;AAEA,MAAM,qDAAS;IACb,IAAI,AAAA,0CAAS,MACX,QAAQ,KAAK;IAEf,MAAM,QAAQ;WAAI;KAAa;IAE/B,KAAK,MAAM,QAAQ,MACjB,gEACG,OAAO,CAAA;QACN,IAAI;QACJ,IAAI;YACF,QAAQ,SAAS,KAAK;QACxB,EAAE,OAAO,GAAG;YACV,MAAM,IAAI,MAAM,CAAC,SAAS,EAAE,SAAS,YAAY,QAAQ,EAAE,EAAY,MAAM,EAAE,KAAK,CAAC,CAAC;QACxF;QACA,IAAI,UAAU,2CAAyB;YACrC,0CAAU;YACV,OAAO;QACT;QACA,OAAO;IACT,GACC,QAAQ,CAAA;QACP,IAAI;QACJ,IAAI;YACF,UAAU,SAAS,SAAS;QAC9B,EAAE,OAAO,GAAG;YACV,QAAQ,MAAM,CAAC,SAAS,EAAE,SAAS,YAAY,QAAQ,EAAE,EAAY,YAAY,EAAE,KAAK,CAAC,CAAC;QAC5F;QACA,IAAI,YAAY,2CACd,0CAAU;IAEd;IAGJ,yDAAa,OAAO;IACpB,8DAAkB;IAClB,IAAI,OAAO,8DAAkB,YAC3B;IAEF,IAAI,AAAA,0CAAS,MACX,QAAQ,QAAQ;AAEpB;AAEO,MAAM,4CAAQ,CAAC;IACpB,MAAM,OAAO,OAAO,cAAc,WAAW,YAAY,AAAA,0CAAQ;IAEjE,IAAI,SAAS,WAAW;QACtB,QAAQ,MAAM,yCAAyC;QACvD,MAAM,IAAI,MAAM;IAClB;IAEA,IAAI,gEAAoB,OAAO;QAC7B,4DAAgB,IAAI,QAAQ,CAAA;YAC1B,4DAAgB;QAClB;QACA,8DAAkB,WAAW;IAC/B;IAEA,IAAI,yDAAa,KAAK,CAAA,cAAe,KAAK,WAAW,iBAAiB,MACpE,yDAAa,KAAK;AAEtB;AAEO,MAAM,kEAAU,CAAC,MAA0C;IAChE,OAAO,IAAI,gEAAS,MAAM;AAC5B;AAEO,MAAM,4CAAY,CAAC;IACxB,MAAM,QAAQ,gEAAU,QAAQ;IAChC,IAAI,QAAQ,IACV,gEAAU,OAAO,OAAO;SAExB,MAAM,IAAI,MAAM;AAEpB;AG7HA,qEAAqE;ACArE,MAAM,wDAAY,CAAC;IACjB,IAAI;QACF,OAAO,KAAK,UAAU;IACxB,EAAE,OAAO,GAAG;QACV,OAAO;IACT;AACF;AAEO,MAAM,kEAAY,CAAC,GAAG,WAA2B,IAAI,MAAM,SAAS,IAAI,uDAAW,KAAK;ADH/F,MAAM,oDAAQ,IAAc,IAAI,KAAK,SAAS,cAAc,MAAM,KAAK,OAAO,UAAU,SAAS,IAAI,MAAM;AAC3G,IAAI,mDAAO;AACX,MAAM,kDAAM,IAAe,AAAA,CAAA,SAAS,SAAS,MAAO,EAAE,gDAAA,EAAO,SAAS,IAAI,MAAM;AAChF,MAAM,iDAAK,IAAc,sDAAU;AAEnC,MAAM,uDAAW,CAAC;AAClB,MAAM,0DAAc,CAAC;AAKrB,SAAS,gEAAW,IAAwB;IAC1C,IAAI,SAAS,IACX,OAAO,EAAE;IAGX,IAAI,MAAM,QAAQ,OAChB,OAAO;SACF;QACL,MAAM,QAAmB,EAAE;QAC3B,MAAO,KAAK,SAAS,EAAG;YACtB,IAAI,QAAQ,KAAK,OAAO;YACxB,IAAI,UAAU,IAAI;gBAChB,MAAM,KAAK,KAAK,MAAM;gBACtB;YACF,OAAO;gBACL,MAAM,OAAO,KAAK,MAAM,GAAG;gBAC3B,OAAO,KAAK,MAAM;gBAClB,IAAI,SAAS,IACX,MAAM,KAAK,KAAK,MAAM;gBAExB,QAAQ,KAAK,QAAQ,OAAO;gBAC5B,MAAM,KAAK,KAAK,MAAM,GAAG,QAAQ;gBACjC,0DAA0D;gBAC1D,IAAI,KAAK,MAAM,OAAO,QAAQ,OAAO,KACnC,SAAS;gBAEX,OAAO,KAAK,MAAM;YACpB;QACF;QACA,OAAO;IACT;AACF;AAEA,MAAM,yDAAa,IAAI;AAMvB,SAAS,gEAAqB,KAAkB,EAAE,MAAc;IAC9D,IAAI,uDAAW,IAAI,WAAW,WAC5B,uDAAW,IAAI,OAAO,CAAC;IAEzB,IAAI,uDAAW,IAAI,MAAM,CAAC,OAAO,KAAK,WACpC,uDAAW,IAAI,MAAM,CAAC,OAAO,GAAG,CAAC;IAEnC,MAAM,MAAM,uDAAW,IAAI,MAAM,CAAC,OAAO;IAEzC,IAAI,WAAW,UACb,MAAM,QAAQ,CAAC,MAAM;QACnB,IAAI,KAAK,WAAW,WAAW,KAAK,SAAS;QAC7C,GAAG,CAAC,KAAK,SAAmB,GAAG,GAAG;IACpC;SAEA,MAAM,QAAQ,CAAC,MAAM;QACnB,GAAG,CAAC,gEAAU,MAAM,UAAoB,GAAG,GAAG;IAChD;IAEF,OAAO;AACT;AAEA,SAAS,yDAAc,KAAkB,EAAE,MAAc;IACvD,IAAI,uDAAW,IAAI,WAAW,aAAa,uDAAW,IAAI,MAAM,CAAC,OAAO,KAAK,WAC3E,OAAO,gEAAoB,OAAO;SAElC,OAAO,uDAAW,IAAI,MAAM,CAAC,OAAO;AAExC;AAEA,SAAS,uDAAY,KAAkB,EAAE,MAAc,EAAE,OAAY;IACnE,UAAU,UAAoB;IAC9B,IAAI,MAAM,yDAAa,OAAO,OAAO,CAAC,QAAQ;IAC9C,IAAI,QAAQ,aAAa,gEAAU,KAAK,CAAC,IAAI,EAAE,UAAoB,OAAO,SACxE,MAAM,gEAAoB,OAAO,OAAO,CAAC,QAAQ;IAEnD,OAAO;AACT;AAEA,SAAS,kDAAO,GAAc,EAAE,GAAW,EAAE,aAAmB;IAC9D,IAAI,GAAG,CAAC,IAAI,KAAK,aAAa,kBAAkB,WAC9C,GAAG,CAAC,IAAI,GAAG;IAEb,OAAO,GAAG,CAAC,IAAI;AACjB;AAEA,SAAS,qDAAU,KAAY,EAAE,MAAc,EAAE,OAAe,EAAE,aAAmB;IACnF,IAAI,MAAM,WAAW,KAAK,uDAAW,OAAO,QAAQ,WAAW;IAC/D,IAAI,kBAAkB,sDAAU;QAC9B,MAAM,OAAO,KAAe;QAC5B,uDAAW,OAAO;QAClB,OAAO,OAAO;IAChB,OAAO,IAAI,kBAAkB,yDAC3B;QAAA,IAAI,WAAW,MAAM,KAAK,CAAC,IAAc,KAAK,WAC5C,KAAK,CAAC,IAAc,GAAG,CAAC;IAD1B,OAGK,IAAI,kBAAkB,WAAW;QACtC,IAAI,QAAQ,WACV,KAAK,CAAC,IAAc,GAAG;aAClB,IAAI,WAAW,MAAM,gEAAU,eAAe,UAAoB,OAAO,UAAU,IAAI;YAC5F,MAAM,KAAK;YACX,MAAM,MAAM,SAAS;QACvB,OACE,MAAM,IAAI,MAAM,CAAC,2BAA2B,EAAE,OAAO,CAAC,EAAE,QAAQ,CAAC,CAAC;IAEtE;IACA,OAAO,KAAK,CAAC,IAAc;AAC7B;AAEA,SAAS,wDAAa,GAAQ;IAC5B,IAAI,CAAC,MAAM,QAAQ,MACjB,MAAM,AAAA,gEAAU,2CAA2C;AAE/D;AAEA,SAAS,yDAAc,GAAQ;IAC7B,IAAK,OAAO,QAAS,CAAE,CAAA,eAAe,MAAA,GACpC,MAAM,AAAA,gEAAU,4CAA4C;AAEhE;AAEA,SAAS,gEAAW,GAAyB,EAAE,IAAY;IACzD,MAAM,QAAQ,gEAAU;IACxB,IAAI,QAA0C;IAC9C,IAAI,GAAG,MAAM,GAAG;IAChB,IAAK,IAAI,GAAG,OAAO,MAAM,QAAQ,UAAU,aAAa,IAAI,MAAM,IAAK;QACrE,MAAM,OAAO,KAAK,CAAC,EAAE;QACrB,IAAI,MAAM,QAAQ,OAChB,IAAK,IAAI,GAAG,OAAO,KAAK,QAAQ,UAAU,aAAa,IAAI,MAAM,IAAK;YACpE,MAAM,MAAM,IAAI,CAAC,EAAE;YACnB,QAAQ,KAAoB,CAAC,IAAI;QACnC;aACK;YACL,IAAI,MAAoB,WAAW,GAAG;gBACpC,yBAAyB;gBACzB,QAAS,KAAkB,CAAC,KAAK,MAAM,GAAG;gBAC1C,IAAI,IAAI,CAAC,EAAE,KAAK,KACd,OAAO;YAEX,OAAO,IAAI,KAAK,SAAS,MAAM;gBAC7B,MAAM,CAAC,QAAQ,GAAG,KAAK,GAAG,KAAK,MAAM;gBACrC,QAAQ,qDAAS,OAAgB,QAAQ,KAAK,KAAK;YACrD,OAAO;gBACL,IAAI,SAAS,MAAM;gBACnB,QAAQ,KAAmB,CAAC,EAAE;YAChC;QACF;IACF;IACA,OAAO;AACT;AAEA,SAAS,gEAAW,IAA0B,EAAE,IAAY,EAAE,GAAQ;IACpE,IAAI,MAAwC;IAC5C,MAAM,QAAQ,gEAAU;IAExB,MAAQ,OAAO,QAAU,MAAM,SAAS,EAAI;QAC1C,MAAM,OAAO,MAAM;QACnB,IAAI,OAAO,SAAS,UAAU;YAC5B,MAAM,eAAe,KAAK,QAAQ;YAClC,IAAI,eAAe,IAAI;gBACrB,IAAI,iBAAiB,GACnB,yDAAa;qBAEb,wDAAY;gBAEd,MAAM,SAAS,KAAK,MAAM,GAAG;gBAC7B,MAAM,UAAU,KAAK,MAAM,eAAe;gBAC1C,MAAM,qDAAS,KAAc,QAAQ,SAAU,MAAM,SAAS,IAAK,0DAAc;gBACjF,IAAI,MAAM,WAAW,GACnB,OAAO;YAEX,OAAO;gBACL,wDAAY;gBACZ,MAAM,MAAM,SAAS,MAAM;gBAC3B,IAAI,MAAM,SAAS,GACjB,MAAO,GAAgB,CAAC,IAAI;qBACvB;oBACL,IAAI,QAAQ,sDAAU;wBACpB,IAAK,GAAgB,CAAC,IAAI,KAAK,KAC7B,OAAO;wBAER,GAAgB,CAAC,IAAI,GAAG;oBAC3B,OACE,IAAkB,OAAO,KAAK;oBAEhC,OAAO;gBACT;YACF;QACF,OAAO,IAAI,MAAM,QAAQ,SAAU,KAAK,SAAS,GAAI;YACnD,yDAAa;YACb,MAAO,KAAK,SAAS,EAAG;gBACtB,MAAM,MAAM,KAAK;gBACjB,IAAI,KAAM,SAAS,KAAO,MAAM,SAAS,GAEvC,MAAM,kDAAO,KAAmB,KAAM,KAAK,SAAS,IAAK,CAAC,IAAI,EAAE;qBAC3D;oBACL,IAAI,QAAQ,sDAAU;wBACpB,IAAK,GAAiB,CAAC,IAAI,KAAK,KAC9B,OAAO;wBAER,GAAiB,CAAC,IAAI,GAAG;oBAC5B,OAAO;wBACL,IAAI,CAAC,OAAO,UAAU,eAAe,KAAK,KAAK,MAC7C,OAAO;wBAET,2BAA2B;wBAC3B,OAAO,GAAkB,CAAC,IAAI;oBAChC;oBACA,OAAO;gBACT;YACF;QACF,OACE,MAAM,IAAI,MAAM,CAAC,2BAA2B,EAAE,KAAK,CAAC;IAExD;IAEA,2BAA2B;IAC3B,MAAM,IAAI,MAAM,CAAC,UAAU,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,EAAE,IAAI,QAAQ,CAAC;AAC9D;AAEA,SAAS,gEAAc,IAAe,EAAE,IAAY;IAClD,IAAI,gEAAU,MAAM,UAAU,MAC5B,gEAAU,MAAM,MAAM;AAE1B;AL/NA,gDAAgD;AAChD,MAAM,8DAAkB;IAAC;IAAQ;IAAU;IAAc;IAAQ;IAAO;IAAQ;IAAW;IAAS;CAAU;AAE9G,MAAM,uDAAsB,CAAC;AAC7B,MAAM,yDAAa;AACnB,MAAM,wDAAY;AAElB,MAAM,kEAAc,CAAC,OAA0B,sDAAU,KAAK;AAE9D,MAAM,yDAAa,CAAC,OAAO,EAAE,EAAE,OAAO,EAAE;IACtC,IAAI,SAAS,IACX,OAAO;SACF;QACL,IAAI,KAAK,MAAM,aAAa,QAAQ,KAAK,SAAS,MAChD,OAAO,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC;aAEzB,OAAO,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC;IAE5B;AACF;AAEA,MAAM,yDAAa,CAAC,OAAO,EAAE,GAA+B,CAAA;QAC1D,0GAA0G;QAC1G,kBAAkB;QAClB,KAAK,MAA4B,EAAE,KAAsB;YACvD,IAAI,UAAU,iEACZ,OAAO;iBACF,IAAI,UAAU,iEACnB,OAAO;YAET,IAAI,OAAO,UAAU,UAEnB,OAAO,MAAM,CAAC,MAAM;YAEtB,IAAI,OAAO;YACX,MAAM,eAAe,KAAK,MAAM,uBAAuB,8BAA8B;YACjE,KAAK,MAAM,sBAAsB,mBAAmB;YACpD,KAAK,MAAM,2BAA2B,gCAAgC;YACtE,KAAK,MAAM,wBAAwB,qBAAqB;;YAC5E,IAAI,iBAAiB,MAAM;gBACzB,MAAM,GAAG,UAAU,QAAQ,GAAG;gBAC9B,MAAM,cAAc,uDAAW,MAAM;gBACrC,MAAM,QAAQ,AAAA,gEAAU,QAAQ;gBAChC,OAAO,UAAU,QAAQ,OAAO,UAAU,WAAW,IAAI,MAAiC,OAAO,uDAAW,aAAa,CAAC,QAAQ,GAAG;YACvI;YACA,IAAI,KAAK,WAAW,QAAQ,KAAK,SAAS,MACxC,OAAO,KAAK,UAAU,GAAG,KAAK,SAAS;YAEzC,IACG,CAAC,MAAM,QAAQ,WAAW,MAAM,CAAC,KAAK,KAAK,aAC3C,MAAM,QAAQ,WAAW,KAAK,SAAS,MACxC;gBACA,IAAI;gBACJ,IAAI,KAAK,SAAS,MAAM;oBACtB,MAAM,CAAC,QAAQ,OAAO,GAAG,KAAK,MAAM;oBACpC,QAAS,OAAuB,KAC9B,CAAC,YAAyB,CAAC,EAAE,AAAA,gEAAU,WAAW,QAAkB,CAAC,KAAK;gBAE9E,OACE,QAAS,MAAmB,CAAC,KAA0B;gBAEzD,IAAI,UAAU,QAAQ,OAAO,UAAU,UAAU;oBAC/C,MAAM,cAAc,uDAAW,MAAM;oBACrC,OAAO,IAAI,MAAiC,OAAO,uDAAW;gBAChE,OAAO,IAAI,OAAO,UAAU,YAC1B,OAAO,MAAM,KAAK;qBAElB,OAAO;YAEX,OAAO,IAAI,MAAM,QAAQ,SAAS;gBAChC,MAAM,QAAQ,MAAM,CAAC,KAA0B;gBAC/C,OAAO,OAAO,UAAU,aACpB,CAAC,GAAG;oBACF,mBAAmB;oBACnB,MAAM,SAAU,MAAM,SAAS,CAAC,KAAK,CAAE,MAAM,QAAQ;oBACrD,IAAI,4DAAgB,SAAS,OAC3B,AAAA,0CAAM;oBAER,OAAO;gBACT,IACA,OAAO,UAAU,WACf,IAAI,MAAiC,OAAO,uDAAW,uDAAW,MAAM,UACxE;YACR,OACE,OAAO,MAAM,CAAC,KAAK;QAEvB;QACA,KAAK,CAAC,EAAE,IAAY,EAAE,KAAU;YAC9B,2BAA2B;YAC3B,IAAI,SAAS,QAAQ,KAAK,CAAC,gEAAS,EAClC,QAAQ,KAAK,CAAC,gEAAU;YAE1B,MAAM,WAAW,uDAAW,MAAM;YAClC,IAAI,0DAAc,CAAC,gEAAY,WAC7B,MAAM,IAAI,MAAM,CAAC,qBAAqB,EAAE,SAAS,CAAC;YAEpD,IAAI,WAAW,yCAAG,CAAC,SAAS;YAC5B,2BAA2B;YAC3B,IAAI,YAAY,QAAQ,QAAQ,CAAC,gEAAU,IAAI,MAC7C,WAAW,QAAQ,CAAC,gEAAU;YAEhC,IAAI,aAAa,SAAS,AAAA,gEAAU,sDAAU,UAAU,QACtD,AAAA,0CAAM;YAER,OAAO;QACT;IACF,CAAA;AAEA,MAAM,4CAAU,CAAC,MAA0C;IACzD,MAAM,OAAO,OAAO,aAAa,aAAa,WAAY,yCAAI,CAAC,SAAS;IAExE,IAAI,OAAO,SAAS,YAClB,MAAM,IAAI,MAAM,CAAC,kDAAkD,EAAE,SAAmB,WAAW,CAAC;IAGtG,OAAO,AAAA,gEAAS,MAAM;AACxB;AAEA,MAAM,4CAAM,IAAI,MAAiC,sDAAU;AD/H3D,MAAM,EAAA,UAAE,oDAAA,EAAQ,kBAAE,4DAAA,EAAkB,GAAG;AAEhC,MAAM,kEAAe,CAAC,SAAsB;IACjD,MAAM,eAAe,AAAA,gEAAkB,IAAI;IAC3C,KAAK,MAAM,eAAe,aAAc;QACtC,IAAI,EAAA,MAAE,IAAA,EAAI,SAAE,OAAA,EAAO,SAAE,OAAA,EAAS,GAAG;QACjC,MAAM,EAAA,OAAE,KAAA,EAAO,GAAG;QAClB,IAAI,SAAS,MAAM;YACjB,IAAI,KAAK,WAAW,MAAM;gBACxB,MAAM,aAAa,AAAA,0CAAY;gBAC/B,IAAI,cAAc,QAAQ,UAAwB,CAAC,gEAAS,IAAI,MAC9D,OAAO,YAAY,OAAO,CAAC,EAAE,UAAwB,CAAC,gEAAS,CAAC,EAAE,KAAK,UAAU,GAAG,CAAC;qBAChF;oBACL,QAAQ,MAAM,CAAC,gCAAgC,EAAE,KAAK,CAAC,EAAE,SAAS;oBAClE,MAAM,IAAI,MAAM,CAAC,gCAAgC,EAAE,KAAK,CAAC;gBAC3D;YACF;YACA,IAAI,eAAe,QAAQ,KAAK,WAAW,cACzC,MAAM,SAAS,AAAA,yCAAG,CAAC,KAAK,EAAE;QAE9B;IACF;AACF;AAEA,oDAAoD;AACpD,IAAI,gEAAoB,MAAM;IAC5B,MAAM,WAAW,IAAI,6DAAiB,CAAC;QACrC,cAAc,QAAQ,CAAC;YACrB;mBAAI,SAAS;aAAW,CAAC,QAAQ,CAAA;gBAC/B,IAAI,gBAAgB,aAClB;uBAAI,KAAK,iBAAiB;iBAAgB,CAAC,QAAQ,CAAA,UAAW,gEAAa;YAE/E;QACF;IACF;IACA,SAAS,QAAQ,qDAAS,MAAM;QAAE,SAAS;QAAM,WAAW;IAAK;AACnE;AAEA,0CAAQ,IAAM,MAAM,CAAC;IACnB,MAAM,gBAAgB,qDAAS,iBAAiB;IAEhD,KAAK,MAAM,WAAW,cACpB,gEAAa,SAAwB;AAEzC;AAEA,MAAM,2DAAe,CAAC;IACpB,yBAAyB;IACzB,IAAI,SAAS,MAAM,OAAO,QAAQ;IAClC,MAAO,UAAU,KAAM;QACrB,MAAM,eAAe,AAAA,gEAAkB,IAAI;QAC3C,KAAK,MAAM,eAAe,aAAc;YACtC,MAAM,EAAA,SAAE,OAAA,EAAO,MAAE,IAAA,EAAM,GAAG;YAC1B,MAAM,EAAA,SAAE,OAAA,EAAS,GAAG;YACpB,IAAI,WAAW,MAAM;gBACnB,IAAI;gBACJ,IAAI;oBACF,QAAQ,QAAQ,QAAQ,YAAY;gBACtC,EAAE,OAAO,GAAG;oBACV,QAAQ,MAAM,yBAAyB,QAAQ,OAAO;oBACtD,MAAM,IAAI,MAAM;gBAClB;gBACA,IAAI,SAAS,MAAM;oBACjB,MAAM,WAAW,AAAA,yCAAG,CAAC,KAAK;oBAC1B,2BAA2B;oBAC3B,IAAI,YAAY,MACd,AAAA,yCAAG,CAAC,KAAK,GAAG;yBACP;wBACL,yBAAyB;wBACzB,MAAM,iBAAiB,QAAQ,CAAC,gEAAS,IAAI,OAAQ,QAAqB,CAAC,gEAAU,GAAG;wBACxF,MAAM,cAAc,KAAK,CAAC,gEAAS,IAAI,OAAO,KAAK,CAAC,gEAAU,GAAG;wBACjE,IAAI,mBAAmB,aACrB,AAAA,yCAAG,CAAC,KAAK,GAAG;oBAEhB;gBACF;YACF;QACF;QACA,SAAS,OAAO,cAAc,QAAQ;IACxC;AACF;AAEA,IAAI,WAAW,YAAY,MAAM;IAC/B,qDAAS,KAAK,iBAAiB,UAAU,0DAAc;IACvD,qDAAS,KAAK,iBAAiB,SAAS,0DAAc;AACxD;AAEO,SAAS,0CAA6B,OAAU,EAAE,IAAuC,EAAE,OAAsB,EAAE,OAAmB;IAC3I,IAAI,mBAAmB,kBACrB,MAAM,IAAI,MAAM;IAElB,IAAI;IACJ,IAAI,OAAO,SAAS,YAAa,IAAiB,CAAC,gEAAS,KAAK,aAAa,YAAY,WAAW;QACnG,MAAM,EAAA,OAAE,KAAA,EAAO,GAAG;QAClB,OAAO,OAAO,UAAU,WAAW,QAAQ,KAAK,CAAC,gEAAS;QAC1D,UAAU;QACV,OAAO,QAAQ;IACjB,OACE,OAAO,OAAO,SAAS,WAAW,OAAO,IAAkB,CAAC,gEAAS;IAEvE,IAAI,QAAQ,MACV,MAAM,IAAI,MAAM;IAElB,MAAM,EAAA,OAAE,KAAA,EAAO,GAAG;IAElB,QAAQ,UAAU,IAAI;IACtB,IAAI,eAAe,AAAA,gEAAkB,IAAI;IACzC,IAAI,gBAAgB,MAAM;QACxB,eAAe,EAAE;QACjB,gEAAkB,IAAI,SAAS;IACjC;IACA,aAAa,KAAK;QAAE,MAAA;QAAM,SAAS;QAAoC,SAAA;IAAQ;IAE/E,IAAI,SAAS,QAAQ,CAAC,KAAK,WAAW,MACpC,AAAA,0CAAM;IAGR,OAAO;AACT;AAEA,MAAM,gEAAiC,IAAI;AAE3C,MAAM,+DAAmB,CAAC;IACxB,yBAAyB;IACzB,IAAI,SAAS,OAAO,OAAO,QAAQ;IACnC,IAAI,qBAAqB;IAEzB,MAAM,eAAe,IAAI,MAAM,OAAO;QACpC,KAAK,MAAM,EAAE,IAAI;YACf,IAAI,SAAS,mBACX,OAAO;gBACL,MAAM;gBACN,qBAAqB;YACvB;iBACK;gBACL,yBAAyB;gBACzB,MAAM,QAAQ,MAAM,CAAC,KAAK;gBAC1B,OAAO,OAAO,UAAU,aAAa,MAAM,KAAK,UAAU;YAC5D;QACF;IACF;IACA,wDAAwD;IACxD,MAAO,CAAC,sBAAsB,UAAU,KAAM;QAC5C,MAAM,gBAAgB,AAAA,gEAAkB,IAAI;QAC5C,2BAA2B;QAC3B,MAAM,WAAW,aAAa,CAAC,MAAM,KAAK,IAAI,EAAE;QAChD,KAAK,MAAM,WAAW,SAAU;YAC9B,IAAI,OAAO,YAAY,YAErB,QAAQ;iBACH;gBACL,MAAM,OAAO,AAAA,yCAAG,CAAC,QAAQ;gBACzB,IAAI,OAAO,SAAS,YAClB,KAAK;qBAEL,MAAM,IAAI,MAAM,CAAC,+BAA+B,EAAE,QAAQ,CAAC;YAE/D;YACA,IAAI,oBACF;QAEJ;QACA,SAAS,OAAO,iBAAiB,OAAO,OAAO,cAAc,QAAQ,mEAAkB;IACzF;AACF;AAEO,MAAM,4CAAK,CAAC,SAAsB,WAAmB;IAC1D,IAAI,gBAAgB,AAAA,gEAAkB,IAAI;IAC1C,QAAQ,UAAU,IAAI;IACtB,IAAI,iBAAiB,MAAM;QACzB,gBAAgB,CAAC;QACjB,gEAAkB,IAAI,SAAS;IACjC;IACA,2BAA2B;IAC3B,IAAI,CAAC,aAAa,CAAC,UAAU,EAC3B,aAAa,CAAC,UAAU,GAAG,EAAE;IAE/B,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,SAAS,eACrC,aAAa,CAAC,UAAU,CAAC,KAAK;IAEhC,IAAI,CAAC,8DAAkB,IAAI,YAAY;QACrC,8DAAkB,IAAI;QACtB,qDAAS,KAAK,iBAAiB,WAAW,8DAAkB;IAC9D;AACF;AU5LO,MAAM,kEAAW,CAAC,QAAiB;IACxC,MAAM,QAAQ,IAAI,MAAM;IACxB,OAAO,cAAc;AACvB;AAEA,MAAM,wDAAY,CAAC;IACjB,IAAI,mBAAmB,kBACrB,OAAO,QAAQ;SACV,IAAI,mBAAmB,qBAAqB,QAAQ,aAAa,aACtE,OAAO;SAEP,OAAO;AAEX;AAEO,MAAM,kEAAW,CAAC,SAAsB;IAC7C,OAAQ,sDAAU;QAChB,KAAK;YACH,mBAAmB;YACnB,QAAQ,UAAU,QAAQ,UAAU;YACpC;QACF,KAAK;YACH,mBAAmB;YACnB,QAAQ,UAAU;YAClB;QACF,KAAK;YACH,mBAAmB;YACnB,QAAQ,cAAc,IAAI,KAAK;YAC/B;QACF,KAAK;YACH,KAAK,MAAM,UAAU;mBAAI,QAAQ,iBAAiB;aAAU,CAC1D,OAAO,WAAW,QAAQ,CAAC,OAAO,MAAM;YAE1C;QACF;YACE,mBAAmB;YACnB,QAAQ,QAAQ;IACpB;AACF;AAKO,MAAM,kEAAW,CAAC;IACvB,OAAQ,sDAAU;QAChB,KAAK;YACL;gBACE,MAAM,QAAQ,QAAQ,eAAe,cAAc,CAAC,OAAO,EAAE,QAAQ,KAAK,UAAU,CAAC;gBACrF,OAAO,SAAS,OAAO,MAAM,QAAQ;YACvC;QACA,KAAK;YACH,mBAAmB;YACnB,OAAO,QAAQ;QACjB,KAAK;YACH,mBAAmB;YACnB,OAAO,QAAQ,YAAY;QAC7B,KAAK;YACH,OAAO;mBAAI,QAAQ,iBAAiB;aAAU,CAC3C,OAAO,CAAC,KAAc;gBACrB,GAAG,CAAC,OAAO,MAAM,GAAG,OAAO;gBAC3B,OAAO;YACT,GAAG,CAAC;QACR;YACE,OAAO,QAAQ;IACnB;AACF;AAEA,yBAAyB,GACzB,MAAM,EAAA,gBAAE,0DAAA,EAAgB,GAAG;AACpB,MAAM,kEAAiB,8DAAkB,OAC5C,IAAI,2DAAe,CAAA;IACnB,KAAK,MAAM,SAAS,QAAS;QAC3B,MAAM,UAAU,MAAM;QACtB,gEAAS,SAAS;IACpB;AACF,KACE;IACE,YAAY;IACZ,cAAc;AAChB;AAEJ,SAAS,6DAAkB,IAAqB;IAC9C,MAAM,UAAU,SAAS,cAAc;IACvC,IAAI,KAAK,SAAS,IAChB,QAAQ,aAAa,QAAQ,KAAK;IAEpC,KAAK,YAAY;AACnB;AAEO,MAAM,iEAAyB,CAAC,KAA8C;IACnF,IAAI,YAAY;IAChB,IAAI,OAAO,QAAQ,WAAW,MAAM;QAClC,IAAI,OAAO,YAAY,UACrB,IAAI,cAAc;aACb,IAAI,MAAM,QAAQ,UACvB,QAAQ,QAAQ,CAAA;YACd,IAAI,OAAO,gBAAgB,OAAO,AAAA,gEAAkB,QAAQ;YAC5D,IAAI,gBAAgB,QAAS,KAAK,cAAc,WAAW,MACzD,YAAY;QAEhB;aACK,IAAI,mBAAmB,eAAe,mBAAmB,kBAAkB;YAChF,MAAM,QAAQ;mBAAI,QAAQ,iBAAiB;aAAQ;YACnD,IAAI,MAAM,SAAS,GAAG;gBACpB,YAAY;gBACZ,MAAM,QAAQ;YAChB;YACA,IAAI,OAAO,AAAA,gEAAkB;QAC/B,OACE,MAAM,IAAI,MAAM;IAEpB;IACA,OAAO;AACT;AClHO,MAAM,4CAAW,CAAC,QAAkB,cAAc,GAAG;IAC1D,IAAI;IACJ,OAAO,CAAC,GAAG;QACT,IAAI,eAAe,WAAW,aAAa;QAC3C,aAAa,WAAW;YACtB,UAAU;QACZ,GAAG;IACL;AACF;AAEO,MAAM,4CAAW,CAAC,QAAkB,cAAc,GAAG;IAC1D,IAAI;IACJ,IAAI,eAAe,KAAK,QAAQ;IAChC,IAAI,WAAW;IACf,OAAO,CAAC,GAAG;QACT,aAAa;QACb,aAAa,WAAW;YACtB,UAAU;YACV,eAAe,KAAK;QACtB,GAAG;QACH,IAAI,CAAC,YAAY,KAAK,QAAQ,gBAAgB,aAAa;YACzD,WAAW;YACX,IAAI;gBACF,UAAU;gBACV,eAAe,KAAK;YACtB,SAAU;gBACR,WAAW;YACb;QACF;IACF;AACF;AFzBA,MAAM,6DAAiB,OAAO;AAC9B,MAAM,gEAAoB,GAAG,QAAQ;;AAyBrC,SAAS,mEAAwB,OAAoB,EAAE,IAAY;IACjE,MAAM,gBAAgB;WAAI,QAAQ,iBAAiB;KAAgB;IACnE,IAAI,QAAQ,QAAQ,kEAClB,cAAc,QAAQ;IAExB,KAAK,MAAM,gBAAgB,cAAe;QACxC,MAAM,WAAW,AAAA,gEAAkB,IAAI;QACvC,KAAK,MAAM,WAAW,SAAU;YAC9B,IAAI,QAAQ,KAAK,WAAW,MAC1B,QAAQ,OAAO,CAAC,EAAE,KAAK,EAAE,QAAQ,KAAK,UAAU,GAAG,CAAC;YAEtD,IAAI,QAAQ,QAAQ,SAAS,MAC3B,QAAQ,QAAQ,MAAM,cAA6B,AAAA,yCAAG,CAAC,QAAQ,KAAK;QAExE;IACF;AACF;AAEA,MAAM;IAOI,SAAgB,EAAE,CAAA;IAI1B,YAAa,YAAyB,EAAE,UAA8B,CAAC,CAAC,CAAE;QACxE,IAAI,CAAC,eAAe;QACpB,IAAI,CAAC,gBAAgB,IAAI;QACzB,IAAI,aAAa,SAAS,WAAW,GACnC,MAAM,IAAI,MAAM;QAElB,IAAI,aAAa,QAAQ,CAAC,EAAE,YAAY,qBAAqB;YAC3D,MAAM,WAAW,aAAa,QAAQ,CAAC,EAAE;YACzC,IAAI,SAAS,QAAQ,SAAS,WAAW,GACvC,MAAM,IAAI,MAAM;YAElB,IAAI,CAAC,WAAW,AAAA,gEAAkB,SAAS,QAAQ,QAAQ,CAAC,EAAE;QAChE,OAAO;YACL,IAAI,CAAC,WAAW,aAAa,QAAQ,CAAC,EAAE;YACxC,IAAI,CAAC,SAAS;QAChB;QACA,IAAI,CAAC,UAAU,SAAS,cAAc;QACtC,IAAI,CAAC,aAAa,SAAS,cAAc;QACzC,IAAI,CAAC,aAAa,OAAO,IAAI,CAAC;QAC9B,IAAI,CAAC,aAAa,OAAO,IAAI,CAAC;QAC9B,IAAI,CAAC,UAAU;QACf,IAAI,QAAQ,WAAW,MAAM;YAC3B,gEAAe,QAAQ,IAAI,CAAC;YAC5B,IAAI,CAAC,UAAU,AAAA,0CAAS;gBACtB,IAAI,CAAC,OAAO,IAAI,CAAC,QAAQ;YAC3B,GAAG;YACH,IAAI,CAAC,aAAa,iBAAiB,UAAU,IAAI,CAAC;YAClD,IAAI,CAAC,aAAa,iBAAiB,UAAU,IAAI,CAAC;QACpD;IACF;IAEQ,eAAkC;QACxC,MAAM,EAAA,SAAE,OAAA,EAAO,YAAE,UAAA,EAAU,aAAE,WAAA,EAAa,GAAG,IAAI,CAAC;QAClD,IAAI,eAAe,IAAI,CAAC;QACxB,IAAI,eAAe,WACjB,eAAe,aAAa,OAAO,CAAA,OAAQ,IAAI,CAAC,WAAW,KAAK;QAElE,IAAI,gBAAgB,WAClB,eAAe,aAAa,OAAO,CAAA,OAAQ,IAAI,CAAC,YAAY,KAAK;QAEnE,IAAI,YAAY;QAChB,IAAI,WAAW,aAAa,SAAS;QACrC,IAAI,YAAY;QAChB,IAAI,eAAe;QAEnB,IAAI,WAAW,MAAM;YACnB,MAAM,QAAQ,IAAI,CAAC,aAAa;YAChC,MAAM,SAAS,IAAI,CAAC,aAAa;YAEjC,MAAM,iBAAiB,QAAQ,SAAS,OAAO,KAAK,IAAI,GAAG,KAAK,MAAM,QAAQ,QAAQ,UAAU;YAChG,MAAM,cAAc,KAAK,KAAK,SAAS,QAAQ,UAAU;YACzD,MAAM,YAAY,KAAK,KAAK,aAAa,SAAS;YAClD,MAAM,eAAe,iBAAiB;YACtC,IAAI,SAAS,KAAK,MAAM,IAAI,CAAC,aAAa,YAAY,QAAQ;YAC9D,IAAI,SAAS,YAAY,cAAc,GACrC,SAAS,KAAK,IAAI,GAAG,YAAY,cAAc;YAEjD,YAAY,SAAS;YACrB,WAAW,YAAY,eAAe;YAEtC,YAAY,SAAS,QAAQ;YAC7B,eAAe,KAAK,IAAI,YAAY,QAAQ,SAAS,SAAS,WAAW;QAC3E;QAEA,OAAO;YACL,OAAO;YACP,WAAA;YACA,UAAA;YACA,WAAA;YACA,cAAA;QACF;IACF;IAEA,OAAQ,KAAa,EAAE,OAAiB,EAAQ;QAC9C,IAAI,SAAS,MACX,QAAQ,EAAE;QAEZ,IAAI,CAAC,SAAS;QAEd,MAAM,EAAA,cAAE,YAAA,EAAY,gBAAE,cAAA,EAAc,YAAE,UAAA,EAAU,aAAE,WAAA,EAAa,GAAG,IAAI,CAAC;QACvE,mBAAmB;QACnB,MAAM,YAAoB,AAAA,0CAAQ;QAElC,MAAM,QAAQ,IAAI,CAAC;QACnB,IAAI,CAAC,aAAa,UAAU,OAAO,mBAAmB,MAAM,MAAM,WAAW;QAC7E,MAAM,gBAAgB,IAAI,CAAC;QAC3B,MAAM,EAAA,WAAE,SAAA,EAAS,UAAE,QAAA,EAAQ,WAAE,SAAA,EAAS,cAAE,YAAA,EAAc,GAAG;QACzD,IACE,eAAe,aACf,gBAAgB,aAChB,YAAY,QACZ,iBAAiB,QACjB,cAAc,cAAc,aAC5B,aAAa,cAAc,UAE3B;QAEF,IAAI,CAAC,iBAAiB;QAEtB,IAAI,UAAU;QACd,IAAI,QAAQ;QACZ,IAAI,UAAU;QAEd,KAAK,MAAM,WAAW;eAAI,IAAI,CAAC,aAAa;SAAS,CAAE;YACrD,IAAI,YAAY,IAAI,CAAC,WAAW,YAAY,IAAI,CAAC,YAC/C;YAEF,MAAM,QAAQ,AAAA,gEAAc,IAAI;YAChC,IAAI,SAAS,MACX,QAAQ;iBACH;gBACL,MAAM,MAAM,MAAM,MAAM,QAAQ;gBAChC,IAAI,MAAM,aAAa,MAAM,UAAU;oBACrC,QAAQ;oBACR,IAAI,CAAC,cAAc,OAAO;oBAC1B,gEAAc,OAAO;oBACrB;gBACF;YACF;QACF;QAEA,IAAI,CAAC,QAAQ,MAAM,SAAS,OAAO,aAAa;QAChD,IAAI,CAAC,WAAW,MAAM,SAAS,OAAO,gBAAgB;QAEtD,0DAA0D;QAC1D,MAAM,WAA0B,EAAE;QAClC,MAAM,EAAA,QAAE,MAAA,EAAQ,GAAG,IAAI,CAAC;QACxB,IAAK,IAAI,IAAI,WAAW,KAAK,UAAU,IAAK;YAC1C,MAAM,OAAO,MAAM,KAAK,CAAC,EAAE;YAC3B,IAAI,SAAS,WACX;YAEF,IAAI,UAAU,IAAI,CAAC,cAAc,IAAI,AAAA,0CAAS;YAC9C,IAAI,WAAW,MAAM;gBACnB;gBACA,UAAU,AAAA,gEAAkB,IAAI,CAAC;gBACjC,IAAI,OAAO,SAAS,UAAU;oBAC5B,IAAI,CAAC,cAAc,IAAI,AAAA,0CAAS,OAAO;oBACvC,gEAAc,IAAI,SAAS,AAAA,0CAAS;gBACtC;gBACA,IAAI,CAAC,aAAa,aAAa,SAAS,IAAI,CAAC;gBAC7C,IAAI,UAAU,MAAM;oBAClB,MAAM,UAAU,IAAI,CAAC,OAAO;oBAC5B,MAAM,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,OAAO,CAAC,EAAE,QAAQ,CAAC,CAAC;oBACrD,mEAAuB,SAAS;gBAClC,OAAO;oBACL,MAAM,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,EAAE,CAAC,CAAC;oBACrC,mEAAuB,SAAS;gBAClC;gBACA,IAAI,gBAAgB,MAElB,aAAa,SAAS;YAE1B;YACA,IAAI,kBAAkB,MAEpB,eAAe,SAAS;YAE1B,SAAS,KAAK;QAChB;QAEA,wEAAwE;QACxE,IAAI,iBAAqC;QACzC,KAAK,MAAM,WAAW,SAAU;YAC9B,IAAI,QAAQ,2BAA2B,gBAAgB;gBACrD;gBACA,IAAI,gBAAgB,sBAAsB,MACxC,IAAI,CAAC,aAAa,aAAa,SAAS,eAAe;qBAEvD,IAAI,CAAC,aAAa,aAAa,SAAS,IAAI,CAAC;YAEjD;YACA,iBAAiB;QACnB;QAEA,IAAI,AAAA,0CAAS,MACX,QAAQ,IAAI,WAAW,WAAW;YAAE,SAAA;YAAS,SAAA;YAAS,OAAA;QAAM;IAEhE;AACF;AAEO,MAAM,kEAAiB,CAAC,cAA2B;IACxD,IAAI,cAAc,YAAY,CAAC,2DAAe;IAC9C,IAAI,eAAe,MAAM;QACvB,cAAc,IAAI,wDAAY,cAAc;QAC5C,YAAY,CAAC,2DAAe,GAAG;IACjC;IACA,OAAO;AACT;ADtPO,MAAM,4CAAmD;IAC9D,OAAO;QACL,OAAO,OAAoB,EAAE,KAAU;YACrC,gEAAS,SAAS;QACpB;QAEA,SAAS,OAAoB;YAC3B,OAAO,AAAA,gEAAS;QAClB;IACF;IAEA,MAAM;QACJ,OAAO,OAAoB,EAAE,KAAU;YACrC,QAAQ,cAAc;QACxB;IACF;IAEA,SAAS;QACP,OAAO,OAAoB,EAAE,KAAU;YACrC,2BAA2B;YAC1B,QAA6B,WAAW,CAAC;QAC5C;IACF;IAEA,UAAU;QACR,OAAO,OAAoB,EAAE,KAAU;YACpC,QAA6B,WAAW,QAAQ;QACnD;IACF;IAEA,OAAO;QACL,OAAO,OAAoB,EAAE,KAAU;YACrC,IAAI,OAAO,UAAU,UACnB,KAAK,MAAM,QAAQ,OAAO,KAAK,OAE7B,QAAQ,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK;iBAE9B,IAAI,OAAO,UAAU,UAC1B,QAAQ,aAAa,SAAS;iBAE9B,MAAM,IAAI,MAAM;QAEpB;IACF;IAEA,MAAM;QACJ,OAAO,OAAoB,EAAE,KAAY,EAAE,OAAmB;YAC5D,MAAM,cAAc,AAAA,gEAAe,SAAS;YAC5C,YAAY,OAAO;QACrB;IACF;AACF;AMvDA;;;;AAIA,GAEO,MAAM,kEAAqB,MAAM,KAAK;AACtC,MAAM,kEAAqB,KAAK,KAAK;AAErC,SAAS,gEAAO,GAAW,EAAE,CAAS,EAAE,GAAW;IACxD,OAAO,IAAI,MAAM,MAAO,IAAI,MAAM,MAAM;AAC1C;AAEO,SAAS,gEAAM,CAAS,EAAE,CAAS,EAAE,CAAS;IACnD,IAAI,gEAAM,GAAG,GAAG;IAChB,OAAO,IAAK,CAAA,IAAI,CAAA,IAAK;AACvB;AAEO,MAAM,4CAAW;IACtB,OAAA;IACA,MAAA;AACF;ADnBA,MAAM,mDAAO,CAAC,IAAsB,AAAC,CAAA,OAAO,KAAK,MAAM,OAAO,IAAI,SAAS,GAAA,EAAK,MAAM;AAEtF,MAAM;IAKJ,YAAa,CAAS,EAAE,CAAS,EAAE,CAAS,CAAE;QAC5C,KAAK;QACL,KAAK;QACL,KAAK;QACL,MAAM,IAAI,KAAK,IAAI,GAAG,GAAG;QACzB,MAAM,IAAI,IAAI,KAAK,IAAI,GAAG,GAAG;QAC7B,MAAM,IAAI,MAAM,IACZ,MAAM,IACH,AAAA,CAAA,IAAI,CAAA,IAAK,IACV,MAAM,IACJ,IAAI,AAAC,CAAA,IAAI,CAAA,IAAK,IACd,IAAK,AAAA,CAAA,IAAI,CAAA,IAAK,IAClB;QAEJ,IAAI,CAAC,IAAI,KAAK,IAAI,IAAI,KAAK,IAAI,MAAM,KAAK;QAC1C,IAAI,CAAC,IAAI,MAAM,IAAK,KAAK,MAAM,IAAK,CAAA,IAAI,IAAI,CAAA,IAAK,IAAK,CAAA,IAAK,CAAA,IAAI,IAAI,CAAA,CAAA,IAAO;QAC1E,IAAI,CAAC,IAAK,AAAA,CAAA,IAAI,IAAI,CAAA,IAAK;IACzB;AACF;AAEA,MAAM,mDAAO,WAAW,aAAa,YAAY,WAAW,SAAS,cAAc,UAAU;AACtF,MAAM;IAMX,OAAO,QAAS,IAAY,EAAS;QACnC,IAAI,YAAY;QAChB,IAAI,4DAAgB,iBAAiB;YACnC,iDAAK,MAAM,QAAQ;YACnB,SAAS,KAAK,YAAY;YAC1B,YAAY,iBAAiB,kDAAM;YACnC,iDAAK;QACP;QACA,MAAM,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,UAAU,MAAM;QACrC,OAAO,IAAI,0CAAM,OAAO,IAAI,OAAO,IAAI,OAAO,IAAI,KAAK,OAAO,IAAI,OAAO;IAC3E;IAEA,OAAO,QAAS,CAAS,EAAE,CAAS,EAAE,CAAS,EAAE,IAAI,CAAC,EAAS;QAC7D,OAAO,0CAAM,QAAQ,CAAC,KAAK,EAAE,EAAE,QAAQ,GAAG,EAAE,EAAE,AAAC,CAAA,IAAI,GAAA,EAAK,QAAQ,GAAG,GAAG,EAAE,AAAC,CAAA,IAAI,GAAA,EAAK,QAAQ,GAAG,GAAG,EAAE,EAAE,QAAQ,GAAG,CAAC,CAAC;IACnH;IAEA,YAAa,CAAS,EAAE,CAAS,EAAE,CAAS,EAAE,IAAI,CAAC,CAAE;QACnD,IAAI,CAAC,IAAI,AAAA,gEAAM,GAAG,GAAG;QACrB,IAAI,CAAC,IAAI,AAAA,gEAAM,GAAG,GAAG;QACrB,IAAI,CAAC,IAAI,AAAA,gEAAM,GAAG,GAAG;QACrB,IAAI,CAAC,IAAI,MAAM,YAAY,AAAA,gEAAM,GAAG,GAAG,KAAK,IAAI;IAClD;IAEA,IAAI,UAAkB;QACpB,OAAO,IAAI,0CAAM,MAAM,IAAI,CAAC,GAAG,MAAM,IAAI,CAAC,GAAG,MAAM,IAAI,CAAC,GAAG,IAAI,CAAC;IAClE;IAEA,IAAI,mBAA2B;QAC7B,MAAM,EAAA,GAAE,CAAA,EAAC,GAAE,CAAA,EAAC,GAAE,CAAA,EAAG,GAAG,IAAI,CAAC;QACzB,OAAO,0CAAM,QAAQ,GAAG,GAAG,IAAI,GAAG,IAAI,CAAC;IACzC;IAEA,IAAI,MAAe;QACjB,MAAM,EAAA,GAAE,CAAA,EAAC,GAAE,CAAA,EAAC,GAAE,CAAA,EAAG,GAAG,IAAI;QACxB,OAAO,CAAC,IAAI,EAAE,EAAE,QAAQ,GAAG,CAAC,EAAE,EAAE,QAAQ,GAAG,CAAC,EAAE,EAAE,QAAQ,GAAG,CAAC,CAAC;IAC/D;IAEA,IAAI,OAAgB;QAClB,MAAM,EAAA,GAAE,CAAA,EAAC,GAAE,CAAA,EAAC,GAAE,CAAA,EAAC,GAAE,CAAA,EAAG,GAAG,IAAI;QAC3B,OAAO,CAAC,KAAK,EAAE,EAAE,QAAQ,GAAG,CAAC,EAAE,EAAE,QAAQ,GAAG,CAAC,EAAE,EAAE,QAAQ,GAAG,CAAC,EAAE,EAAE,QAAQ,GAAG,CAAC,CAAC;IAChF;IAEA,IAAI,OAAkB;QACpB,OAAO;YAAC,IAAI,CAAC,IAAI;YAAK,IAAI,CAAC,IAAI;YAAK,IAAI,CAAC,IAAI;YAAK,IAAI,CAAC;SAAE;IAC3D;IAEA,IAAI,OAAkB;QACpB,OAAO;YAAC,IAAI,CAAC;YAAG,IAAI,CAAC,IAAI;YAAK,IAAI,CAAC,IAAI;YAAK,IAAI,CAAC,IAAI;SAAI;IAC3D;IAIA,IAAI,OAAkB;QACpB,IAAI,IAAI,CAAC,cAAc,MACrB,IAAI,CAAC,aAAa,IAAI,qDAAS,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;QAEtD,OAAO,IAAI,CAAC;IACd;IAEA,IAAI,MAAe;QACjB,MAAM,EAAA,GAAE,CAAA,EAAC,GAAE,CAAA,EAAC,GAAE,CAAA,EAAG,GAAG,IAAI,CAAC;QACzB,OAAO,CAAC,IAAI,EAAE,EAAE,QAAQ,GAAG,EAAE,EAAG,AAAA,CAAA,IAAI,GAAA,EAAK,QAAQ,GAAG,GAAG,EAAG,AAAA,CAAA,IAAI,GAAA,EAAK,QAAQ,GAAG,EAAE,CAAC;IACnF;IAEA,IAAI,OAAgB;QAClB,MAAM,EAAA,GAAE,CAAA,EAAC,GAAE,CAAA,EAAC,GAAE,CAAA,EAAG,GAAG,IAAI,CAAC;QACzB,OAAO,CAAC,KAAK,EAAE,EAAE,QAAQ,GAAG,EAAE,EAAE,AAAC,CAAA,IAAI,GAAA,EAAK,QAAQ,GAAG,GAAG,EAAE,AAAC,CAAA,IAAI,GAAA,EAAK,QAAQ,GAAG,GAAG,EAAE,IAAI,CAAC,EAAE,QAAQ,GAAG,CAAC,CAAC;IAC1G;IAEA,IAAI,OAAe;QACjB,MAAM,IAAI,IAAI,CAAC,aAAa;QAC5B,OAAO,IAAI,0CAAM,GAAG,GAAG;IACzB;IAEA,IAAI,aAAsB;QACxB,sCAAsC;QACtC,OAAQ,AAAA,CAAA,QAAQ,IAAI,CAAC,IAAI,QAAQ,IAAI,CAAC,IAAI,QAAQ,IAAI,CAAC,CAAA,IAAK;IAC9D;IAEA,IAAI,OAAgB;QAClB,OAAO,IAAI,CAAC,MAAM,IAAI,MAAM,iDAAK,IAAI,CAAC,KAAK,iDAAK,IAAI,CAAC,KAAK,iDAAK,IAAI,CAAC,KAAK,MAAM,iDAAK,IAAI,CAAC,KAAK,iDAAK,IAAI,CAAC,KAAK,iDAAK,IAAI,CAAC,KAAK,iDAAK,KAAK,MAAM,MAAM,IAAI,CAAC;IACzJ;IAEA,SAAU,MAAc,EAAS;QAC/B,IAAI,EAAA,GAAE,CAAA,EAAC,GAAE,CAAA,EAAC,GAAE,CAAA,EAAG,GAAG,IAAI,CAAC;QACvB,IAAI,AAAA,gEAAM,GAAG,IAAI,SAAU,CAAA,IAAI,CAAA,GAAI;QACnC,OAAO,0CAAM,QAAQ,GAAG,GAAG,GAAG,IAAI,CAAC;IACrC;IAEA,OAAQ,MAAc,EAAS;QAC7B,IAAI,EAAA,GAAE,CAAA,EAAC,GAAE,CAAA,EAAC,GAAE,CAAA,EAAG,GAAG,IAAI,CAAC;QACvB,IAAI,AAAA,gEAAM,GAAG,IAAK,CAAA,IAAI,MAAA,GAAS;QAC/B,OAAO,0CAAM,QAAQ,GAAG,GAAG,GAAG,IAAI,CAAC;IACrC;IAEA,SAAU,MAAc,EAAS;QAC/B,IAAI,EAAA,GAAE,CAAA,EAAC,GAAE,CAAA,EAAC,GAAE,CAAA,EAAG,GAAG,IAAI,CAAC;QACvB,IAAI,AAAA,gEAAM,GAAG,IAAI,SAAU,CAAA,IAAI,CAAA,GAAI;QACnC,OAAO,0CAAM,QAAQ,GAAG,GAAG,GAAG,IAAI,CAAC;IACrC;IAEA,WAAY,MAAc,EAAS;QACjC,IAAI,EAAA,GAAE,CAAA,EAAC,GAAE,CAAA,EAAC,GAAE,CAAA,EAAG,GAAG,IAAI,CAAC;QACvB,IAAI,AAAA,gEAAM,GAAG,IAAK,CAAA,IAAI,MAAA,GAAS;QAC/B,OAAO,0CAAM,QAAQ,GAAG,GAAG,GAAG,IAAI,CAAC;IACrC;IAEA,OAAQ,MAAc,EAAS;QAC7B,IAAI,EAAA,GAAE,CAAA,EAAC,GAAE,CAAA,EAAC,GAAE,CAAA,EAAG,GAAG,IAAI,CAAC;QACvB,IAAK,AAAA,CAAA,IAAI,MAAM,MAAA,IAAU;QACzB,OAAO,0CAAM,QAAQ,GAAG,GAAG,GAAG,IAAI,CAAC;IACrC;IAEA,QAAS,KAAa,EAAS;QAC7B,MAAM,EAAA,GAAE,CAAA,EAAC,GAAE,CAAA,EAAC,GAAE,CAAA,EAAG,GAAG,IAAI,CAAC;QACzB,OAAO,0CAAM,QAAQ,GAAG,GAAG,GAAG;IAChC;IAEA,SAAgB;QACd,MAAM,EAAA,GAAE,CAAA,EAAC,GAAE,CAAA,EAAC,GAAE,CAAA,EAAC,GAAE,CAAA,EAAG,GAAG,IAAI;QAC3B,QAAQ,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,OAAO,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,uBAAuB,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE;IACpI;IAEA,MAAO,UAAiB,EAAE,CAAS,EAAS;QAC1C,OAAO,IAAI,0CACT,AAAA,gEAAK,IAAI,CAAC,GAAG,WAAW,GAAG,IAC3B,AAAA,gEAAK,IAAI,CAAC,GAAG,WAAW,GAAG,IAC3B,AAAA,gEAAK,IAAI,CAAC,GAAG,WAAW,GAAG,IAC3B,AAAA,gEAAK,IAAI,CAAC,GAAG,WAAW,GAAG;IAE/B;AACF;AGvKO,SAAS,+DAAc,CAAS;IACrC,OAAO,EAAE,QAAQ,UAAU,CAAC;QAC1B,OAAO,CAAC,CAAC,EAAE,EAAE,oBAAoB,CAAC;IACpC;AACF;AAEO,SAAS,gEAAc,CAAS;IACrC,OAAO,EAAE,QAAQ,aAAa,CAAC,GAAW;QACxC,OAAO,EAAE;IACX;AACF;AD2HA,MAAM,wDAA4C,CAAC;AAEnD,MAAM,qDAAS,CAAC,SAAiB,GAAG;IAClC,IAAI,qDAAS,CAAC,QAAQ,KAAK,WACzB,qDAAS,CAAC,QAAQ,GAAG,WAAW,SAAS,cAAc;IAEzD,MAAM,MAAM,qDAAS,CAAC,QAAQ,CAAC;IAC/B,MAAM,eAA6B,CAAC;IACpC,KAAK,MAAM,QAAQ,SACjB,IAAI,gBAAgB,WAAW,gBAAgB,oBAAoB,OAAO,SAAS,YAAY,OAAO,SAAS;QAC7G,IAAI,eAAe,qBACjB,IAAI,QAAQ,OAAO;aAEnB,IAAI,OAAO;WAGb,OAAO,OAAO,cAAc;IAGhC,KAAK,MAAM,OAAO,OAAO,KAAK,cAAe;QAC3C,MAAM,QAAa,YAAY,CAAC,IAAI;QACpC,IAAI,QAAQ,SACV,MAAM;aACD,IAAI,QAAQ;YACjB,IAAI,OAAO,UAAU,UAAU;gBAC7B,KAAK,MAAM,QAAQ,OAAO,KAAK,OAC7B,IAAI,KAAK,WAAW,OAClB,IAAI,MAAM,YAAY,MAAM,KAAK,CAAC,KAAK;qBAGvC,IAAI,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK;YAGnC,OACE,IAAI,aAAa,SAAS;eAEvB,IAAI,IAAI,MAAM,eAAe,MAAM;YACxC,MAAM,YAAY,IAAI,UAAU,GAAG;YACnC,0CAAG,KAAK,WAAW;QACrB,OAAO,IAAI,IAAI,MAAM,iBAAiB,MAAM;YAC1C,MAAM,cAAc,IAAI,UAAU,GAAG,GAAG,gBAAgB,IAAI,UAAU;YACtE,MAAM,UAAU,AAAA,yCAAQ,CAAC,YAAY;YACrC,IAAI,YAAY,WACd,AAAA,0CAAK,KAAK,OAAO;iBAEjB,MAAM,IAAI,MAAM,CAAC,EAAE,IAAI,0BAA0B,EAAE,YAAY,eAAe,CAAC;QAEnF,mBAAmB;QACnB,OAAO,IAAI,GAAG,CAAC,IAAI,KAAK,WAEtB,GAAG,CAAC,IAAI,GAAG;aACN;YACL,MAAM,OAAO,AAAA,+DAAa;YAE1B,IAAI,SAAS,SACX,MAAM,MAAM,KAAK,QAAQ,CAAC;gBACxB,IAAI,UAAU,IAAI;YACpB;iBAEK,IAAI,GAAG,CAAC,KAAK,KAAK,WAEvB,GAAG,CAAC,KAAK,GAAG;iBACP,IAAI,OAAO,UAAU,WAC1B,QAAQ,IAAI,aAAa,MAAM,MAAM,IAAI,gBAAgB;iBAEzD,IAAI,aAAa,MAAM;QAE3B;IACF;IACA,OAAO;AACT;AAEA,MAAM,uDAA6C,CAAC,GAAG;IACrD,MAAM,OAAO,WAAW,SAAS;IACjC,KAAK,MAAM,QAAQ,SACjB,KAAK,OAAO;IAEd,OAAO;AACT;AAOO,MAAM,4CAAW,IAAI,MAAM;IAAE,UAAA;AAAS,GAAG;IAC9C,KAAK,MAAM,EAAE,OAAe;QAC1B,UAAU,QAAQ,QAAQ,UAAU,CAAA,IAAK,CAAC,CAAC,EAAE,EAAE,oBAAoB,CAAC;QACpE,IAAI,QAAQ,MAAM,mBAAmB,MACnC,MAAM,IAAI,MAAM,CAAC,EAAE,QAAQ,8CAA8C,CAAC;aAErE,IAAI,MAAM,CAAC,QAAQ,KAAK,WAE7B,MAAM,CAAC,QAAQ,GAAG,CAAC,GAAG,WAA4B,mDAAO,YAAY;QAEvE,mBAAmB;QACnB,OAAO,MAAM,CAAC,QAAQ;IACxB;IACA;QACE,MAAM,IAAI,MAAM;IAClB;AACF;AHrOO,SAAS,gEAAW,UAAyB;IAClD,OAAO,AAAA,0CAAS,MAAM,0CAAI;AAC5B;AAEA,MAAM,2DAAe;IACnB;IAA6B;IAAQ;IAAa;IAAa;IAAe;IAAO;IAAW;IAChG;IAAY;IAAU;IAAW;CAClC;AACD,MAAM,yDAAa,CAAC,aAAqB,SAAiB;IACxD,IAAI,UAAU,WACZ,OAAO;SACF,IAAI,OAAO,UAAU,YAAY,yDAAa,SAAS,UAC5D,OAAO,CAAC,EAAE,YAAY,EAAE,EAAE,QAAQ,EAAE,EAAE,MAAM,CAAC,CAAC;SAE9C,OAAO,CAAC,EAAE,YAAY,EAAE,EAAE,QAAQ,EAAE,EAAE,MAAM,GAAG,CAAC;AAEpD;AAEA,MAAM,8DAAkB,CAAC,KAAa,OAAmD,cAAc,EAAE;IACvG,MAAM,UAAU,AAAA,+DAAa;IAC7B,IAAI,OAAO,UAAU,UAAU;QAC7B,MAAM,eAAe,OAAO,KAAK,OAAO,IAAI,CAAA,WAAY,4DAAgB,UAAU,KAAK,CAAC,SAAS,EAAE,CAAC,EAAE,YAAY,EAAE,CAAC,GAAG,KAAK;QAC7H,OAAO,CAAC,EAAE,YAAY,EAAE,EAAE,IAAI,IAAI,EAAE,aAAa,EAAE,EAAE,YAAY,GAAG,CAAC;IACvE,OACE,OAAO,uDAAW,aAAa,SAAS;AAE5C;AAEO,MAAM,4CAAM,CAAC,KAAkC,cAAc,EAAE;IACpE,MAAM,YAAY,OAAO,KAAK,KAAK,IAAI,CAAC;QACtC,MAAM,OAAO,GAAG,CAAC,SAAS;QAC1B,IAAI,OAAO,SAAS,UAAU;YAC5B,IAAI,aAAa,WACf,OAAO,CAAC,aAAa,EAAE,KAAK,GAAG,CAAC;YAElC,MAAM,IAAI,MAAM;QAClB;QACA,MAAM,OAAO,OAAO,KAAK,MACtB,IAAI,CAAA,OAAQ,4DAAgB,MAAM,IAAI,CAAC,KAAK,GAC5C,KAAK;QACR,OAAO,CAAC,EAAE,YAAY,EAAE,SAAS,IAAI,EAAE,KAAK,GAAG,CAAC;IAClD;IACA,OAAO,UAAU,KAAK;AACxB;AAEO,MAAM,4CAAW,CAAC;IACvB,MAAM,OAAqB,CAAC;IAC5B,KAAK,MAAM,OAAO,OAAO,KAAK,KAAM;QAClC,MAAM,QAAQ,GAAG,CAAC,IAAI;QACtB,MAAM,WAAW,AAAA,+DAAa;QAC9B,IAAI,CAAC,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC,GAAG,OAAO,UAAU,YAAY,UAAU,IAAI,OAAO,SAAS,OAAO;IAC5F;IACA,OAAO;AACT;AAEO,MAAM,4CAAW,CAAC;IACvB,MAAM,OAAqB,CAAC;IAC5B,KAAK,MAAM,OAAO,OAAO,KAAK,KAAM;QAClC,IAAI,QAAQ,GAAG,CAAC,IAAI;QACpB,IAAI,OAAO,UAAU,YAAY,MAAM,MAAM,+BAA+B,MAAM;YAChF,QAAQ,AAAA,0CAAM,QAAQ,OAAO,iBAAiB;YAC9C,IAAI,CAAC,CAAC,EAAE,EAAE,AAAA,+DAAa,KAAK,CAAC,CAAC,GAAG;QACnC;IACF;IACA,OAAO;AACT;AAEO,MAAM,4CAAO,IAAI,MAAiC,CAAC,GAAG;IAC3D,KAAK,MAAM,EAAE,IAAY;QACvB,IAAI,MAAM,CAAC,KAAK,IAAI,MAAM;YACxB,OAAO,KAAK,QAAQ,UAAU,CAAA,IAAK,CAAC,CAAC,EAAE,EAAE,oBAAoB,CAAC;YAC9D,IAAI,GAAE,WAAU,YAAY,WAAW,OAAO,GAAG,KAAK,MAAM;YAC5D,UAAU,CAAC,EAAE,EAAE,QAAQ,CAAC;YACxB,IAAI,aAAa,MAAM;gBACrB,MAAM,QAAQ,cAAc,OAAO,OAAO,aAAa,MAAM,CAAC,OAAO,aAAa;gBAClF,OAAQ;oBACN,KAAK;wBACH;4BACE,MAAM,YAAY,iBAAiB,SAAS,MAAM,iBAAiB;4BACnE,MAAM,CAAC,KAAK,GAAG,QAAQ,IAAI,AAAA,0CAAM,QAAQ,WAAW,SAAS,OAAO,OAAO,AAAA,0CAAM,QAAQ,WAAW,OAAO,CAAC,OAAO;wBACrH;wBACA;oBACF,KAAK;wBACH;4BACE,MAAM,YAAY,iBAAiB,SAAS,MAAM,iBAAiB;4BACnE,MAAM,CAAC,KAAK,GAAG,QAAQ,IAAI,AAAA,0CAAM,QAAQ,WAAW,SAAS,OAAO,OAAO,AAAA,0CAAM,QAAQ,WAAW,WAAW,CAAC,OAAO;wBACzH;wBACA;oBACF,KAAK;wBACH;4BACE,MAAM,YAAY,iBAAiB,SAAS,MAAM,iBAAiB;4BACnE,MAAM,CAAC,KAAK,GAAG,AAAA,0CAAM,QAAQ,WAAW,OAAO,QAAQ,KAAK;4BAC5D,QAAQ,IAAI,AAAA,0CAAM,QAAQ,WAAW,MAAM,AAAA,0CAAM,QAAQ,WAAW,OAAO,OAAO;wBACpF;wBACA;oBACF,KAAK;wBACH;4BACE,MAAM,YAAY,iBAAiB,SAAS,MAAM,iBAAiB;4BACnE,MAAM,CAAC,KAAK,GAAG,AAAA,0CAAM,QAAQ,WAAW,QAAQ,OAAO;wBACzD;wBACA;oBACF,KAAK;wBACH,MAAM,CAAC,KAAK,GAAG,CAAC,SAAS,EAAE,QAAQ,IAAI,EAAE,MAAM,CAAC,CAAC;wBACjD;oBACF;wBACE,QAAQ,MAAM;wBACd,MAAM,IAAI,MAAM,CAAC,oBAAoB,EAAE,OAAO,kBAAkB,EAAE,QAAQ,CAAC;gBAC/E;YACF,OACE,MAAM,CAAC,KAAK,GAAG,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;QAEpC;QACA,OAAO,MAAM,CAAC,KAAK;IACrB;AACF;AK/GA,IAAI,4DAAgB;AAEb,MAAe,kDAAkB;IACtC,OAAO,WAA0B,0CAAQ;IAIzC,UAAoD,AAAA,0CAAS,OAAM;IAKnE,OAAO,UAAW,SAAwB,EAAoB;QAC5D,OAAO,AAAA,0CAAS,MAAM,AAAA,0CAAI;IAC5B;IAEA,OAAO,eAAgB,OAAqD,EAAkB;QAC5F,IAAI,IAAI,CAAC,mBAAmB,MAAM;YAChC,IAAI,aAAa,WAAW,OAAO,QAAQ,MAAM;YACjD,IAAI,cAAc,MAAM;gBACtB,aAAa,AAAA,+DAAa,IAAI,CAAC;gBAC/B,IAAI,WAAW,WAAW,MACxB,aAAa,WAAW,UAAU;gBAEpC,IAAI,CAAC,WAAW,SAAS,MACvB,cAAc;YAElB;YACA,IAAI,WAAW;YACf,MAAO,IAAI,CAAC,mBAAmB,KAAM;gBACnC,YAAY;gBACZ,MAAM,MAAM,aAAa,IAAI,aAAa,CAAC,EAAE,WAAW,CAAC,EAAE,SAAS,CAAC;gBACrE,IAAI;oBACF,OAAO,eAAe,OAAO,KAAK,IAAI,EAAyC;oBAC/E,IAAI,CAAC,kBAAkB,AAAA,yCAAQ,CAAC,IAAI;gBACtC,EAAE,OAAO,GAAG;oBACV,MAAM,IAAI,MAAM,CAAC,iBAAiB,EAAE,IAAI,CAAC,KAAK,KAAK,EAAE,IAAI,GAAG,EAAE,OAAO,GAAG,CAAC;gBAC3E;YACF;QACF;QACA,OAAO,IAAI,CAAC;IACd;IAEA,eAAgB,GAAG,cAAwB,EAAQ;QACjD,MAAM,aAAqC,CAAC;QAC5C,MAAM,kBAAkB,CAAC;QACzB,MAAM,WAAW,IAAI,iBAAiB,CAAC;YACrC,IAAI,gBAAgB;YACpB,cAAc,QAAQ,CAAC;gBACrB,2BAA2B;gBAC3B,gBAAgB,CAAC,CAAE,CAAA,SAAS,iBAAiB,eAAe,SAAS,AAAA,gEAAa,SAAS,eAAa;YAC1G;YACA,IAAI,iBAAiB,IAAI,CAAC,gBAAgB,WAAW,IAAI,CAAC,YAAY;QACxE;QACA,SAAS,QAAQ,IAAI,EAAE;YAAE,YAAY;QAAK;QAC1C,eAAe,QAAQ,CAAA;YACrB,UAAU,CAAC,cAAc,GAAG,AAAA,gEAAU,IAAI,CAAC,cAAc;YACzD,MAAM,iBAAiB,AAAA,+DAAa;YACpC,OAAO,eAAe,IAAI,EAAE,eAAe;gBACzC,YAAY;gBACZ;oBACE,IAAI,OAAO,UAAU,CAAC,cAAc,KAAK,WACvC,OAAO,IAAI,CAAC,aAAa;yBACpB;wBACL,2BAA2B;wBAC3B,IAAI,IAAI,CAAC,aAAa,iBACpB,OAAO,OAAO,UAAU,CAAC,cAAc,KAAK,WACxC,WAAW,IAAI,CAAC,aAAa,mBAC7B,IAAI,CAAC,aAAa;6BAEjB,IAAI,eAAe,CAAC,cAAc,KAAK,WAE5C,OAAO,eAAe,CAAC,cAAc;6BAErC,OAAO,UAAU,CAAC,cAAc;oBAEpC;gBACF;gBACA,KAAK,KAAK;oBACR,IAAI,OAAO,UAAU,CAAC,cAAc,KAAK,WACvC;wBAAA,IAAI,UAAU,IAAI,CAAC,cAAc,EAAE;4BACjC,2BAA2B;4BAC3B,IAAI,OACF,IAAI,CAAC,aAAa,gBAAgB;iCAElC,IAAI,CAAC,gBAAgB;4BAEvB,IAAI,CAAC;wBACP;oBAAA,OACK,IAAI,OAAO,UAAU,CAAC,cAAc,KAAK,UAC9C;wBAAA,IAAI,UAAU,WAAW,IAAI,CAAC,cAAc,GAAG;4BAC7C,IAAI,CAAC,aAAa,gBAAgB;4BAClC,IAAI,CAAC;wBACP;oBAAA,OAEA,IAAI,OAAO,UAAU,YAAY,CAAC,EAAE,MAAgB,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,cAAc,CAAW,CAAC,EAAE;wBAC5F,IAAI,UAAU,QAAQ,UAAU,aAAa,OAAO,UAAU,UAC5D,IAAI,CAAC,gBAAgB;6BAErB,IAAI,CAAC,aAAa,gBAAgB;wBAEpC,IAAI,CAAC;wBACL,mBAAmB;wBACnB,eAAe,CAAC,cAAc,GAAG;oBACnC;gBAEJ;YACF;QACF;IACF;IAEQ,YAAmB;QACzB,MAAM,kBAAkB,OAAO,yBAAyB,IAAI,EAAE;QAC9D,IAAI,oBAAoB,aAAa,gBAAgB,QAAQ,aAAa,gBAAgB,QAAQ,WAChG;QAEF,IAAI,QAAQ,IAAI,CAAC,aAAa,WAAW,IAAI,CAAC,aAAa,WAAW,AAAA,gEAAU,IAAI,CAAC;QACrF,OAAO,IAAI,CAAC;QACZ,OAAO,eAAe,IAAI,EAAE,SAAS;YACnC,YAAY;YACZ;gBACE,OAAO;YACT;YACA,KAAK,QAAa;gBAChB,IAAI,UAAU,UAAU;oBACtB,QAAQ;oBACR,IAAI,CAAC,YAAY;gBACnB;YACF;QACF;IACF;IAGA,IAAI,OAA6C;QAC/C,MAAM,OAAO,IAAI,CAAC,cAAc,OAAO,IAAI,CAAC,aAAa,IAAI;QAC7D,IAAI,IAAI,CAAC,SAAS,MAChB,IAAI,CAAC,QAAQ,IAAI,MAAM,CAAC,GAAG;YACzB,KAAK,MAA2C,EAAE,GAAW;gBAC3D,IAAI,MAAM,CAAC,IAAI,KAAK,WAAW;oBAC7B,IAAI,UAAU,KAAK,cAAc,CAAC,WAAW,EAAE,IAAI,EAAE,CAAC;oBACtD,IAAI,WAAW,MACb,UAAU,KAAK,cAAc;oBAE/B,IAAI,WAAW,MAAM,MAAM,IAAI,MAAM,CAAC,YAAY,EAAE,IAAI,iBAAiB,CAAC;oBAC1E,QAAQ,gBAAgB;oBACxB,MAAM,CAAC,IAAI,GAAG;gBAChB;gBACA,OAAO,MAAM,CAAC,IAAI;YACpB;QACF;QAEF,OAAO,IAAI,CAAC;IACd;IAEA,aAAe;QACb,KAAK;QACL,6DAAiB;QACjB,IAAI,CAAC,eAAe;QACpB,IAAI,CAAC,aAAa,CAAC,EAAE,IAAI,CAAC,QAAQ,oBAAoB,CAAC,EAAE,0DAAc,CAAC;QACxE,IAAI,CAAC,SAAS,AAAA,gEAAU,IAAI,CAAC;IAC/B;IAEA,oBAA2B;QACzB,IAAI,CAAC;QACL,yFAAyF;QACzF,IAAI,IAAI,CAAC,QAAQ,MAAM,IAAI,CAAC,aAAa,QAAQ,IAAI,CAAC;QACtD,IAAI,IAAI,CAAC,aAAa,WAAW;YAC/B,gEAAe,QAAQ,IAAI;YAC3B,IAAI,IAAI,CAAC,aAAa,MACpB,IAAI,CAAC,YAAY,IAAI,CAAC,SAAS,KAAK,IAAI;YAE1C,IAAI,CAAC,iBAAiB,UAAU,IAAI,CAAC;QACvC;QACA,IAAI,IAAI,CAAC,SAAS,QAAQ,IAAI,CAAC,aAAa,YAAY,MACtD,IAAI,CAAC,SAAS,IAAI,CAAC,aAAa;QAElC,IAAI,CAAC;IACP;IAEA,uBAA8B;QAC5B,gEAAe,UAAU,IAAI;IAC/B;IAEQ,gBAAgB,MAAK;IACrB,gBAAgB,MAAK;IAC7B,YAAa,qBAAqB,KAAK,EAAQ;QAC7C,IAAI,CAAC,IAAI,CAAC,WAAW;QACrB,IAAI,CAAC,IAAI,CAAC,eAAe,IAAI,CAAC,gBAAgB;QAC9C,IAAI,CAAC,IAAI,CAAC,eAAe;YACvB,IAAI,CAAC,gBAAgB;YACrB,sBAAsB;gBACpB,4EAA4E;gBAC5E,8CAA8C;gBAC9C,IAAI,IAAI,CAAC,eAAe,AAAA,gEAAS,IAAI,EAAE;gBACvC,IAAI,CAAC,gBAAgB;gBACrB,IAAI,CAAC,gBAAgB;gBACrB,IAAI,CAAC;YACP;QACF;IACF;IAEQ,YAAY,MAAK;IACjB,UAAiB;QACvB,IAAI,CAAC,IAAI,CAAC,WAAW;YACnB,IAAI,CAAC;YACL,MAAM,WAA+B,OAAO,IAAI,CAAC,YAAY,aAAa,IAAI,CAAC,YAAY,IAAI,CAAC;YAChG,IAAI,IAAI,CAAC,cAAc,WAAW;gBAChC,MAAM,SAAS,IAAI,CAAC,aAAa;oBAAE,MAAM;gBAAO;gBAChD,OAAO,YAAY,IAAI,CAAC;gBACxB,+DAAuB,QAAQ;YACjC,OAAO;gBACL,MAAM,mBAAmB;uBAAI,IAAI,CAAC;iBAAW;gBAC7C,IAAI,AAAA,+DAAuB,IAAI,EAAiB,aAAc,iBAAiB,SAAS,GAAI;oBAC1F,MAAM,UAAsC;wBAAE,IAAI,IAAI;oBAAC;oBACtD;2BAAI,IAAI,CAAC,iBAAiB;qBAAY,CAAC,QAAQ,CAAA;wBAC9C,mBAAmB;wBACnB,OAAO,CAAC,KAAK,KAAK,GAAG;oBACvB;oBACA,iBAAiB,QAAQ,CAAA;wBACvB,MAAM,cAAc,OAAO,CAAC,GAAG;wBAC/B,MAAM,WAAW,iBAAiB,UAAU,OAAO,CAAC,MAAM,KAAK,GAAG;wBAChE,CAAA,aAAa,YAAY,WAAW,WAAA,EAAa,OAAO;oBAC5D;gBACF;YACF;YACA,IAAI,CAAC,YAAY;QACnB;IACF;IAEA,SAAgB,CAAC;AACnB;AAEA,MAAM,4DAAgB;IACpB,OAAO,GAAE;IACT,UAAU,KAAI;IAEd,aAAe;QACb,KAAK;QACL,IAAI,CAAC,eAAe;IACtB;AACF;AAEO,MAAM,kEAAU,oDAAQ,eAAe;IAAE,KAAK;AAAW;ACnPzD,MAAM,4CAAY,CAAC,OAAyB,IAAM,IAAI;IAC3D,MAAM,aAAa,aAAa,QAAQ;IACxC,IAAI,cAAc,MAAM;QACtB,MAAM,QAAQ,KAAK,MAAM;QACzB,KAAK,MAAM,OAAO,OAAO,KAAK,OAAO,OAAO,MAC1C,IAAI,AAAA,yCAAG,CAAC,IAAI,KAAK,WACf,OAAO,OAAO,AAAA,yCAAG,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI;aAElC,AAAA,yCAAG,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI;IAG3B;IAEA,MAAM,YAAY,AAAA,0CAAS;QACzB,MAAM,MAAiB,CAAC;QACxB,MAAM,QAAQ,AAAA,yCAAG,CAAC,gEAAU;QAC5B,KAAK,MAAM,OAAO,OAAO,KAAK,OAAO,OAAO,MAC1C,GAAG,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI;QAEvB,aAAa,QAAQ,aAAa,KAAK,UAAU;QACjD,QAAQ,IAAI;IACd,GAAG;IAEH,0CAAQ,MAAM;AAChB;A,I,kD,C;AE5BO,SAAS,0CAAwB,GAAM;IAC5C,MAAM,aAAqC,CAAC;IAC5C,OAAO,KAAK,KAAK,QAAQ,CAAC;QAExB,yCAAG,CAAC,IAAI,GAAG,GAA6B,CAAC,IAAI;QAC7C,UAAU,CAAC,IAAI,GAAG,AAAA,yCAAG,CAAC,IAAI;IAC5B;IACA,OAAO;AACT;;;ACXA,MAAM,gCAAU,IAAI;AASb,MAAM,4CAAwB,KAAK,kBAAkB,YAAY,IAAI,CAAA;IAC1E,mBAAmB;IACnB,MAAM,SAAS,OAAO,KAAK,eAAe,SAAS;QACjD,MAAM;QACN,QAAQ;QACR,cAAc;QACd,UAAU;IACZ,GAAG,OAAO,+BAAS,MAAM,OAAO,MAAM,QAAQ,QAAQ;IAEtD,MAAM,OAAO,KAAK,eAAe,SAAS;QACxC,MAAM;QACN,QAAQ;QACR,cAAc;QACd,UAAU;IACZ,GAAG,OAAO,+BAAS,MAAM,KAAK;IAE9B,OAAO;cACL;cACA;gBACA;IACF;AACF;AAEO,MAAM,4CAAgB,0CAAU,KAAK,CAAA,IAAK,EAAE,SAAS,KAAK,iBAAiB,kBAAkB;;;ACvB7F,MAAM,4CAAoB;IAC/B;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;IACA;QACI,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,MAAM;IACV;CAAE;;;AzB7hHJ,MAAM,YAAC,8BAAQ,OAAE,yBAAG,UAAE,4BAAM,SAAE,2BAAK,YAAE,8BAAQ,EAAC,GAAG,CAAA,GAAA,yCAAO;AAExD,MAAM,kCAAY;AAClB,MAAM,oCAAc;AAEpB,MAAM,+BAAS,CAAC,KAAyB,CAAC,EAAE,GAAG,KAAK,QAAQ,MAAM,KAAK,IAAI,EAAE,GAAG,SAAS,IAAI,MAAM,GAAG,EAAE,GAAG,WAAW,IAAI,GAAG,SAAS,GAAG,CAAC;AAE1I,MAAM,kCAAY,OAAO;AAEzB,MAAM,oCAAc;IAClB,MAAM,MAAM,SAAS,gBAAgB,iCAAW;IAChD,IAAI,aAAa,WAAW;IAC5B,IAAI,UACC,CAAA,GAAA,yCAAM,EAAE,IAAI,CAAA;QACb,MAAM,UAAU,SAAS,gBAAgB,iCAAW;QACpD,QAAQ,aAAa,UAAU,OAAO;QACtC,OAAO,CAAC,gCAAU,GAAG;QACrB,OAAO;IACT;IAEF,OAAO;AACT;AAEA,MAAM,yCAAmB,+BACvB;IAAE,IAAI;AAAY,MACf,CAAA,GAAA,yCAAQ,EAAE,IAAI,CAAA,KAAM,6BAAO;QAAC,OAAO,6BAAO;IAAG;AAG3C,MAAM,kDAAuB,CAAA,GAAA,yCAAW;IAC7C,QAAQ,CAAA,GAAA,yCAAY,EAAE,KAAI;IAE1B,WAAW,6BAAO,CAAA,GAAA,yCAAY,GAAE;IAEhC,IAAI,OAAkB;QACpB,OAAO,CAAA,GAAA,yCAAQ,EAAE,KAAK,CAAA,KAAM,6BAAO,QAAQ,IAAI,CAAC;IAClD;IAEA,IAAI,SAA8B;QAChC,MAAM,QAAC,IAAI,EAAC,GAAG,IAAI,CAAC;QACpB,OAAO,CAAA,GAAA,yCAAM,EAAE,KAAK,CAAA,KAAM,GAAG,aAAa;IAC5C;IAEA,YAAY,CAAA,GAAA,yCAAW,EAAE,UAAU;QACjC,SAAS;YACP,SAAS;YACT,eAAe;YACf,UAAU;YACV,OAAO,CAAC,6BAA6B,CAAC;YACtC,QAAQ,CAAC,6BAA6B,CAAC;YACvC,YAAY;QACd;QACA,QAAQ;YACN,YAAY;QACd;QACA,aAAa;YACX,OAAO;YACP,QAAQ;QACV;QACA,WAAW;YACT,YAAY;YACZ,MAAM;QACR;QACA,iBAAiB;YACf,MAAM;QACR;QACA,kBAAkB;YAChB,MAAM;QACR;QACA,cAAc;YACZ,UAAU;YACV,QAAQ,CAAC,kBAAkB,CAAC;YAC5B,MAAM,CAAC,kBAAkB,CAAC;YAC1B,OAAO,CAAC,kBAAkB,CAAC;YAC3B,OAAO;YACP,UAAU;YACV,SAAS,CAAC,0BAA0B,CAAC;YACrC,YAAY;YACZ,cAAc;YACd,WAAW;YACX,QAAQ;YACR,SAAS;QACX;IACF,GAAE;IAEF,UAAU,+BACR,0BAAI;QAAC,OAAO;QAAO,SAAS;IAAK,IACjC,4BAAM;QACJ,OAAO;QACP,SAAS;QACT,MAAM;IACR,IACA,wCACD;IAED,aAAc;QACZ,KAAK;QACL,IAAI,CAAC,eAAe;IACtB;IAEA,OAAO,eAAe,MAAc,EAAwB;QAC1D,OAAO,CAAA,GAAA,yCAAQ,EAAE,KAAK,CAAA,KAAM,GAAG,SAAS,OAAO,aAAa,CAAA,GAAA,yCAAQ,EAAE,KAAK,CAAA,KAAM,GAAG,WAAW,OAAO;IACxG;IAEA,aAAa,CAAC;QACZ,MAAM,cAAC,UAAU,EAAC,GAAG,IAAI,CAAC;QAC1B,mBAAmB;QACnB,MAAM,SAAS,MAAM,MAAM,CAAC,gCAAU;QACtC,IAAI,WAAW,WACb;QAEF,MAAM,OAAO,0CAAe,eAAe;QAC3C,IAAI,SAAS,WAAW;YACtB,WAAW,QAAQ,IAAI,CAAC,WAAW,6BAAO;YAC1C,IAAI,CAAC,QAAQ,KAAK;QACpB;IACF,EAAC;IAED,OAAO,WAAW,EAAU,EAAwB;QAClD,OAAO,CAAA,GAAA,yCAAQ,EAAE,KAAK,CAAA,KAAM,OAAO,6BAAO;IAC5C;IAEA,WAAW,CAAC;QACV,MAAM,cAAC,UAAU,EAAC,GAAG,IAAI,CAAC;QAC1B,mBAAmB;QACnB,MAAM,KAAK,MAAM,OAAO;QACxB,MAAM,OAAO,0CAAe,WAAW;QACvC,IAAI,SAAS,WAAW;YACtB,IAAI,CAAC,WAAW,WAAW;YAC3B,IAAI,CAAC,QAAQ,KAAK;QACpB,OACE,WAAW,QAAQ,IAAI,CAAC;IAE5B,EAAC;IAED,oBAAoB;QAClB,KAAK,CAAC;QAEN,MAAM,OAAC,GAAG,cAAE,UAAU,EAAC,GAAG,IAAI,CAAC;QAC/B,WAAW,aAAa,QAAQ;QAChC,IAAI,IAAI,cAAc,WAAW,MAC/B,IAAI,OAAO;QAEb,IAAI,iBAAiB,SAAS,IAAI,CAAC;QACnC,WAAW,iBAAiB,UAAU,IAAI,CAAC;IAC7C;IAEQ,WAAW;QACjB,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,KAAK,MAAM;YACjC,MAAM,UAAU,CAAA,GAAA,yCAAQ,EAAE,KAAK,CAAA,KAAM,GAAG,SAAS,IAAI,CAAC;YACtD,IAAI,YAAY,WACd,IAAI,CAAC,WAAW,6BAAO;iBAEvB,IAAI,CAAC,QAAQ,IAAI,CAAC,KAAK;QAE3B;IACF;IAEA,SAAS;QACP,IAAI,CAAC;QAEL,MAAM,UAAC,MAAM,EAAC,GAAG,IAAI;QACrB,MAAM,cAAC,UAAU,OAAE,GAAG,EAAC,GAAG,IAAI,CAAC;QAC/B,QAAQ,IAAI,QAAQ,IAAI,CAAC;QACxB;eAAI,IAAI,iBAAiB,CAAC,OAAO,CAAC;SAAE,CAAC,QAAQ,CAAA;YAC5C,MAAM,KAAK,OAAO,CAAC,gCAAU;YAC7B,QAAQ,UAAU,OAAO,UAAU,OAAO,UAAW,GAAG,SAAS,QAAQ,QAAQ,GAAG,WAAW,QAAQ;QACzG;QACA,WAAW,QAAQ,IAAI,CAAC;IAC1B;AACF;AAEO,MAAM,2CAAiB,0CAAe,eAAe;IAAC,KAAK;AAAiB","sources":["src/index.ts","src/timezone-picker.ts","node_modules/xinjs/dist/module.js","node_modules/xinjs/dist/src/index.ts","node_modules/xinjs/dist/src/bind.ts","node_modules/xinjs/dist/src/xin.ts","node_modules/xinjs/dist/src/settings.ts","node_modules/xinjs/dist/src/path-listener.ts","node_modules/xinjs/dist/src/metadata.ts","node_modules/xinjs/dist/src/deep-clone.ts","node_modules/xinjs/dist/src/by-path.ts","node_modules/xinjs/dist/src/make-error.ts","node_modules/xinjs/dist/src/bindings.ts","node_modules/xinjs/dist/src/list-binding.ts","node_modules/xinjs/dist/src/dom.ts","node_modules/xinjs/dist/src/throttle.ts","node_modules/xinjs/dist/src/css.ts","node_modules/xinjs/dist/src/color.ts","node_modules/xinjs/dist/src/more-math.ts","node_modules/xinjs/dist/src/elements.ts","node_modules/xinjs/dist/src/string-case.ts","node_modules/xinjs/dist/src/component.ts","node_modules/xinjs/dist/src/hot-reload.ts","node_modules/xinjs/dist/src/xin-types.ts","node_modules/xinjs/dist/src/xin-proxy.ts","src/timezones.ts","src/regions.ts"],"sourcesContent":["export { timezonePicker, TimezonePicker } from './timezone-picker'\nexport { timezones, localTimezone } from './timezones'","import { Component as WebComponent, elements } from 'xinjs'\nimport { localTimezone, timezones, Timezone } from './timezones'\nimport { regions, Region } from './regions'\n\nconst {fragment, div, option, input, datalist} = elements\n\nconst SVG_XMLNS = 'http://www.w3.org/2000/svg'\nconst DATALIST_ID = '-timezone-list-'\n\nconst zoneId = (tz: Timezone): string => `${tz.name.replace(/_/g, ' ')} GMT${tz.offset > 0 ? '+' : ''}${tz.offset !== 0 ? tz.offset : ''}`\n\nconst regionKey = Symbol('region')\n\nconst timezoneMap = (): any => {\n  const svg = document.createElementNS(SVG_XMLNS, 'svg')\n  svg.setAttribute('viewBox', '0 0 500 250')\n  svg.append(\n    ...regions.map(region => {\n      const polygon = document.createElementNS(SVG_XMLNS, 'polygon')\n      polygon.setAttribute('points', region.points)\n      polygon[regionKey] = region\n      return polygon\n    })\n  )\n  return svg\n}\n\nconst timezoneDatalist = datalist(\n  { id: DATALIST_ID },\n  ...timezones.map(tz => option({value: zoneId(tz)}))\n)\n\nexport class TimezonePicker extends WebComponent {\n  value = localTimezone.name\n\n  timezone = zoneId(localTimezone)\n\n  get zone() : Timezone {\n    return timezones.find(tz => zoneId(tz) === this.timezone) as Timezone\n  }\n\n  get region() : Region | undefined {\n    const {name} = this.zone\n    return regions.find(rg => rg.timezone === name)\n  }\n\n  styleNode = WebComponent.StyleNode({\n    ':host': {\n      display: 'flex',\n      flexDirection: 'column',\n      position: 'relative',\n      width: `calc(500px * var(--scale, 1))`,\n      height: `calc(250px * var(--scale, 1))`,\n      fontFamily: 'var(--font-family, Sans-serif)',\n    },\n    '.map': {\n      background: 'var(--map-ocean, #79b)'\n    },\n    '.map, svg': {\n      width: '100%',\n      height: '100%'\n    },\n    'polygon': {\n      transition: 'var(--transition, ease-out 0.2s)',\n      fill: 'var(--map-land, #555)',\n    },\n    'polygon:hover': {\n      fill: 'var(--hover-color, #777)',\n    },\n    'polygon.active': {\n      fill: 'var(--active-color, #999)',\n    },\n    '.zone-name': {\n      position: 'absolute',\n      bottom: `var(--inset, 10px)`,\n      left: `var(--inset, 10px)`,\n      right: `var(--inset, 10px)`,\n      color: 'var(--font-color, white)',\n      fontSize: 'var(--font-size, 16px)',\n      padding: `calc(var(--padding, 10px))`,\n      background: 'var(--input-bg, #fff4)',\n      borderRadius: 'var(--input-radius, 5px)',\n      textAlign: 'center',\n      border: 'none',\n      outline: 'none',\n    },\n  })\n\n  content = fragment(\n    div({class: 'map', dataRef: 'map'}),\n    input({\n      class: 'zone-name',\n      dataRef: 'zonePicker',\n      list: DATALIST_ID,\n    }),\n    timezoneDatalist\n  )\n\n  constructor() {\n    super()\n    this.initAttributes('timezone')\n  }\n\n  static zoneFromRegion(region: Region): Timezone | undefined {\n    return timezones.find(tz => tz.name === region.timezone) || timezones.find(tz => tz.offset === region.offset)\n  }\n\n  pickRegion = (event: Event): void => {\n    const {zonePicker} = this.refs\n    // @ts-expect-error\n    const region = event.target[regionKey]\n    if (region === undefined) {\n      return\n    }\n    const zone = TimezonePicker.zoneFromRegion(region)\n    if (zone !== undefined) {\n      zonePicker.value = this.timezone = zoneId(zone)\n      this.value = zone.name\n    }\n  }\n\n  static zoneFromId(id: string): Timezone | undefined {\n    return timezones.find(tz => id === zoneId(tz))\n  }\n\n  pickZone = (event: Event): void => {\n    const {zonePicker} = this.refs\n    // @ts-expect-error\n    const id = event.target.value\n    const zone = TimezonePicker.zoneFromId(id)\n    if (zone !== undefined) {\n      this.timezone = zonePicker.value\n      this.value = zone.name\n    } else {\n      zonePicker.value = this.timezone\n    }\n  }\n\n  connectedCallback() {\n    super.connectedCallback()\n\n    const {map, zonePicker} = this.refs\n    zonePicker.setAttribute('list', DATALIST_ID)\n    if (map.querySelector('svg') === null) {\n      map.append(timezoneMap())\n    }\n    map.addEventListener('click', this.pickRegion)\n    zonePicker.addEventListener('change', this.pickZone)\n  }\n\n  private validate() {\n    if (this.value !== this.zone.name) {\n      const newZone = timezones.find(tz => tz.name === this.value)\n      if (newZone !== undefined) {\n        this.timezone = zoneId(newZone)\n      } else {\n        this.value = this.zone.name\n      }\n    }\n  }\n\n  render() {\n    this.validate()\n\n    const {region} = this\n    const {zonePicker, map} = this.refs\n    console.log(region, this.value)\n    ;[...map.querySelectorAll(`polygon`)].forEach(polygon => {\n      const rg = polygon[regionKey] as Region\n      polygon.classList.toggle('active', rg === region || (rg.abbr === region?.abbr && rg.offset === region?.offset))\n    })\n    zonePicker.value = this.timezone\n  }\n}\n\nexport const timezonePicker = TimezonePicker.elementCreator({tag: 'timezone-picker'})","/*\n  Note that re-exported types should be explicitly and separately exported\n  as types because of issues with parceljs\n\n  The error messages will be very perplexing\n\n  https://github.com/parcel-bundler/parcel/issues/4796\n  https://github.com/parcel-bundler/parcel/issues/4240\n  https://devblogs.microsoft.com/typescript/announcing-typescript-3-8/#type-only-imports-exports\n*/ const $34b63e9d5b96494c$export$a5a6e0b888b2c992 = {\n    debug: false,\n    perf: false\n};\n\n\nfunction $5165f04a46b33615$export$b7d58db314e0ac27(obj) {\n    if (obj == null || typeof obj !== \"object\") return obj;\n    if (Array.isArray(obj)) // @ts-expect-error-error\n    return obj.map($5165f04a46b33615$export$b7d58db314e0ac27);\n    const clone = {};\n    for(const key in obj){\n        const val = obj[key];\n        if (obj != null && typeof obj === \"object\") clone[key] = $5165f04a46b33615$export$b7d58db314e0ac27(val);\n        else clone[key] = val;\n    }\n    return clone;\n}\n\n\nconst $e921b0bd4f6415ab$export$c6592bbc1eebb717 = \"-xin-data\";\nconst $e921b0bd4f6415ab$export$4c0223f67078aeac = `.${$e921b0bd4f6415ab$export$c6592bbc1eebb717}`;\nconst $e921b0bd4f6415ab$export$6a7099543a9795c7 = \"-xin-event\";\nconst $e921b0bd4f6415ab$export$21d9322c3477441b = `.${$e921b0bd4f6415ab$export$6a7099543a9795c7}`;\nconst $e921b0bd4f6415ab$export$a3622eb3b5dd592a = Symbol(\"xin-path\");\nconst $e921b0bd4f6415ab$export$bdd0d039ad781534 = Symbol(\"xin-value\");\nconst $e921b0bd4f6415ab$export$40700dafb97c3799 = (x)=>{\n    return x[$e921b0bd4f6415ab$export$a3622eb3b5dd592a];\n};\nfunction $e921b0bd4f6415ab$export$5dcba2d45033d435(x) {\n    // eslint-disable-next-line\n    return typeof x === \"object\" && x !== null ? x[$e921b0bd4f6415ab$export$bdd0d039ad781534] || x : x;\n}\nconst $e921b0bd4f6415ab$export$fe712848e6e66613 = new WeakMap();\nconst $e921b0bd4f6415ab$export$1f922de8d0ecbb7e = new WeakMap();\nconst $e921b0bd4f6415ab$export$4cac8128ba61a55f = (element)=>{\n    return {\n        eventBindings: $e921b0bd4f6415ab$export$fe712848e6e66613.get(element),\n        dataBindings: $e921b0bd4f6415ab$export$1f922de8d0ecbb7e.get(element)\n    };\n};\nconst $e921b0bd4f6415ab$export$fa8cc6a36b1ccd7f = (element)=>{\n    const cloned = element.cloneNode();\n    if (cloned instanceof HTMLElement) {\n        const dataBindings = $e921b0bd4f6415ab$export$1f922de8d0ecbb7e.get(element);\n        const eventHandlers = $e921b0bd4f6415ab$export$fe712848e6e66613.get(element);\n        if (dataBindings != null) // @ts-expect-error-error\n        $e921b0bd4f6415ab$export$1f922de8d0ecbb7e.set(cloned, (0, $5165f04a46b33615$export$b7d58db314e0ac27)(dataBindings));\n        if (eventHandlers != null) // @ts-expect-error-error\n        $e921b0bd4f6415ab$export$fe712848e6e66613.set(cloned, (0, $5165f04a46b33615$export$b7d58db314e0ac27)(eventHandlers));\n    }\n    for (const node of element instanceof HTMLTemplateElement ? element.content.childNodes : element.childNodes)if (node instanceof HTMLElement || node instanceof DocumentFragment) cloned.appendChild($e921b0bd4f6415ab$export$fa8cc6a36b1ccd7f(node));\n    else cloned.appendChild(node.cloneNode());\n    return cloned;\n};\nconst $e921b0bd4f6415ab$export$86caed35dd837d06 = new WeakMap();\nconst $e921b0bd4f6415ab$export$4c309843c07ce679 = (element)=>{\n    const html = document.body.parentElement;\n    while(element.parentElement != null && element.parentElement !== html){\n        const item = $e921b0bd4f6415ab$export$86caed35dd837d06.get(element);\n        if (item != null) return item;\n        element = element.parentElement;\n    }\n    return false;\n};\n\n\n\nconst $f0b099915f91bd21$export$253d09664e30b967 = Symbol(\"observer should be removed\");\nconst $f0b099915f91bd21$export$58bed631278dbc67 = [] // { path_string_or_test, callback }\n;\nconst $f0b099915f91bd21$var$touchedPaths = [];\nlet $f0b099915f91bd21$var$updateTriggered = false;\nlet $f0b099915f91bd21$var$updatePromise;\nlet $f0b099915f91bd21$var$resolveUpdate;\nclass $f0b099915f91bd21$export$c92b1d5f43586026 {\n    constructor(test, callback){\n        const callbackDescription = typeof callback === \"string\" ? `\"${callback}\"` : `function ${callback.name}`;\n        let testDescription;\n        if (typeof test === \"string\") {\n            this.test = (t)=>typeof t === \"string\" && t !== \"\" && (test.startsWith(t) || t.startsWith(test));\n            testDescription = `test = \"${test}\"`;\n        } else if (test instanceof RegExp) {\n            this.test = test.test.bind(test);\n            testDescription = `test = \"${test.toString()}\"`;\n        } else if (test instanceof Function) {\n            this.test = test;\n            testDescription = `test = function ${test.name}`;\n        } else throw new Error(\"expect listener test to be a string, RegExp, or test function\");\n        this.description = `${testDescription}, ${callbackDescription}`;\n        if (typeof callback === \"function\") this.callback = callback;\n        else throw new Error(\"expect callback to be a path or function\");\n        $f0b099915f91bd21$export$58bed631278dbc67.push(this);\n    }\n}\nconst $f0b099915f91bd21$export$1c2919332513559b = async ()=>{\n    if ($f0b099915f91bd21$var$updatePromise === undefined) return;\n    await $f0b099915f91bd21$var$updatePromise;\n};\nconst $f0b099915f91bd21$var$update = ()=>{\n    if ((0, $34b63e9d5b96494c$export$a5a6e0b888b2c992).perf) console.time(\"xin async update\");\n    const paths = [\n        ...$f0b099915f91bd21$var$touchedPaths\n    ];\n    for (const path of paths)$f0b099915f91bd21$export$58bed631278dbc67.filter((listener)=>{\n        let heard;\n        try {\n            heard = listener.test(path);\n        } catch (e) {\n            throw new Error(`Listener ${listener.description} threw \"${e}\" at \"${path}\"`);\n        }\n        if (heard === $f0b099915f91bd21$export$253d09664e30b967) {\n            $f0b099915f91bd21$export$23a2283368c55ea2(listener);\n            return false;\n        }\n        return heard;\n    }).forEach((listener)=>{\n        let outcome;\n        try {\n            outcome = listener.callback(path);\n        } catch (e) {\n            console.error(`Listener ${listener.description} threw \"${e}\" handling \"${path}\"`);\n        }\n        if (outcome === $f0b099915f91bd21$export$253d09664e30b967) $f0b099915f91bd21$export$23a2283368c55ea2(listener);\n    });\n    $f0b099915f91bd21$var$touchedPaths.splice(0);\n    $f0b099915f91bd21$var$updateTriggered = false;\n    if (typeof $f0b099915f91bd21$var$resolveUpdate === \"function\") $f0b099915f91bd21$var$resolveUpdate();\n    if ((0, $34b63e9d5b96494c$export$a5a6e0b888b2c992).perf) console.timeEnd(\"xin async update\");\n};\nconst $f0b099915f91bd21$export$d0b7ea69ab6056df = (touchable)=>{\n    const path = typeof touchable === \"string\" ? touchable : (0, $e921b0bd4f6415ab$export$40700dafb97c3799)(touchable);\n    if (path === undefined) {\n        console.error(\"touch was called on an invalid target\", touchable);\n        throw new Error(\"touch was called on an invalid target\");\n    }\n    if ($f0b099915f91bd21$var$updateTriggered === false) {\n        $f0b099915f91bd21$var$updatePromise = new Promise((resolve)=>{\n            $f0b099915f91bd21$var$resolveUpdate = resolve;\n        });\n        $f0b099915f91bd21$var$updateTriggered = setTimeout($f0b099915f91bd21$var$update);\n    }\n    if ($f0b099915f91bd21$var$touchedPaths.find((touchedPath)=>path.startsWith(touchedPath)) == null) $f0b099915f91bd21$var$touchedPaths.push(path);\n};\nconst $f0b099915f91bd21$export$d1203567a167490e = (test, callback)=>{\n    return new $f0b099915f91bd21$export$c92b1d5f43586026(test, callback);\n};\nconst $f0b099915f91bd21$export$23a2283368c55ea2 = (listener)=>{\n    const index = $f0b099915f91bd21$export$58bed631278dbc67.indexOf(listener);\n    if (index > -1) $f0b099915f91bd21$export$58bed631278dbc67.splice(index, 1);\n    else throw new Error(\"unobserve failed, listener not found\");\n};\n\n\n// unique tokens passed to set by path to delete or create properties\nconst $31366a4b885eb48b$var$stringify = (x)=>{\n    try {\n        return JSON.stringify(x);\n    } catch (_) {\n        return \"{has circular references}\";\n    }\n};\nconst $31366a4b885eb48b$export$5a4bb2b1c89bdce7 = (...messages)=>new Error(messages.map($31366a4b885eb48b$var$stringify).join(\" \"));\n\n\nconst $c62be31ef05b0c90$var$now36 = ()=>new Date(parseInt(\"1000000000\", 36) + Date.now()).valueOf().toString(36).slice(1);\nlet $c62be31ef05b0c90$var$_seq = 0;\nconst $c62be31ef05b0c90$var$seq = ()=>(parseInt(\"10000\", 36) + ++$c62be31ef05b0c90$var$_seq).toString(36).slice(-5);\nconst $c62be31ef05b0c90$var$id = ()=>$c62be31ef05b0c90$var$now36() + $c62be31ef05b0c90$var$seq();\nconst $c62be31ef05b0c90$var$_delete_ = {};\nconst $c62be31ef05b0c90$var$_newObject_ = {};\nfunction $c62be31ef05b0c90$export$f5d2dd4cfd729958(path) {\n    if (path === \"\") return [];\n    if (Array.isArray(path)) return path;\n    else {\n        const parts = [];\n        while(path.length > 0){\n            let index = path.search(/\\[[^\\]]+\\]/);\n            if (index === -1) {\n                parts.push(path.split(\".\"));\n                break;\n            } else {\n                const part = path.slice(0, index);\n                path = path.slice(index);\n                if (part !== \"\") parts.push(part.split(\".\"));\n                index = path.indexOf(\"]\") + 1;\n                parts.push(path.slice(1, index - 1));\n                // handle paths dereferencing array element like foo[0].id\n                if (path.slice(index, index + 1) === \".\") index += 1;\n                path = path.slice(index);\n            }\n        }\n        return parts;\n    }\n}\nconst $c62be31ef05b0c90$var$idPathMaps = new WeakMap();\nfunction $c62be31ef05b0c90$var$buildIdPathValueMap(array, idPath) {\n    if ($c62be31ef05b0c90$var$idPathMaps.get(array) === undefined) $c62be31ef05b0c90$var$idPathMaps.set(array, {});\n    if ($c62be31ef05b0c90$var$idPathMaps.get(array)[idPath] === undefined) $c62be31ef05b0c90$var$idPathMaps.get(array)[idPath] = {};\n    const map = $c62be31ef05b0c90$var$idPathMaps.get(array)[idPath];\n    if (idPath === \"_auto_\") array.forEach((item, idx)=>{\n        if (item._auto_ === undefined) item._auto_ = $c62be31ef05b0c90$var$id();\n        map[item._auto_ + \"\"] = idx;\n    });\n    else array.forEach((item, idx)=>{\n        map[$c62be31ef05b0c90$export$44b5bed83342a92f(item, idPath) + \"\"] = idx;\n    });\n    return map;\n}\nfunction $c62be31ef05b0c90$var$getIdPathMap(array, idPath) {\n    if ($c62be31ef05b0c90$var$idPathMaps.get(array) === undefined || $c62be31ef05b0c90$var$idPathMaps.get(array)[idPath] === undefined) return $c62be31ef05b0c90$var$buildIdPathValueMap(array, idPath);\n    else return $c62be31ef05b0c90$var$idPathMaps.get(array)[idPath];\n}\nfunction $c62be31ef05b0c90$var$keyToIndex(array, idPath, idValue) {\n    idValue = idValue + \"\";\n    let idx = $c62be31ef05b0c90$var$getIdPathMap(array, idPath)[idValue];\n    if (idx === undefined || $c62be31ef05b0c90$export$44b5bed83342a92f(array[idx], idPath) + \"\" !== idValue) idx = $c62be31ef05b0c90$var$buildIdPathValueMap(array, idPath)[idValue];\n    return idx;\n}\nfunction $c62be31ef05b0c90$var$byKey(obj, key, valueToInsert) {\n    if (obj[key] === undefined && valueToInsert !== undefined) obj[key] = valueToInsert;\n    return obj[key];\n}\nfunction $c62be31ef05b0c90$var$byIdPath(array, idPath, idValue, valueToInsert) {\n    let idx = idPath !== \"\" ? $c62be31ef05b0c90$var$keyToIndex(array, idPath, idValue) : idValue;\n    if (valueToInsert === $c62be31ef05b0c90$var$_delete_) {\n        array.splice(idx, 1);\n        $c62be31ef05b0c90$var$idPathMaps.delete(array);\n        return Symbol(\"deleted\");\n    } else if (valueToInsert === $c62be31ef05b0c90$var$_newObject_) {\n        if (idPath === \"\" && array[idx] === undefined) array[idx] = {};\n    } else if (valueToInsert !== undefined) {\n        if (idx !== undefined) array[idx] = valueToInsert;\n        else if (idPath !== \"\" && $c62be31ef05b0c90$export$44b5bed83342a92f(valueToInsert, idPath) + \"\" === idValue + \"\") {\n            array.push(valueToInsert);\n            idx = array.length - 1;\n        } else throw new Error(`byIdPath insert failed at [${idPath}=${idValue}]`);\n    }\n    return array[idx];\n}\nfunction $c62be31ef05b0c90$var$expectArray(obj) {\n    if (!Array.isArray(obj)) throw (0, $31366a4b885eb48b$export$5a4bb2b1c89bdce7)(\"setByPath failed: expected array, found\", obj);\n}\nfunction $c62be31ef05b0c90$var$expectObject(obj) {\n    if (obj == null || !(obj instanceof Object)) throw (0, $31366a4b885eb48b$export$5a4bb2b1c89bdce7)(\"setByPath failed: expected Object, found\", obj);\n}\nfunction $c62be31ef05b0c90$export$44b5bed83342a92f(obj, path) {\n    const parts = $c62be31ef05b0c90$export$f5d2dd4cfd729958(path);\n    let found = obj;\n    let i, iMax, j, jMax;\n    for(i = 0, iMax = parts.length; found !== undefined && i < iMax; i++){\n        const part = parts[i];\n        if (Array.isArray(part)) for(j = 0, jMax = part.length; found !== undefined && j < jMax; j++){\n            const key = part[j];\n            found = found[key];\n        }\n        else {\n            if (found.length === 0) {\n                // @ts-expect-error-error\n                found = found[part.slice(1)];\n                if (part[0] !== \"=\") return undefined;\n            } else if (part.includes(\"=\")) {\n                const [idPath, ...tail] = part.split(\"=\");\n                found = $c62be31ef05b0c90$var$byIdPath(found, idPath, tail.join(\"=\"));\n            } else {\n                j = parseInt(part, 10);\n                found = found[j];\n            }\n        }\n    }\n    return found;\n}\nfunction $c62be31ef05b0c90$export$f65a19d15516795e(orig, path, val) {\n    let obj = orig;\n    const parts = $c62be31ef05b0c90$export$f5d2dd4cfd729958(path);\n    while(obj != null && parts.length > 0){\n        const part = parts.shift();\n        if (typeof part === \"string\") {\n            const equalsOffset = part.indexOf(\"=\");\n            if (equalsOffset > -1) {\n                if (equalsOffset === 0) $c62be31ef05b0c90$var$expectObject(obj);\n                else $c62be31ef05b0c90$var$expectArray(obj);\n                const idPath = part.slice(0, equalsOffset);\n                const idValue = part.slice(equalsOffset + 1);\n                obj = $c62be31ef05b0c90$var$byIdPath(obj, idPath, idValue, parts.length > 0 ? $c62be31ef05b0c90$var$_newObject_ : val);\n                if (parts.length === 0) return true;\n            } else {\n                $c62be31ef05b0c90$var$expectArray(obj);\n                const idx = parseInt(part, 10);\n                if (parts.length > 0) obj = obj[idx];\n                else {\n                    if (val !== $c62be31ef05b0c90$var$_delete_) {\n                        if (obj[idx] === val) return false;\n                        obj[idx] = val;\n                    } else obj.splice(idx, 1);\n                    return true;\n                }\n            }\n        } else if (Array.isArray(part) && part.length > 0) {\n            $c62be31ef05b0c90$var$expectObject(obj);\n            while(part.length > 0){\n                const key = part.shift();\n                if (part.length > 0 || parts.length > 0) // if we're at the end of part.length then we need to insert an array\n                obj = $c62be31ef05b0c90$var$byKey(obj, key, part.length > 0 ? {} : []);\n                else {\n                    if (val !== $c62be31ef05b0c90$var$_delete_) {\n                        if (obj[key] === val) return false;\n                        obj[key] = val;\n                    } else {\n                        if (!Object.prototype.hasOwnProperty.call(obj, key)) return false;\n                        // eslint-disable-next-line\n                        delete obj[key];\n                    }\n                    return true;\n                }\n            }\n        } else throw new Error(`setByPath failed, bad path ${path}`);\n    }\n    // eslint-disable-next-line\n    throw new Error(`setByPath(${orig}, ${path}, ${val}) failed`);\n}\nfunction $c62be31ef05b0c90$export$102e532907108dad(orig, path) {\n    if ($c62be31ef05b0c90$export$44b5bed83342a92f(orig, path) !== null) $c62be31ef05b0c90$export$f65a19d15516795e(orig, path, $c62be31ef05b0c90$var$_delete_);\n}\n\n\n\n// list of Array functions that change the array\nconst $547f11326d897190$var$ARRAY_MUTATIONS = [\n    \"sort\",\n    \"splice\",\n    \"copyWithin\",\n    \"fill\",\n    \"pop\",\n    \"push\",\n    \"reverse\",\n    \"shift\",\n    \"unshift\"\n];\nconst $547f11326d897190$var$registry = {};\nconst $547f11326d897190$var$debugPaths = true;\nconst $547f11326d897190$var$validPath = /^\\.?([^.[\\](),])+(\\.[^.[\\](),]+|\\[\\d+\\]|\\[[^=[\\](),]*=[^[\\]()]+\\])*$/;\nconst $547f11326d897190$export$a678af82bf766611 = (path)=>$547f11326d897190$var$validPath.test(path);\nconst $547f11326d897190$var$extendPath = (path = \"\", prop = \"\")=>{\n    if (path === \"\") return prop;\n    else {\n        if (prop.match(/^\\d+$/) !== null || prop.includes(\"=\")) return `${path}[${prop}]`;\n        else return `${path}.${prop}`;\n    }\n};\nconst $547f11326d897190$var$regHandler = (path = \"\")=>({\n        // TODO figure out how to correctly return array[Symbol.iterator] so that for(const foo of xin.foos) works\n        // as you'd expect\n        get (target, _prop) {\n            if (_prop === (0, $e921b0bd4f6415ab$export$a3622eb3b5dd592a)) return path;\n            else if (_prop === (0, $e921b0bd4f6415ab$export$bdd0d039ad781534)) return target;\n            if (typeof _prop === \"symbol\") // @ts-expect-error\n            return target[_prop];\n            let prop = _prop;\n            const compoundProp = prop.match(/^([^.[]+)\\.(.+)$/) ?? // basePath.subPath (omit '.')\n            prop.match(/^([^\\]]+)(\\[.+)/) ?? // basePath[subPath\n            prop.match(/^(\\[[^\\]]+\\])\\.(.+)$/) ?? // [basePath].subPath (omit '.')\n            prop.match(/^(\\[[^\\]]+\\])\\[(.+)$/) // [basePath][subPath\n            ;\n            if (compoundProp !== null) {\n                const [, basePath, subPath] = compoundProp;\n                const currentPath = $547f11326d897190$var$extendPath(path, basePath);\n                const value = (0, $c62be31ef05b0c90$export$44b5bed83342a92f)(target, basePath);\n                return value !== null && typeof value === \"object\" ? new Proxy(value, $547f11326d897190$var$regHandler(currentPath))[subPath] : value;\n            }\n            if (prop.startsWith(\"[\") && prop.endsWith(\"]\")) prop = prop.substring(1, prop.length - 1);\n            if (!Array.isArray(target) && target[prop] !== undefined || Array.isArray(target) && prop.includes(\"=\")) {\n                let value;\n                if (prop.includes(\"=\")) {\n                    const [idPath, needle] = prop.split(\"=\");\n                    value = target.find((candidate)=>`${(0, $c62be31ef05b0c90$export$44b5bed83342a92f)(candidate, idPath)}` === needle);\n                } else value = target[prop];\n                if (value !== null && typeof value === \"object\") {\n                    const currentPath = $547f11326d897190$var$extendPath(path, prop);\n                    return new Proxy(value, $547f11326d897190$var$regHandler(currentPath));\n                } else if (typeof value === \"function\") return value.bind(target);\n                else return value;\n            } else if (Array.isArray(target)) {\n                const value = target[prop];\n                return typeof value === \"function\" ? (...items)=>{\n                    // @ts-expect-error\n                    const result = Array.prototype[prop].apply(target, items);\n                    if ($547f11326d897190$var$ARRAY_MUTATIONS.includes(prop)) (0, $f0b099915f91bd21$export$d0b7ea69ab6056df)(path);\n                    return result;\n                } : typeof value === \"object\" ? new Proxy(value, $547f11326d897190$var$regHandler($547f11326d897190$var$extendPath(path, prop))) : value;\n            } else return target[prop];\n        },\n        set (_, prop, value) {\n            // eslint-disable-next-line\n            if (value != null && value[0, $e921b0bd4f6415ab$export$a3622eb3b5dd592a]) value = value[0, $e921b0bd4f6415ab$export$bdd0d039ad781534];\n            const fullPath = $547f11326d897190$var$extendPath(path, prop);\n            if ($547f11326d897190$var$debugPaths && !$547f11326d897190$export$a678af82bf766611(fullPath)) throw new Error(`setting invalid path ${fullPath}`);\n            let existing = $547f11326d897190$export$966034e6c6823eb0[fullPath];\n            // eslint-disable-next-line\n            if (existing != null && existing[0, $e921b0bd4f6415ab$export$bdd0d039ad781534] != null) existing = existing[0, $e921b0bd4f6415ab$export$bdd0d039ad781534];\n            if (existing !== value && (0, $c62be31ef05b0c90$export$f65a19d15516795e)($547f11326d897190$var$registry, fullPath, value)) (0, $f0b099915f91bd21$export$d0b7ea69ab6056df)(fullPath);\n            return true;\n        }\n    });\nconst $547f11326d897190$export$d1203567a167490e = (test, callback)=>{\n    const func = typeof callback === \"function\" ? callback : $547f11326d897190$export$966034e6c6823eb0[callback];\n    if (typeof func !== \"function\") throw new Error(`observe expects a function or path to a function, ${callback} is neither`);\n    return (0, $f0b099915f91bd21$export$d1203567a167490e)(test, func);\n};\nconst $547f11326d897190$export$966034e6c6823eb0 = new Proxy($547f11326d897190$var$registry, $547f11326d897190$var$regHandler());\n\n\n\nconst { document: $b5796eaeba5c782e$var$document , MutationObserver: $b5796eaeba5c782e$var$MutationObserver  } = globalThis;\nconst $b5796eaeba5c782e$export$80bf2f765c31be6a = (element, changedPath)=>{\n    const dataBindings = (0, $e921b0bd4f6415ab$export$1f922de8d0ecbb7e).get(element);\n    for (const dataBinding of dataBindings){\n        let { path: path , binding: binding , options: options  } = dataBinding;\n        const { toDOM: toDOM  } = binding;\n        if (toDOM != null) {\n            if (path.startsWith(\"^\")) {\n                const dataSource = (0, $e921b0bd4f6415ab$export$4c309843c07ce679)(element);\n                if (dataSource != null && dataSource[0, $e921b0bd4f6415ab$export$a3622eb3b5dd592a] != null) path = dataBinding.path = `${dataSource[0, $e921b0bd4f6415ab$export$a3622eb3b5dd592a]}${path.substring(1)}`;\n                else {\n                    console.error(`Cannot resolve relative binding ${path}`, element, \"is not part of a list\");\n                    throw new Error(`Cannot resolve relative binding ${path}`);\n                }\n            }\n            if (changedPath == null || path.startsWith(changedPath)) toDOM(element, (0, $547f11326d897190$export$966034e6c6823eb0)[path], options);\n        }\n    }\n};\n// this is just to allow bind to be testable in node\nif ($b5796eaeba5c782e$var$MutationObserver != null) {\n    const observer = new $b5796eaeba5c782e$var$MutationObserver((mutationsList)=>{\n        mutationsList.forEach((mutation)=>{\n            [\n                ...mutation.addedNodes\n            ].forEach((node)=>{\n                if (node instanceof HTMLElement) [\n                    ...node.querySelectorAll((0, $e921b0bd4f6415ab$export$4c0223f67078aeac))\n                ].forEach((element)=>$b5796eaeba5c782e$export$80bf2f765c31be6a(element));\n            });\n        });\n    });\n    observer.observe($b5796eaeba5c782e$var$document.body, {\n        subtree: true,\n        childList: true\n    });\n}\n(0, $547f11326d897190$export$d1203567a167490e)(()=>true, (changedPath)=>{\n    const boundElements = $b5796eaeba5c782e$var$document.querySelectorAll((0, $e921b0bd4f6415ab$export$4c0223f67078aeac));\n    for (const element of boundElements)$b5796eaeba5c782e$export$80bf2f765c31be6a(element, changedPath);\n});\nconst $b5796eaeba5c782e$var$handleChange = (event)=>{\n    // @ts-expect-error-error\n    let target = event.target.closest((0, $e921b0bd4f6415ab$export$4c0223f67078aeac));\n    while(target != null){\n        const dataBindings = (0, $e921b0bd4f6415ab$export$1f922de8d0ecbb7e).get(target);\n        for (const dataBinding of dataBindings){\n            const { binding: binding , path: path  } = dataBinding;\n            const { fromDOM: fromDOM  } = binding;\n            if (fromDOM != null) {\n                let value;\n                try {\n                    value = fromDOM(target, dataBinding.options);\n                } catch (e) {\n                    console.error(\"Cannot get value from\", target, \"via\", dataBinding);\n                    throw new Error(\"Cannot obtain value fromDOM\");\n                }\n                if (value != null) {\n                    const existing = (0, $547f11326d897190$export$966034e6c6823eb0)[path];\n                    // eslint-disable-next-line\n                    if (existing == null) (0, $547f11326d897190$export$966034e6c6823eb0)[path] = value;\n                    else {\n                        // @ts-expect-error-error\n                        const existingActual = existing[0, $e921b0bd4f6415ab$export$a3622eb3b5dd592a] != null ? existing[0, $e921b0bd4f6415ab$export$bdd0d039ad781534] : existing;\n                        const valueActual = value[0, $e921b0bd4f6415ab$export$a3622eb3b5dd592a] != null ? value[0, $e921b0bd4f6415ab$export$bdd0d039ad781534] : value;\n                        if (existingActual !== valueActual) (0, $547f11326d897190$export$966034e6c6823eb0)[path] = valueActual;\n                    }\n                }\n            }\n        }\n        target = target.parentElement.closest((0, $e921b0bd4f6415ab$export$4c0223f67078aeac));\n    }\n};\nif (globalThis.document != null) {\n    $b5796eaeba5c782e$var$document.body.addEventListener(\"change\", $b5796eaeba5c782e$var$handleChange, true);\n    $b5796eaeba5c782e$var$document.body.addEventListener(\"input\", $b5796eaeba5c782e$var$handleChange, true);\n}\nfunction $b5796eaeba5c782e$export$2385a24977818dd0(element, what, binding, options) {\n    if (element instanceof DocumentFragment) throw new Error(\"bind cannot bind to a DocumentFragment\");\n    let path;\n    if (typeof what === \"object\" && what[0, $e921b0bd4f6415ab$export$a3622eb3b5dd592a] === undefined && options === undefined) {\n        const { value: value  } = what;\n        path = typeof value === \"string\" ? value : value[0, $e921b0bd4f6415ab$export$a3622eb3b5dd592a];\n        options = what;\n        delete options.value;\n    } else path = typeof what === \"string\" ? what : what[0, $e921b0bd4f6415ab$export$a3622eb3b5dd592a];\n    if (path == null) throw new Error(\"bind requires a path or object with xin Proxy\");\n    const { toDOM: toDOM  } = binding;\n    element.classList.add((0, $e921b0bd4f6415ab$export$c6592bbc1eebb717));\n    let dataBindings = (0, $e921b0bd4f6415ab$export$1f922de8d0ecbb7e).get(element);\n    if (dataBindings == null) {\n        dataBindings = [];\n        (0, $e921b0bd4f6415ab$export$1f922de8d0ecbb7e).set(element, dataBindings);\n    }\n    dataBindings.push({\n        path: path,\n        binding: binding,\n        options: options\n    });\n    if (toDOM != null && !path.startsWith(\"^\")) (0, $f0b099915f91bd21$export$d0b7ea69ab6056df)(path);\n    return element;\n}\nconst $b5796eaeba5c782e$var$handledEventTypes = new Set();\nconst $b5796eaeba5c782e$var$handleBoundEvent = (event)=>{\n    // @ts-expect-error-error\n    let target = event?.target.closest((0, $e921b0bd4f6415ab$export$21d9322c3477441b));\n    let propagationStopped = false;\n    const wrappedEvent = new Proxy(event, {\n        get (target, prop) {\n            if (prop === \"stopPropagation\") return ()=>{\n                event.stopPropagation();\n                propagationStopped = true;\n            };\n            else {\n                // @ts-expect-error-error\n                const value = target[prop];\n                return typeof value === \"function\" ? value.bind(target) : value;\n            }\n        }\n    });\n    // eslint-disable-next-line no-unmodified-loop-condition\n    while(!propagationStopped && target != null){\n        const eventBindings = (0, $e921b0bd4f6415ab$export$fe712848e6e66613).get(target);\n        // eslint-disable-next-line\n        const handlers = eventBindings[event.type] || [];\n        for (const handler of handlers){\n            if (typeof handler === \"function\") // eslint-disable-next-line\n            handler(wrappedEvent);\n            else {\n                const func = (0, $547f11326d897190$export$966034e6c6823eb0)[handler];\n                if (typeof func === \"function\") func(wrappedEvent);\n                else throw new Error(`no event handler found at path ${handler}`);\n            }\n            if (propagationStopped) continue;\n        }\n        target = target.parentElement != null ? target.parentElement.closest((0, $e921b0bd4f6415ab$export$21d9322c3477441b)) : null;\n    }\n};\nconst $b5796eaeba5c782e$export$af631764ddc44097 = (element, eventType, eventHandler)=>{\n    let eventBindings = (0, $e921b0bd4f6415ab$export$fe712848e6e66613).get(element);\n    element.classList.add((0, $e921b0bd4f6415ab$export$6a7099543a9795c7));\n    if (eventBindings == null) {\n        eventBindings = {};\n        (0, $e921b0bd4f6415ab$export$fe712848e6e66613).set(element, eventBindings);\n    }\n    // eslint-disable-next-line\n    if (!eventBindings[eventType]) eventBindings[eventType] = [];\n    if (!eventBindings[eventType].includes(eventHandler)) eventBindings[eventType].push(eventHandler);\n    if (!$b5796eaeba5c782e$var$handledEventTypes.has(eventType)) {\n        $b5796eaeba5c782e$var$handledEventTypes.add(eventType);\n        $b5796eaeba5c782e$var$document.body.addEventListener(eventType, $b5796eaeba5c782e$var$handleBoundEvent, true);\n    }\n};\n\n\n\n\nconst $f314c6851ceb0f9e$export$635e15bbd66f01ea = (target, type)=>{\n    const event = new Event(type);\n    target.dispatchEvent(event);\n};\nconst $f314c6851ceb0f9e$var$valueType = (element)=>{\n    if (element instanceof HTMLInputElement) return element.type;\n    else if (element instanceof HTMLSelectElement && element.hasAttribute(\"multiple\")) return \"multi-select\";\n    else return \"other\";\n};\nconst $f314c6851ceb0f9e$export$80746c6bc6142fc8 = (element, newValue)=>{\n    switch($f314c6851ceb0f9e$var$valueType(element)){\n        case \"radio\":\n            // @ts-expect-error\n            element.checked = element.value === newValue;\n            break;\n        case \"checkbox\":\n            // @ts-expect-error\n            element.checked = newValue;\n            break;\n        case \"date\":\n            // @ts-expect-error\n            element.valueAsDate = new Date(newValue);\n            break;\n        case \"multi-select\":\n            for (const option of [\n                ...element.querySelectorAll(\"option\")\n            ])option.selected = newValue[option.value];\n            break;\n        default:\n            // @ts-expect-error\n            element.value = newValue;\n    }\n};\nconst $f314c6851ceb0f9e$export$bf7199a9ebcb84a9 = (element)=>{\n    switch($f314c6851ceb0f9e$var$valueType(element)){\n        case \"radio\":\n            {\n                const radio = element.parentElement?.querySelector(`[name=\"${element.name}\"]:checked`);\n                return radio != null ? radio.value : null;\n            }\n        case \"checkbox\":\n            // @ts-expect-error\n            return element.checked;\n        case \"date\":\n            // @ts-expect-error\n            return element.valueAsDate.toISOString();\n        case \"multi-select\":\n            return [\n                ...element.querySelectorAll(\"option\")\n            ].reduce((map, option)=>{\n                map[option.value] = option.selected;\n                return map;\n            }, {});\n        default:\n            return element.value;\n    }\n};\n/* global ResizeObserver */ const { ResizeObserver: $f314c6851ceb0f9e$var$ResizeObserver  } = globalThis;\nconst $f314c6851ceb0f9e$export$b13421f1ae71d316 = $f314c6851ceb0f9e$var$ResizeObserver != null ? new $f314c6851ceb0f9e$var$ResizeObserver((entries)=>{\n    for (const entry of entries){\n        const element = entry.target;\n        $f314c6851ceb0f9e$export$635e15bbd66f01ea(element, \"resize\");\n    }\n}) : {\n    observe () {},\n    unobserve () {}\n};\nfunction $f314c6851ceb0f9e$var$convertToXinSlot(slot) {\n    const xinSlot = document.createElement(\"xin-slot\");\n    if (slot.name !== \"\") xinSlot.setAttribute(\"name\", slot.name);\n    slot.replaceWith(xinSlot);\n}\nconst $f314c6851ceb0f9e$export$6bb13967611cdb1 = (elt, content)=>{\n    let isSlotted = false;\n    if (elt != null && content != null) {\n        if (typeof content === \"string\") elt.textContent = content;\n        else if (Array.isArray(content)) content.forEach((node)=>{\n            elt.append(node instanceof Node ? (0, $e921b0bd4f6415ab$export$fa8cc6a36b1ccd7f)(node) : node);\n            if (node instanceof Node && node.querySelector(\"slot\") != null) isSlotted = true;\n        });\n        else if (content instanceof HTMLElement || content instanceof DocumentFragment) {\n            const slots = [\n                ...content.querySelectorAll(\"slot\")\n            ];\n            if (slots.length > 0) {\n                isSlotted = true;\n                slots.forEach($f314c6851ceb0f9e$var$convertToXinSlot);\n            }\n            elt.append((0, $e921b0bd4f6415ab$export$fa8cc6a36b1ccd7f)(content));\n        } else throw new Error(\"expect text content or document node\");\n    }\n    return isSlotted;\n};\n\n\nconst $fb7e454a17657925$export$61fc7d43ac8f84b0 = (origFn, minInterval = 250)=>{\n    let debounceId;\n    return (...args)=>{\n        if (debounceId !== undefined) clearTimeout(debounceId);\n        debounceId = setTimeout(()=>{\n            origFn(...args);\n        }, minInterval);\n    };\n};\nconst $fb7e454a17657925$export$de363e709c412c8a = (origFn, minInterval = 250)=>{\n    let debounceId;\n    let previousCall = Date.now() - minInterval;\n    let inFlight = false;\n    return (...args)=>{\n        clearTimeout(debounceId);\n        debounceId = setTimeout(async ()=>{\n            origFn(...args);\n            previousCall = Date.now();\n        }, minInterval);\n        if (!inFlight && Date.now() - previousCall >= minInterval) {\n            inFlight = true;\n            try {\n                origFn(...args);\n                previousCall = Date.now();\n            } finally{\n                inFlight = false;\n            }\n        }\n    };\n};\n\n\n\n\nconst $ea2c6a36710de0a8$var$listBindingRef = Symbol(\"list-binding\");\nconst $ea2c6a36710de0a8$var$SLICE_INTERVAL_MS = 16 // 60fps\n;\nfunction $ea2c6a36710de0a8$var$updateRelativeBindings(element, path) {\n    const boundElements = [\n        ...element.querySelectorAll((0, $e921b0bd4f6415ab$export$4c0223f67078aeac))\n    ];\n    if (element.matches((0, $e921b0bd4f6415ab$export$4c0223f67078aeac))) boundElements.unshift(element);\n    for (const boundElement of boundElements){\n        const bindings = (0, $e921b0bd4f6415ab$export$1f922de8d0ecbb7e).get(boundElement);\n        for (const binding of bindings){\n            if (binding.path.startsWith(\"^\")) binding.path = `${path}${binding.path.substring(1)}`;\n            if (binding.binding.toDOM != null) binding.binding.toDOM(boundElement, (0, $547f11326d897190$export$966034e6c6823eb0)[binding.path]);\n        }\n    }\n}\nclass $ea2c6a36710de0a8$var$ListBinding {\n    _array = [];\n    constructor(boundElement, options = {}){\n        this.boundElement = boundElement;\n        this.itemToElement = new WeakMap();\n        if (boundElement.children.length !== 1) throw new Error(\"ListBinding expects an element with exactly one child element\");\n        if (boundElement.children[0] instanceof HTMLTemplateElement) {\n            const template = boundElement.children[0];\n            if (template.content.children.length !== 1) throw new Error(\"ListBinding expects a template with exactly one child element\");\n            this.template = (0, $e921b0bd4f6415ab$export$fa8cc6a36b1ccd7f)(template.content.children[0]);\n        } else {\n            this.template = boundElement.children[0];\n            this.template.remove();\n        }\n        this.listTop = document.createElement(\"div\");\n        this.listBottom = document.createElement(\"div\");\n        this.boundElement.append(this.listTop);\n        this.boundElement.append(this.listBottom);\n        this.options = options;\n        if (options.virtual != null) {\n            (0, $f314c6851ceb0f9e$export$b13421f1ae71d316).observe(this.boundElement);\n            this._update = (0, $fb7e454a17657925$export$de363e709c412c8a)(()=>{\n                this.update(this._array, true);\n            }, $ea2c6a36710de0a8$var$SLICE_INTERVAL_MS);\n            this.boundElement.addEventListener(\"scroll\", this._update);\n            this.boundElement.addEventListener(\"resize\", this._update);\n        }\n    }\n    visibleSlice() {\n        const { virtual: virtual , hiddenProp: hiddenProp , visibleProp: visibleProp  } = this.options;\n        let visibleArray = this._array;\n        if (hiddenProp !== undefined) visibleArray = visibleArray.filter((item)=>item[hiddenProp] !== true);\n        if (visibleProp !== undefined) visibleArray = visibleArray.filter((item)=>item[visibleProp] === true);\n        let firstItem = 0;\n        let lastItem = visibleArray.length - 1;\n        let topBuffer = 0;\n        let bottomBuffer = 0;\n        if (virtual != null) {\n            const width = this.boundElement.offsetWidth;\n            const height = this.boundElement.offsetHeight;\n            const visibleColumns = virtual.width != null ? Math.max(1, Math.floor(width / virtual.width)) : 1;\n            const visibleRows = Math.ceil(height / virtual.height) + 1;\n            const totalRows = Math.ceil(visibleArray.length / visibleColumns);\n            const visibleItems = visibleColumns * visibleRows;\n            let topRow = Math.floor(this.boundElement.scrollTop / virtual.height);\n            if (topRow > totalRows - visibleRows + 1) topRow = Math.max(0, totalRows - visibleRows + 1);\n            firstItem = topRow * visibleColumns;\n            lastItem = firstItem + visibleItems - 1;\n            topBuffer = topRow * virtual.height;\n            bottomBuffer = Math.max(totalRows * virtual.height - height - topBuffer, 0);\n        }\n        return {\n            items: visibleArray,\n            firstItem: firstItem,\n            lastItem: lastItem,\n            topBuffer: topBuffer,\n            bottomBuffer: bottomBuffer\n        };\n    }\n    update(array, isSlice) {\n        if (array == null) array = [];\n        this._array = array;\n        const { initInstance: initInstance , updateInstance: updateInstance , hiddenProp: hiddenProp , visibleProp: visibleProp  } = this.options;\n        // @ts-expect-error\n        const arrayPath = (0, $e921b0bd4f6415ab$export$40700dafb97c3799)(array);\n        const slice = this.visibleSlice();\n        this.boundElement.classList.toggle(\"-xin-empty-list\", slice.items.length === 0);\n        const previousSlice = this._previousSlice;\n        const { firstItem: firstItem , lastItem: lastItem , topBuffer: topBuffer , bottomBuffer: bottomBuffer  } = slice;\n        if (hiddenProp === undefined && visibleProp === undefined && isSlice === true && previousSlice != null && firstItem === previousSlice.firstItem && lastItem === previousSlice.lastItem) return;\n        this._previousSlice = slice;\n        let removed = 0;\n        let moved = 0;\n        let created = 0;\n        for (const element of [\n            ...this.boundElement.children\n        ]){\n            if (element === this.listTop || element === this.listBottom) continue;\n            const proxy = (0, $e921b0bd4f6415ab$export$86caed35dd837d06).get(element);\n            if (proxy == null) element.remove();\n            else {\n                const idx = slice.items.indexOf(proxy);\n                if (idx < firstItem || idx > lastItem) {\n                    element.remove();\n                    this.itemToElement.delete(proxy);\n                    (0, $e921b0bd4f6415ab$export$86caed35dd837d06).delete(element);\n                    removed++;\n                }\n            }\n        }\n        this.listTop.style.height = String(topBuffer) + \"px\";\n        this.listBottom.style.height = String(bottomBuffer) + \"px\";\n        // build a complete new set of elements in the right order\n        const elements = [];\n        const { idPath: idPath  } = this.options;\n        for(let i = firstItem; i <= lastItem; i++){\n            const item = slice.items[i];\n            if (item === undefined) continue;\n            let element = this.itemToElement.get((0, $e921b0bd4f6415ab$export$5dcba2d45033d435)(item));\n            if (element == null) {\n                created++;\n                element = (0, $e921b0bd4f6415ab$export$fa8cc6a36b1ccd7f)(this.template);\n                if (typeof item === \"object\") {\n                    this.itemToElement.set((0, $e921b0bd4f6415ab$export$5dcba2d45033d435)(item), element);\n                    (0, $e921b0bd4f6415ab$export$86caed35dd837d06).set(element, (0, $e921b0bd4f6415ab$export$5dcba2d45033d435)(item));\n                }\n                this.boundElement.insertBefore(element, this.listBottom);\n                if (idPath != null) {\n                    const idValue = item[idPath];\n                    const itemPath = `${arrayPath}[${idPath}=${idValue}]`;\n                    $ea2c6a36710de0a8$var$updateRelativeBindings(element, itemPath);\n                } else {\n                    const itemPath = `${arrayPath}[${i}]`;\n                    $ea2c6a36710de0a8$var$updateRelativeBindings(element, itemPath);\n                }\n                if (initInstance != null) // eslint-disable-next-line\n                initInstance(element, item);\n            }\n            if (updateInstance != null) // eslint-disable-next-line\n            updateInstance(element, item);\n            elements.push(element);\n        }\n        // make sure all the elements are in the DOM and in the correct location\n        let insertionPoint = null;\n        for (const element of elements){\n            if (element.previousElementSibling !== insertionPoint) {\n                moved++;\n                if (insertionPoint?.nextElementSibling != null) this.boundElement.insertBefore(element, insertionPoint.nextElementSibling);\n                else this.boundElement.insertBefore(element, this.listBottom);\n            }\n            insertionPoint = element;\n        }\n        if ((0, $34b63e9d5b96494c$export$a5a6e0b888b2c992).perf) console.log(arrayPath, \"updated\", {\n            removed: removed,\n            created: created,\n            moved: moved\n        });\n    }\n}\nconst $ea2c6a36710de0a8$export$b0eb386be3b9fed8 = (boundElement, options)=>{\n    let listBinding = boundElement[$ea2c6a36710de0a8$var$listBindingRef];\n    if (listBinding == null) {\n        listBinding = new $ea2c6a36710de0a8$var$ListBinding(boundElement, options);\n        boundElement[$ea2c6a36710de0a8$var$listBindingRef] = listBinding;\n    }\n    return listBinding;\n};\n\n\n\nconst $7d9f6326e1d5d994$export$97a1a3e6f39778d2 = {\n    value: {\n        toDOM (element, value) {\n            (0, $f314c6851ceb0f9e$export$80746c6bc6142fc8)(element, value);\n        },\n        fromDOM (element) {\n            return (0, $f314c6851ceb0f9e$export$bf7199a9ebcb84a9)(element);\n        }\n    },\n    text: {\n        toDOM (element, value) {\n            element.textContent = value;\n        }\n    },\n    enabled: {\n        toDOM (element, value) {\n            // eslint-disable-next-line\n            element.disabled = !value;\n        }\n    },\n    disabled: {\n        toDOM (element, value) {\n            element.disabled = Boolean(value);\n        }\n    },\n    style: {\n        toDOM (element, value) {\n            if (typeof value === \"object\") for (const prop of Object.keys(value))// @ts-expect-error\n            element.style[prop] = value[prop];\n            else if (typeof value === \"string\") element.setAttribute(\"style\", value);\n            else throw new Error(\"style binding expects either a string or object\");\n        }\n    },\n    list: {\n        toDOM (element, value, options) {\n            const listBinding = (0, $ea2c6a36710de0a8$export$b0eb386be3b9fed8)(element, options);\n            listBinding.update(value);\n        }\n    }\n};\n\n\n/*\n# more-math\n\nSome simple functions egregiously missing from `Math`\n*/ const $0e50e8a626908591$export$ba6bc6c220358ed9 = 180 / Math.PI;\nconst $0e50e8a626908591$export$1518e1a62333c8a4 = Math.PI / 180;\nfunction $0e50e8a626908591$export$7d15b64cf5a3a4c4(min, v, max) {\n    return v < min ? min : v > max ? max : v;\n}\nfunction $0e50e8a626908591$export$3a89f8d6f6bf6c9f(a, b, t) {\n    t = $0e50e8a626908591$export$7d15b64cf5a3a4c4(0, t, 1);\n    return t * (b - a) + a;\n}\nconst $0e50e8a626908591$export$5e0dd9fd5d74e0c5 = {\n    clamp: $0e50e8a626908591$export$7d15b64cf5a3a4c4,\n    lerp: $0e50e8a626908591$export$3a89f8d6f6bf6c9f\n};\n\n\nconst $72989831e95a2bab$var$hex2 = (n)=>(\"00\" + Math.round(Number(n)).toString(16)).slice(-2);\nclass $72989831e95a2bab$var$HslColor {\n    constructor(r, g, b){\n        r /= 255;\n        g /= 255;\n        b /= 255;\n        const l = Math.max(r, g, b);\n        const s = l - Math.min(r, g, b);\n        const h = s !== 0 ? l === r ? (g - b) / s : l === g ? 2 + (b - r) / s : 4 + (r - g) / s : 0;\n        this.h = 60 * h < 0 ? 60 * h + 360 : 60 * h;\n        this.s = s !== 0 ? l <= 0.5 ? s / (2 * l - s) : s / (2 - (2 * l - s)) : 0;\n        this.l = (2 * l - s) / 2;\n    }\n}\nconst $72989831e95a2bab$var$span = globalThis.document !== undefined ? globalThis.document.createElement(\"span\") : undefined;\nclass $72989831e95a2bab$export$892596cec99bc70e {\n    static fromCss(spec) {\n        let converted = spec;\n        if ($72989831e95a2bab$var$span instanceof HTMLSpanElement) {\n            $72989831e95a2bab$var$span.style.color = spec;\n            document.body.appendChild($72989831e95a2bab$var$span);\n            converted = getComputedStyle($72989831e95a2bab$var$span).color;\n            $72989831e95a2bab$var$span.remove();\n        }\n        const [r, g, b, a] = converted.match(/[\\d.]+/g);\n        return new $72989831e95a2bab$export$892596cec99bc70e(Number(r), Number(g), Number(b), a == null ? 1 : Number(a));\n    }\n    static fromHsl(h, s, l, a = 1) {\n        return $72989831e95a2bab$export$892596cec99bc70e.fromCss(`hsla(${h.toFixed(0)}, ${(s * 100).toFixed(0)}%, ${(l * 100).toFixed(0)}%, ${a.toFixed(2)})`);\n    }\n    constructor(r, g, b, a = 1){\n        this.r = (0, $0e50e8a626908591$export$7d15b64cf5a3a4c4)(0, r, 255);\n        this.g = (0, $0e50e8a626908591$export$7d15b64cf5a3a4c4)(0, g, 255);\n        this.b = (0, $0e50e8a626908591$export$7d15b64cf5a3a4c4)(0, b, 255);\n        this.a = a !== undefined ? (0, $0e50e8a626908591$export$7d15b64cf5a3a4c4)(0, a, 1) : a = 1;\n    }\n    get inverse() {\n        return new $72989831e95a2bab$export$892596cec99bc70e(255 - this.r, 255 - this.g, 255 - this.b, this.a);\n    }\n    get inverseLuminance() {\n        const { h: h , s: s , l: l  } = this._hsl;\n        return $72989831e95a2bab$export$892596cec99bc70e.fromHsl(h, s, 1 - l, this.a);\n    }\n    get rgb() {\n        const { r: r , g: g , b: b  } = this;\n        return `rgb(${r.toFixed(0)},${g.toFixed(0)},${b.toFixed(0)})`;\n    }\n    get rgba() {\n        const { r: r , g: g , b: b , a: a  } = this;\n        return `rgba(${r.toFixed(0)},${g.toFixed(0)},${b.toFixed(0)},${a.toFixed(2)})`;\n    }\n    get RGBA() {\n        return [\n            this.r / 255,\n            this.g / 255,\n            this.b / 255,\n            this.a\n        ];\n    }\n    get ARGB() {\n        return [\n            this.a,\n            this.r / 255,\n            this.g / 255,\n            this.b / 255\n        ];\n    }\n    get _hsl() {\n        if (this._hslCached == null) this._hslCached = new $72989831e95a2bab$var$HslColor(this.r, this.g, this.b);\n        return this._hslCached;\n    }\n    get hsl() {\n        const { h: h , s: s , l: l  } = this._hsl;\n        return `hsl(${h.toFixed(0)}, ${(s * 100).toFixed(0)}%, ${(l * 100).toFixed(0)}%)`;\n    }\n    get hsla() {\n        const { h: h , s: s , l: l  } = this._hsl;\n        return `hsla(${h.toFixed(0)}, ${(s * 100).toFixed(0)}%, ${(l * 100).toFixed(0)}%, ${this.a.toFixed(2)})`;\n    }\n    get mono() {\n        const v = this.brightness * 255;\n        return new $72989831e95a2bab$export$892596cec99bc70e(v, v, v);\n    }\n    get brightness() {\n        // http://www.itu.int/rec/R-REC-BT.601\n        return (0.299 * this.r + 0.587 * this.g + 0.114 * this.b) / 255;\n    }\n    get html() {\n        return this.a === 1 ? \"#\" + $72989831e95a2bab$var$hex2(this.r) + $72989831e95a2bab$var$hex2(this.g) + $72989831e95a2bab$var$hex2(this.b) : \"#\" + $72989831e95a2bab$var$hex2(this.r) + $72989831e95a2bab$var$hex2(this.g) + $72989831e95a2bab$var$hex2(this.b) + $72989831e95a2bab$var$hex2(Math.floor(255 * this.a));\n    }\n    brighten(amount) {\n        let { h: h , s: s , l: l  } = this._hsl;\n        l = (0, $0e50e8a626908591$export$7d15b64cf5a3a4c4)(0, l + amount * (1 - l), 1);\n        return $72989831e95a2bab$export$892596cec99bc70e.fromHsl(h, s, l, this.a);\n    }\n    darken(amount) {\n        let { h: h , s: s , l: l  } = this._hsl;\n        l = (0, $0e50e8a626908591$export$7d15b64cf5a3a4c4)(0, l * (1 - amount), 1);\n        return $72989831e95a2bab$export$892596cec99bc70e.fromHsl(h, s, l, this.a);\n    }\n    saturate(amount) {\n        let { h: h , s: s , l: l  } = this._hsl;\n        s = (0, $0e50e8a626908591$export$7d15b64cf5a3a4c4)(0, s + amount * (1 - s), 1);\n        return $72989831e95a2bab$export$892596cec99bc70e.fromHsl(h, s, l, this.a);\n    }\n    desaturate(amount) {\n        let { h: h , s: s , l: l  } = this._hsl;\n        s = (0, $0e50e8a626908591$export$7d15b64cf5a3a4c4)(0, s * (1 - amount), 1);\n        return $72989831e95a2bab$export$892596cec99bc70e.fromHsl(h, s, l, this.a);\n    }\n    rotate(amount) {\n        let { h: h , s: s , l: l  } = this._hsl;\n        h = (h + 360 + amount) % 360;\n        return $72989831e95a2bab$export$892596cec99bc70e.fromHsl(h, s, l, this.a);\n    }\n    opacity(alpha) {\n        const { h: h , s: s , l: l  } = this._hsl;\n        return $72989831e95a2bab$export$892596cec99bc70e.fromHsl(h, s, l, alpha);\n    }\n    swatch() {\n        const { r: r , g: g , b: b , a: a  } = this;\n        console.log(`%c   %c ${this.html}, rgba(${r}, ${g}, ${b}, ${a}), ${this.hsla}`, `background-color: rgba(${r}, ${g}, ${b}, ${a})`, \"background-color: #eee\");\n    }\n    blend(otherColor, t) {\n        return new $72989831e95a2bab$export$892596cec99bc70e((0, $0e50e8a626908591$export$3a89f8d6f6bf6c9f)(this.r, otherColor.r, t), (0, $0e50e8a626908591$export$3a89f8d6f6bf6c9f)(this.g, otherColor.g, t), (0, $0e50e8a626908591$export$3a89f8d6f6bf6c9f)(this.b, otherColor.b, t), (0, $0e50e8a626908591$export$3a89f8d6f6bf6c9f)(this.a, otherColor.a, t));\n    }\n}\n\n\n\n\nfunction $bed4bed3dcfb6f9a$export$87ae551bf60f4bb(s) {\n    return s.replace(/[A-Z]/g, (c)=>{\n        return `-${c.toLocaleLowerCase()}`;\n    });\n}\nfunction $bed4bed3dcfb6f9a$export$fd322201efdc650f(s) {\n    return s.replace(/-([a-z])/g, (_, c)=>{\n        return c.toLocaleUpperCase();\n    });\n}\n\n\nconst $9e0c0b8784c80412$var$templates = {};\nconst $9e0c0b8784c80412$var$create = (tagType, ...contents)=>{\n    if ($9e0c0b8784c80412$var$templates[tagType] === undefined) $9e0c0b8784c80412$var$templates[tagType] = globalThis.document.createElement(tagType);\n    const elt = $9e0c0b8784c80412$var$templates[tagType].cloneNode();\n    const elementProps = {};\n    for (const item of contents)if (item instanceof Element || item instanceof DocumentFragment || typeof item === \"string\" || typeof item === \"number\") {\n        if (elt instanceof HTMLTemplateElement) elt.content.append(item);\n        else elt.append(item);\n    } else Object.assign(elementProps, item);\n    for (const key of Object.keys(elementProps)){\n        const value = elementProps[key];\n        if (key === \"apply\") value(elt);\n        else if (key === \"style\") {\n            if (typeof value === \"object\") {\n                for (const prop of Object.keys(value))if (prop.startsWith(\"--\")) elt.style.setProperty(prop, value[prop]);\n                else // @ts-expect-error\n                elt.style[prop] = value[prop];\n            } else elt.setAttribute(\"style\", value);\n        } else if (key.match(/^on[A-Z]/) != null) {\n            const eventType = key.substring(2).toLowerCase();\n            (0, $b5796eaeba5c782e$export$af631764ddc44097)(elt, eventType, value);\n        } else if (key.match(/^bind[A-Z]/) != null) {\n            const bindingType = key.substring(4, 5).toLowerCase() + key.substring(5);\n            const binding = (0, $7d9f6326e1d5d994$export$97a1a3e6f39778d2)[bindingType];\n            if (binding !== undefined) (0, $b5796eaeba5c782e$export$2385a24977818dd0)(elt, value, binding);\n            else throw new Error(`${key} is not allowed, bindings.${bindingType} is not defined`);\n        // @ts-expect-error\n        } else if (elt[key] !== undefined) // @ts-expect-error\n        elt[key] = value;\n        else {\n            const attr = (0, $bed4bed3dcfb6f9a$export$87ae551bf60f4bb)(key);\n            if (attr === \"class\") value.split(\" \").forEach((className)=>{\n                elt.classList.add(className);\n            });\n            else if (elt[attr] !== undefined) // @ts-expect-error-error\n            elt[attr] = value;\n            else if (typeof value === \"boolean\") value ? elt.setAttribute(attr, \"\") : elt.removeAttribute(attr);\n            else elt.setAttribute(attr, value);\n        }\n    }\n    return elt;\n};\nconst $9e0c0b8784c80412$var$fragment = (...contents)=>{\n    const frag = globalThis.document.createDocumentFragment();\n    for (const item of contents)frag.append(item);\n    return frag;\n};\nconst $9e0c0b8784c80412$export$7a5d735b2ab6389d = new Proxy({\n    fragment: $9e0c0b8784c80412$var$fragment\n}, {\n    get (target, tagName) {\n        tagName = tagName.replace(/[A-Z]/g, (c)=>`-${c.toLocaleLowerCase()}`);\n        if (tagName.match(/^\\w+(-\\w+)*$/) == null) throw new Error(`${tagName} does not appear to be a valid element tagName`);\n        else if (target[tagName] === undefined) // @ts-expect-error\n        target[tagName] = (...contents)=>$9e0c0b8784c80412$var$create(tagName, ...contents);\n        // @ts-expect-error\n        return target[tagName];\n    },\n    set () {\n        throw new Error(\"You may not add new properties to elements\");\n    }\n});\n\n\n\nfunction $49cee7f7f866c751$export$bc59121b0a0fcbd3(styleSheet) {\n    return (0, $9e0c0b8784c80412$export$7a5d735b2ab6389d).style($49cee7f7f866c751$export$dbf350e5966cf602(styleSheet));\n}\nconst $49cee7f7f866c751$var$numericProps = [\n    \"animation-iteration-count\",\n    \"flex\",\n    \"flex-base\",\n    \"flex-grow\",\n    \"flex-shrink\",\n    \"gap\",\n    \"opacity\",\n    \"order\",\n    \"tab-size\",\n    \"widows\",\n    \"z-index\",\n    \"zoom\"\n];\nconst $49cee7f7f866c751$var$renderProp = (indentation, cssProp, value)=>{\n    if (value === undefined) return \"\";\n    else if (typeof value === \"string\" || $49cee7f7f866c751$var$numericProps.includes(cssProp)) return `${indentation}  ${cssProp}: ${value};`;\n    else return `${indentation}  ${cssProp}: ${value}px;`;\n};\nconst $49cee7f7f866c751$var$renderStatement = (key, value, indentation = \"\")=>{\n    const cssProp = (0, $bed4bed3dcfb6f9a$export$87ae551bf60f4bb)(key);\n    if (typeof value === \"object\") {\n        const renderedRule = Object.keys(value).map((innerKey)=>$49cee7f7f866c751$var$renderStatement(innerKey, value[innerKey], `${indentation}  `)).join(\"\\n\");\n        return `${indentation}  ${key} {\\n${renderedRule}\\n${indentation}  }`;\n    } else return $49cee7f7f866c751$var$renderProp(indentation, cssProp, value);\n};\nconst $49cee7f7f866c751$export$dbf350e5966cf602 = (obj, indentation = \"\")=>{\n    const selectors = Object.keys(obj).map((selector)=>{\n        const body = obj[selector];\n        if (typeof body === \"string\") {\n            if (selector === \"@import\") return `@import url('${body}');`;\n            throw new Error(\"top-level string value only allowed for `@import`\");\n        }\n        const rule = Object.keys(body).map((prop)=>$49cee7f7f866c751$var$renderStatement(prop, body[prop])).join(\"\\n\");\n        return `${indentation}${selector} {\\n${rule}\\n}`;\n    });\n    return selectors.join(\"\\n\\n\");\n};\nconst $49cee7f7f866c751$export$90d0ea046136e3ed = (obj)=>{\n    const rule = {};\n    for (const key of Object.keys(obj)){\n        const value = obj[key];\n        const kabobKey = (0, $bed4bed3dcfb6f9a$export$87ae551bf60f4bb)(key);\n        rule[`--${kabobKey}`] = typeof value === \"number\" && value !== 0 ? String(value) + \"px\" : value;\n    }\n    return rule;\n};\nconst $49cee7f7f866c751$export$808aaf1b460dc9af = (obj)=>{\n    const rule = {};\n    for (const key of Object.keys(obj)){\n        let value = obj[key];\n        if (typeof value === \"string\" && value.match(/^(#|rgb[a]?\\(|hsl[a]?\\()/) != null) {\n            value = (0, $72989831e95a2bab$export$892596cec99bc70e).fromCss(value).inverseLuminance.html;\n            rule[`--${(0, $bed4bed3dcfb6f9a$export$87ae551bf60f4bb)(key)}`] = value;\n        }\n    }\n    return rule;\n};\nconst $49cee7f7f866c751$export$3cb96c9f6c8d16a4 = new Proxy({}, {\n    get (target, prop) {\n        if (target[prop] == null) {\n            prop = prop.replace(/[A-Z]/g, (x)=>`-${x.toLocaleLowerCase()}`);\n            let [, varName, , isNegative, scaleText, method] = prop.match(/^([^\\d_]*)((_)?(\\d+)(\\w*))?$/);\n            varName = `--${varName}`;\n            if (scaleText != null) {\n                const scale = isNegative == null ? Number(scaleText) / 100 : -Number(scaleText) / 100;\n                switch(method){\n                    case \"b\":\n                        {\n                            const baseColor = getComputedStyle(document.body).getPropertyValue(varName);\n                            target[prop] = scale > 0 ? (0, $72989831e95a2bab$export$892596cec99bc70e).fromCss(baseColor).brighten(scale).rgba : (0, $72989831e95a2bab$export$892596cec99bc70e).fromCss(baseColor).darken(-scale).rgba;\n                        }\n                        break;\n                    case \"s\":\n                        {\n                            const baseColor = getComputedStyle(document.body).getPropertyValue(varName);\n                            target[prop] = scale > 0 ? (0, $72989831e95a2bab$export$892596cec99bc70e).fromCss(baseColor).saturate(scale).rgba : (0, $72989831e95a2bab$export$892596cec99bc70e).fromCss(baseColor).desaturate(-scale).rgba;\n                        }\n                        break;\n                    case \"h\":\n                        {\n                            const baseColor = getComputedStyle(document.body).getPropertyValue(varName);\n                            target[prop] = (0, $72989831e95a2bab$export$892596cec99bc70e).fromCss(baseColor).rotate(scale * 100).rgba;\n                            console.log((0, $72989831e95a2bab$export$892596cec99bc70e).fromCss(baseColor).hsla, (0, $72989831e95a2bab$export$892596cec99bc70e).fromCss(baseColor).rotate(scale).hsla);\n                        }\n                        break;\n                    case \"o\":\n                        {\n                            const baseColor = getComputedStyle(document.body).getPropertyValue(varName);\n                            target[prop] = (0, $72989831e95a2bab$export$892596cec99bc70e).fromCss(baseColor).opacity(scale).rgba;\n                        }\n                        break;\n                    case \"\":\n                        target[prop] = `calc(var(${varName}) * ${scale})`;\n                        break;\n                    default:\n                        console.error(method);\n                        throw new Error(`Unrecognized method ${method} for css variable ${varName}`);\n                }\n            } else target[prop] = `var(${varName})`;\n        }\n        return target[prop];\n    }\n});\n\n\n\n\n\n\n\n\nlet $cd387b053feba574$var$instanceCount = 0;\nclass $cd387b053feba574$export$16fa2f45be04daa8 extends HTMLElement {\n    static elements = (0, $9e0c0b8784c80412$export$7a5d735b2ab6389d);\n    content = (0, $9e0c0b8784c80412$export$7a5d735b2ab6389d).slot();\n    static StyleNode(styleSpec) {\n        return (0, $9e0c0b8784c80412$export$7a5d735b2ab6389d).style((0, $49cee7f7f866c751$export$dbf350e5966cf602)(styleSpec));\n    }\n    static elementCreator(options) {\n        if (this._elementCreator == null) {\n            let desiredTag = options != null ? options.tag : null;\n            if (desiredTag == null) {\n                desiredTag = (0, $bed4bed3dcfb6f9a$export$87ae551bf60f4bb)(this.name);\n                if (desiredTag.startsWith(\"-\")) desiredTag = desiredTag.substring(1);\n                if (!desiredTag.includes(\"-\")) desiredTag += \"-elt\";\n            }\n            let attempts = 0;\n            while(this._elementCreator == null){\n                attempts += 1;\n                const tag = attempts === 1 ? desiredTag : `${desiredTag}-${attempts}`;\n                try {\n                    window.customElements.define(tag, this, options);\n                    this._elementCreator = (0, $9e0c0b8784c80412$export$7a5d735b2ab6389d)[tag];\n                } catch (e) {\n                    throw new Error(`could not define ${this.name} as <${tag}>: ${String(e)}`);\n                }\n            }\n        }\n        return this._elementCreator;\n    }\n    initAttributes(...attributeNames) {\n        const attributes = {};\n        const attributeValues = {};\n        const observer = new MutationObserver((mutationsList)=>{\n            let triggerRender = false;\n            mutationsList.forEach((mutation)=>{\n                // eslint-disable-next-line\n                triggerRender = !!(mutation.attributeName && attributeNames.includes((0, $bed4bed3dcfb6f9a$export$fd322201efdc650f)(mutation.attributeName)));\n            });\n            if (triggerRender && this.queueRender !== undefined) this.queueRender(false);\n        });\n        observer.observe(this, {\n            attributes: true\n        });\n        attributeNames.forEach((attributeName)=>{\n            attributes[attributeName] = (0, $5165f04a46b33615$export$b7d58db314e0ac27)(this[attributeName]);\n            const attributeKabob = (0, $bed4bed3dcfb6f9a$export$87ae551bf60f4bb)(attributeName);\n            Object.defineProperty(this, attributeName, {\n                enumerable: false,\n                get () {\n                    if (typeof attributes[attributeName] === \"boolean\") return this.hasAttribute(attributeKabob);\n                    else {\n                        // eslint-disable-next-line\n                        if (this.hasAttribute(attributeKabob)) return typeof attributes[attributeName] === \"number\" ? parseFloat(this.getAttribute(attributeKabob)) : this.getAttribute(attributeKabob);\n                        else if (attributeValues[attributeName] !== undefined) // @ts-expect-error\n                        return attributeValues[attributeName];\n                        else return attributes[attributeName];\n                    }\n                },\n                set (value) {\n                    if (typeof attributes[attributeName] === \"boolean\") {\n                        if (value !== this[attributeName]) {\n                            // eslint-disable-next-line\n                            if (value) this.setAttribute(attributeKabob, \"\");\n                            else this.removeAttribute(attributeKabob);\n                            this.queueRender();\n                        }\n                    } else if (typeof attributes[attributeName] === \"number\") {\n                        if (value !== parseFloat(this[attributeName])) {\n                            this.setAttribute(attributeKabob, value);\n                            this.queueRender();\n                        }\n                    } else if (typeof value === \"object\" || `${value}` !== `${this[attributeName]}`) {\n                        if (value === null || value === undefined || typeof value === \"object\") this.removeAttribute(attributeKabob);\n                        else this.setAttribute(attributeKabob, value);\n                        this.queueRender();\n                        // @ts-expect-error\n                        attributeValues[attributeName] = value;\n                    }\n                }\n            });\n        });\n    }\n    initValue() {\n        const valueDescriptor = Object.getOwnPropertyDescriptor(this, \"value\");\n        if (valueDescriptor === undefined || valueDescriptor.get !== undefined || valueDescriptor.set !== undefined) return;\n        let value = this.hasAttribute(\"value\") ? this.getAttribute(\"value\") : (0, $5165f04a46b33615$export$b7d58db314e0ac27)(this.value);\n        delete this.value;\n        Object.defineProperty(this, \"value\", {\n            enumerable: false,\n            get () {\n                return value;\n            },\n            set (newValue) {\n                if (value !== newValue) {\n                    value = newValue;\n                    this.queueRender(true);\n                }\n            }\n        });\n    }\n    get refs() {\n        const root = this.shadowRoot != null ? this.shadowRoot : this;\n        if (this._refs == null) this._refs = new Proxy({}, {\n            get (target, ref) {\n                if (target[ref] === undefined) {\n                    let element = root.querySelector(`[data-ref=\"${ref}\"]`);\n                    if (element == null) element = root.querySelector(ref);\n                    if (element == null) throw new Error(`elementRef \"${ref}\" does not exist!`);\n                    element.removeAttribute(\"data-ref\");\n                    target[ref] = element;\n                }\n                return target[ref];\n            }\n        });\n        return this._refs;\n    }\n    constructor(){\n        super();\n        $cd387b053feba574$var$instanceCount += 1;\n        this.initAttributes(\"hidden\");\n        this.instanceId = `${this.tagName.toLocaleLowerCase()}-${$cd387b053feba574$var$instanceCount}`;\n        this._value = (0, $5165f04a46b33615$export$b7d58db314e0ac27)(this.defaultValue);\n    }\n    connectedCallback() {\n        this.hydrate();\n        // super annoyingly, chrome loses its shit if you set *any* attributes in the constructor\n        if (this.role != null) this.setAttribute(\"role\", this.role);\n        if (this.onResize !== undefined) {\n            (0, $f314c6851ceb0f9e$export$b13421f1ae71d316).observe(this);\n            if (this._onResize == null) this._onResize = this.onResize.bind(this);\n            this.addEventListener(\"resize\", this._onResize);\n        }\n        if (this.value != null && this.getAttribute(\"value\") != null) this._value = this.getAttribute(\"value\");\n        this.queueRender();\n    }\n    disconnectedCallback() {\n        (0, $f314c6851ceb0f9e$export$b13421f1ae71d316).unobserve(this);\n    }\n    _changeQueued = false;\n    _renderQueued = false;\n    queueRender(triggerChangeEvent = false) {\n        if (!this._hydrated) return;\n        if (!this._changeQueued) this._changeQueued = triggerChangeEvent;\n        if (!this._renderQueued) {\n            this._renderQueued = true;\n            requestAnimationFrame(()=>{\n                // TODO add mechanism to allow component developer to have more control over\n                // whether input vs. change events are emitted\n                if (this._changeQueued) (0, $f314c6851ceb0f9e$export$635e15bbd66f01ea)(this, \"change\");\n                this._changeQueued = false;\n                this._renderQueued = false;\n                this.render();\n            });\n        }\n    }\n    _hydrated = false;\n    hydrate() {\n        if (!this._hydrated) {\n            this.initValue();\n            const _content = typeof this.content === \"function\" ? this.content() : this.content;\n            if (this.styleNode !== undefined) {\n                const shadow = this.attachShadow({\n                    mode: \"open\"\n                });\n                shadow.appendChild(this.styleNode);\n                (0, $f314c6851ceb0f9e$export$6bb13967611cdb1)(shadow, _content);\n            } else {\n                const existingChildren = [\n                    ...this.childNodes\n                ];\n                if ((0, $f314c6851ceb0f9e$export$6bb13967611cdb1)(this, _content) && existingChildren.length > 0) {\n                    const slotMap = {\n                        \"\": this\n                    };\n                    [\n                        ...this.querySelectorAll(\"xin-slot\")\n                    ].forEach((slot)=>{\n                        // @ts-expect-error\n                        slotMap[slot.name] = slot;\n                    });\n                    existingChildren.forEach((child)=>{\n                        const defaultSlot = slotMap[\"\"];\n                        const destSlot = child instanceof Element ? slotMap[child.slot] : defaultSlot;\n                        (destSlot !== undefined ? destSlot : defaultSlot).append(child);\n                    });\n                }\n            }\n            this._hydrated = true;\n        }\n    }\n    render() {}\n}\nclass $cd387b053feba574$var$XinSlot extends $cd387b053feba574$export$16fa2f45be04daa8 {\n    name = \"\";\n    content = null;\n    constructor(){\n        super();\n        this.initAttributes(\"name\");\n    }\n}\nconst $cd387b053feba574$export$a0751b4aa1961d4e = $cd387b053feba574$var$XinSlot.elementCreator({\n    tag: \"xin-slot\"\n});\n\n\n\n\n\n\nconst $4c651860c5272284$export$93b87f7746612069 = (test = ()=>true)=>{\n    const savedState = localStorage.getItem(\"xin-state\");\n    if (savedState != null) {\n        const state = JSON.parse(savedState);\n        for (const key of Object.keys(state).filter(test))if ((0, $547f11326d897190$export$966034e6c6823eb0)[key] !== undefined) Object.assign((0, $547f11326d897190$export$966034e6c6823eb0)[key], state[key]);\n        else (0, $547f11326d897190$export$966034e6c6823eb0)[key] = state[key];\n    }\n    const saveState = (0, $fb7e454a17657925$export$61fc7d43ac8f84b0)(()=>{\n        const obj = {};\n        const state = (0, $547f11326d897190$export$966034e6c6823eb0)[0, $e921b0bd4f6415ab$export$bdd0d039ad781534];\n        for (const key of Object.keys(state).filter(test))obj[key] = state[key];\n        localStorage.setItem(\"xin-state\", JSON.stringify(obj));\n        console.log(\"xin state saved to localStorage\");\n    }, 500);\n    (0, $547f11326d897190$export$d1203567a167490e)(test, saveState);\n};\n\n\n\n\n\n\n\nvar $526cc5d62ff194fb$exports = {};\n\n\n\nfunction $7bb234cc8fd49201$export$95a552d2395ab4c4(obj) {\n    const registered = {};\n    Object.keys(obj).forEach((key)=>{\n        // eslint-disable-next-line\n        (0, $547f11326d897190$export$966034e6c6823eb0)[key] = obj[key];\n        registered[key] = (0, $547f11326d897190$export$966034e6c6823eb0)[key];\n    });\n    return registered;\n}\n\n\n\n\nexport {$b5796eaeba5c782e$export$2385a24977818dd0 as bind, $b5796eaeba5c782e$export$af631764ddc44097 as on, $7d9f6326e1d5d994$export$97a1a3e6f39778d2 as bindings, $49cee7f7f866c751$export$3cb96c9f6c8d16a4 as vars, $49cee7f7f866c751$export$90d0ea046136e3ed as initVars, $49cee7f7f866c751$export$dbf350e5966cf602 as css, $49cee7f7f866c751$export$808aaf1b460dc9af as darkMode, $72989831e95a2bab$export$892596cec99bc70e as Color, $cd387b053feba574$export$16fa2f45be04daa8 as Component, $9e0c0b8784c80412$export$7a5d735b2ab6389d as elements, $4c651860c5272284$export$93b87f7746612069 as hotReload, $e921b0bd4f6415ab$export$4c309843c07ce679 as getListItem, $e921b0bd4f6415ab$export$40700dafb97c3799 as xinPath, $e921b0bd4f6415ab$export$5dcba2d45033d435 as xinValue, $0e50e8a626908591$export$5e0dd9fd5d74e0c5 as MoreMath, $34b63e9d5b96494c$export$a5a6e0b888b2c992 as settings, $fb7e454a17657925$export$de363e709c412c8a as throttle, $fb7e454a17657925$export$61fc7d43ac8f84b0 as debounce, $547f11326d897190$export$966034e6c6823eb0 as xin, $547f11326d897190$export$d1203567a167490e as observe, $f0b099915f91bd21$export$23a2283368c55ea2 as unobserve, $f0b099915f91bd21$export$d0b7ea69ab6056df as touch, $f0b099915f91bd21$export$253d09664e30b967 as observerShouldBeRemoved, $7bb234cc8fd49201$export$95a552d2395ab4c4 as xinProxy};\n//# sourceMappingURL=module.js.map\n","/*\n  Note that re-exported types should be explicitly and separately exported\n  as types because of issues with parceljs\n\n  The error messages will be very perplexing\n\n  https://github.com/parcel-bundler/parcel/issues/4796\n  https://github.com/parcel-bundler/parcel/issues/4240\n  https://devblogs.microsoft.com/typescript/announcing-typescript-3-8/#type-only-imports-exports\n*/\n\nexport { bind, on } from './bind'\nexport { bindings } from './bindings'\nexport { vars, initVars, css, darkMode } from './css'\nexport type { XinStyleSheet, XinStyleMap, XinStyleRule } from './css-types'\nexport { Color } from './color'\nexport { Component } from './component'\nexport { elements } from './elements'\nexport type { ElementsProxy } from './elements'\nexport { hotReload } from './hot-reload'\nexport { getListItem, xinPath, xinValue } from './metadata'\nexport { MoreMath } from './more-math'\nexport { settings } from './settings'\nexport { throttle, debounce } from './throttle'\nexport { xin, observe, unobserve, touch, observerShouldBeRemoved } from './xin'\nexport * from './xin-types'\nexport { xinProxy } from './xin-proxy'\n","import { xin, touch, observe } from './xin'\nimport {\n  getListItem, elementToBindings, elementToHandlers, DataBindings, BOUND_CLASS, BOUND_SELECTOR,\n  EVENT_CLASS, EVENT_SELECTOR, XinEventBindings, XIN_PATH, XIN_VALUE\n} from './metadata'\nimport { XinObject, XinProxy, XinEventHandler, XinTouchableType, XinBinding, XinBindingSpec } from './xin-types'\n\nconst { document, MutationObserver } = globalThis\n\nexport const touchElement = (element: HTMLElement, changedPath?: string): void => {\n  const dataBindings = elementToBindings.get(element) as DataBindings\n  for (const dataBinding of dataBindings) {\n    let { path, binding, options } = dataBinding\n    const { toDOM } = binding\n    if (toDOM != null) {\n      if (path.startsWith('^')) {\n        const dataSource = getListItem(element)\n        if (dataSource != null && (dataSource as XinProxy)[XIN_PATH] != null) {\n          path = dataBinding.path = `${(dataSource as XinProxy)[XIN_PATH]}${path.substring(1)}`\n        } else {\n          console.error(`Cannot resolve relative binding ${path}`, element, 'is not part of a list')\n          throw new Error(`Cannot resolve relative binding ${path}`)\n        }\n      }\n      if (changedPath == null || path.startsWith(changedPath)) {\n        toDOM(element, xin[path], options)\n      }\n    }\n  }\n}\n\n// this is just to allow bind to be testable in node\nif (MutationObserver != null) {\n  const observer = new MutationObserver((mutationsList) => {\n    mutationsList.forEach((mutation) => {\n      [...mutation.addedNodes].forEach(node => {\n        if (node instanceof HTMLElement) {\n          [...node.querySelectorAll(BOUND_SELECTOR)].forEach(element => touchElement(element as HTMLElement))\n        }\n      })\n    })\n  })\n  observer.observe(document.body, { subtree: true, childList: true })\n}\n\nobserve(() => true, (changedPath: string) => {\n  const boundElements = document.querySelectorAll(BOUND_SELECTOR)\n\n  for (const element of boundElements) {\n    touchElement(element as HTMLElement, changedPath)\n  }\n})\n\nconst handleChange = (event: Event): void => {\n  // @ts-expect-error-error\n  let target = event.target.closest(BOUND_SELECTOR)\n  while (target != null) {\n    const dataBindings = elementToBindings.get(target) as DataBindings\n    for (const dataBinding of dataBindings) {\n      const { binding, path } = dataBinding\n      const { fromDOM } = binding\n      if (fromDOM != null) {\n        let value\n        try {\n          value = fromDOM(target, dataBinding.options)\n        } catch (e) {\n          console.error('Cannot get value from', target, 'via', dataBinding)\n          throw new Error('Cannot obtain value fromDOM')\n        }\n        if (value != null) {\n          const existing = xin[path]\n          // eslint-disable-next-line\n          if (existing == null) {\n            xin[path] = value\n          } else {\n            // @ts-expect-error-error\n            const existingActual = existing[XIN_PATH] != null ? (existing as XinProxy)[XIN_VALUE] : existing\n            const valueActual = value[XIN_PATH] != null ? value[XIN_VALUE] : value\n            if (existingActual !== valueActual) {\n              xin[path] = valueActual\n            }\n          }\n        }\n      }\n    }\n    target = target.parentElement.closest(BOUND_SELECTOR)\n  }\n}\n\nif (globalThis.document != null) {\n  document.body.addEventListener('change', handleChange, true)\n  document.body.addEventListener('input', handleChange, true)\n}\n\nexport function bind<T extends HTMLElement> (element: T, what: XinTouchableType | XinBindingSpec, binding: XinBinding<T>, options?: XinObject): T {\n  if (element instanceof DocumentFragment) {\n    throw new Error('bind cannot bind to a DocumentFragment')\n  }\n  let path: string\n  if (typeof what === 'object' && (what as XinProxy)[XIN_PATH] === undefined && options === undefined) {\n    const { value } = what as XinBindingSpec\n    path = typeof value === 'string' ? value : value[XIN_PATH]\n    options = what as XinObject\n    delete options.value\n  } else {\n    path = typeof what === 'string' ? what : (what as XinProxy)[XIN_PATH]\n  }\n  if (path == null) {\n    throw new Error('bind requires a path or object with xin Proxy')\n  }\n  const { toDOM } = binding\n\n  element.classList.add(BOUND_CLASS)\n  let dataBindings = elementToBindings.get(element)\n  if (dataBindings == null) {\n    dataBindings = []\n    elementToBindings.set(element, dataBindings)\n  }\n  dataBindings.push({ path, binding: binding as XinBinding<HTMLElement>, options })\n\n  if (toDOM != null && !path.startsWith('^')) {\n    touch(path)\n  }\n\n  return element\n}\n\nconst handledEventTypes: Set<string> = new Set()\n\nconst handleBoundEvent = (event: Event): void => {\n  // @ts-expect-error-error\n  let target = event?.target.closest(EVENT_SELECTOR)\n  let propagationStopped = false\n\n  const wrappedEvent = new Proxy(event, {\n    get (target, prop) {\n      if (prop === 'stopPropagation') {\n        return () => {\n          event.stopPropagation()\n          propagationStopped = true\n        }\n      } else {\n        // @ts-expect-error-error\n        const value = target[prop]\n        return typeof value === 'function' ? value.bind(target) : value\n      }\n    }\n  })\n  // eslint-disable-next-line no-unmodified-loop-condition\n  while (!propagationStopped && target != null) {\n    const eventBindings = elementToHandlers.get(target) as XinEventBindings\n    // eslint-disable-next-line\n    const handlers = eventBindings[event.type] || [] as XinEventHandler[]\n    for (const handler of handlers) {\n      if (typeof handler === 'function') {\n        // eslint-disable-next-line\n        handler(wrappedEvent)\n      } else {\n        const func = xin[handler]\n        if (typeof func === 'function') {\n          func(wrappedEvent)\n        } else {\n          throw new Error(`no event handler found at path ${handler}`)\n        }\n      }\n      if (propagationStopped) {\n        continue\n      }\n    }\n    target = target.parentElement != null ? target.parentElement.closest(EVENT_SELECTOR) : null\n  }\n}\n\nexport const on = (element: HTMLElement, eventType: string, eventHandler: XinEventHandler): void => {\n  let eventBindings = elementToHandlers.get(element)\n  element.classList.add(EVENT_CLASS)\n  if (eventBindings == null) {\n    eventBindings = {}\n    elementToHandlers.set(element, eventBindings)\n  }\n  // eslint-disable-next-line\n  if (!eventBindings[eventType]) {\n    eventBindings[eventType] = []\n  }\n  if (!eventBindings[eventType].includes(eventHandler)) {\n    eventBindings[eventType].push(eventHandler)\n  }\n  if (!handledEventTypes.has(eventType)) {\n    handledEventTypes.add(eventType)\n    document.body.addEventListener(eventType, handleBoundEvent, true)\n  }\n}\n","import { XinProxyObject, XinProxy, XinProxyTarget, XinObject, XinArray, XinValue, PathTestFunction, ObserverCallbackFunction } from './xin-types'\nimport { settings } from './settings'\nimport { Listener, touch, observe as _observe, unobserve, updates, observerShouldBeRemoved } from './path-listener'\nimport { getByPath, setByPath } from './by-path'\nimport { XIN_VALUE, XIN_PATH } from './metadata'\n\ninterface ProxyConstructor {\n  revocable: <T extends object, P extends object>(\n    target: T,\n    handler: ProxyHandler<P>,\n  ) => { proxy: P, revoke: () => void }\n  new <T extends object>(target: T, handler: ProxyHandler<T>): T\n  new <T extends object, P extends object>(target: T, handler: ProxyHandler<P>): P\n}\ndeclare let Proxy: ProxyConstructor\n\n// list of Array functions that change the array\nconst ARRAY_MUTATIONS = ['sort', 'splice', 'copyWithin', 'fill', 'pop', 'push', 'reverse', 'shift', 'unshift']\n\nconst registry: XinObject = {}\nconst debugPaths = true\nconst validPath = /^\\.?([^.[\\](),])+(\\.[^.[\\](),]+|\\[\\d+\\]|\\[[^=[\\](),]*=[^[\\]()]+\\])*$/\n\nconst isValidPath = (path: string): boolean => validPath.test(path)\n\nconst extendPath = (path = '', prop = ''): string => {\n  if (path === '') {\n    return prop\n  } else {\n    if (prop.match(/^\\d+$/) !== null || prop.includes('=')) {\n      return `${path}[${prop}]`\n    } else {\n      return `${path}.${prop}`\n    }\n  }\n}\n\nconst regHandler = (path = ''): ProxyHandler<XinObject> => ({\n  // TODO figure out how to correctly return array[Symbol.iterator] so that for(const foo of xin.foos) works\n  // as you'd expect\n  get (target: XinObject | XinArray, _prop: string | symbol): XinValue {\n    if (_prop === XIN_PATH) {\n      return path\n    } else if (_prop === XIN_VALUE) {\n      return target\n    }\n    if (typeof _prop === 'symbol') {\n      // @ts-expect-error\n      return target[_prop]\n    }\n    let prop = _prop\n    const compoundProp = prop.match(/^([^.[]+)\\.(.+)$/) ?? // basePath.subPath (omit '.')\n                        prop.match(/^([^\\]]+)(\\[.+)/) ?? // basePath[subPath\n                        prop.match(/^(\\[[^\\]]+\\])\\.(.+)$/) ?? // [basePath].subPath (omit '.')\n                        prop.match(/^(\\[[^\\]]+\\])\\[(.+)$/) // [basePath][subPath\n    if (compoundProp !== null) {\n      const [, basePath, subPath] = compoundProp\n      const currentPath = extendPath(path, basePath)\n      const value = getByPath(target, basePath)\n      return value !== null && typeof value === 'object' ? new Proxy<XinObject, XinProxyObject>(value, regHandler(currentPath))[subPath] : value\n    }\n    if (prop.startsWith('[') && prop.endsWith(']')) {\n      prop = prop.substring(1, prop.length - 1)\n    }\n    if (\n      (!Array.isArray(target) && target[prop] !== undefined) ||\n      (Array.isArray(target) && prop.includes('='))\n    ) {\n      let value: XinValue\n      if (prop.includes('=')) {\n        const [idPath, needle] = prop.split('=')\n        value = (target as XinObject[]).find(\n          (candidate: XinObject) => `${getByPath(candidate, idPath) as string}` === needle\n        )\n      } else {\n        value = (target as XinArray)[prop as unknown as number]\n      }\n      if (value !== null && typeof value === 'object') {\n        const currentPath = extendPath(path, prop)\n        return new Proxy<XinObject, XinProxyObject>(value, regHandler(currentPath)) as XinValue\n      } else if (typeof value === 'function') {\n        return value.bind(target)\n      } else {\n        return value\n      }\n    } else if (Array.isArray(target)) {\n      const value = target[prop as unknown as number]\n      return typeof value === 'function'\n        ? (...items: any[]) => {\n            // @ts-expect-error\n            const result = (Array.prototype[prop]).apply(target, items)\n            if (ARRAY_MUTATIONS.includes(prop)) {\n              touch(path)\n            }\n            return result\n          }\n        : typeof value === 'object'\n          ? new Proxy<XinProxyTarget, XinObject>(value, regHandler(extendPath(path, prop)))\n          : value\n    } else {\n      return target[prop]\n    }\n  },\n  set (_, prop: string, value: any) {\n    // eslint-disable-next-line\n    if (value != null && value[XIN_PATH]) {\n      value = value[XIN_VALUE]\n    }\n    const fullPath = extendPath(path, prop)\n    if (debugPaths && !isValidPath(fullPath)) {\n      throw new Error(`setting invalid path ${fullPath}`)\n    }\n    let existing = xin[fullPath] as XinProxy\n    // eslint-disable-next-line\n    if (existing != null && existing[XIN_VALUE] != null) {\n      existing = existing[XIN_VALUE] as XinProxy\n    }\n    if (existing !== value && setByPath(registry, fullPath, value)) {\n      touch(fullPath)\n    }\n    return true\n  }\n})\n\nconst observe = (test: string | RegExp | PathTestFunction, callback: string | ObserverCallbackFunction): Listener => {\n  const func = typeof callback === 'function' ? callback : (xin)[callback]\n\n  if (typeof func !== 'function') {\n    throw new Error(`observe expects a function or path to a function, ${callback as string} is neither`)\n  }\n\n  return _observe(test, func as ObserverCallbackFunction)\n}\n\nconst xin = new Proxy<XinObject, XinProxyObject>(registry, regHandler())\n\nexport {\n  xin,\n  updates,\n  touch,\n  observe,\n  unobserve,\n  observerShouldBeRemoved,\n  isValidPath,\n  settings\n}\n","export const settings = {\n  debug: false,\n  perf: false\n}\n","import { PathTestFunction, ObserverCallbackFunction } from './xin-types'\nimport { xinPath } from './metadata'\nimport { settings } from './settings'\n\nexport const observerShouldBeRemoved = Symbol('observer should be removed')\nexport const listeners: Listener[] = [] // { path_string_or_test, callback }\nconst touchedPaths: string[] = []\nlet updateTriggered: number | boolean = false\nlet updatePromise: Promise<undefined>\nlet resolveUpdate: Function\n\nexport class Listener {\n  description: string\n  test: PathTestFunction\n  callback: ObserverCallbackFunction\n\n  constructor (test: string | RegExp | PathTestFunction, callback: string | ObserverCallbackFunction) {\n    const callbackDescription = typeof callback === 'string' ? `\"${callback}\"` : `function ${callback.name}`\n    let testDescription\n    if (typeof test === 'string') {\n      this.test = t => typeof t === 'string' && t !== '' && (test.startsWith(t) || t.startsWith(test))\n      testDescription = `test = \"${test}\"`\n    } else if (test instanceof RegExp) {\n      this.test = test.test.bind(test)\n      testDescription = `test = \"${test.toString()}\"`\n    } else if (test instanceof Function) {\n      this.test = test\n      testDescription = `test = function ${test.name}`\n    } else {\n      throw new Error(\n        'expect listener test to be a string, RegExp, or test function'\n      )\n    }\n    this.description = `${testDescription}, ${callbackDescription}`\n    if (typeof callback === 'function') {\n      this.callback = callback\n    } else {\n      throw new Error('expect callback to be a path or function')\n    }\n    listeners.push(this)\n  }\n}\n\nexport const updates = async (): Promise<void> => {\n  if (updatePromise === undefined) {\n    return\n  }\n  await updatePromise\n}\n\nconst update = (): void => {\n  if (settings.perf) {\n    console.time('xin async update')\n  }\n  const paths = [...touchedPaths]\n\n  for (const path of paths) {\n    listeners\n      .filter(listener => {\n        let heard\n        try {\n          heard = listener.test(path)\n        } catch (e) {\n          throw new Error(`Listener ${listener.description} threw \"${e as string}\" at \"${path}\"`)\n        }\n        if (heard === observerShouldBeRemoved) {\n          unobserve(listener)\n          return false\n        }\n        return heard as boolean\n      })\n      .forEach(listener => {\n        let outcome\n        try {\n          outcome = listener.callback(path)\n        } catch (e) {\n          console.error(`Listener ${listener.description} threw \"${e as string}\" handling \"${path}\"`)\n        }\n        if (outcome === observerShouldBeRemoved) {\n          unobserve(listener)\n        }\n      })\n  }\n\n  touchedPaths.splice(0)\n  updateTriggered = false\n  if (typeof resolveUpdate === 'function') {\n    resolveUpdate()\n  }\n  if (settings.perf) {\n    console.timeEnd('xin async update')\n  }\n}\n\nexport const touch = (touchable: any): void => {\n  const path = typeof touchable === 'string' ? touchable : xinPath(touchable)\n\n  if (path === undefined) {\n    console.error('touch was called on an invalid target', touchable)\n    throw new Error('touch was called on an invalid target')\n  }\n\n  if (updateTriggered === false) {\n    updatePromise = new Promise(resolve => {\n      resolveUpdate = resolve\n    })\n    updateTriggered = setTimeout(update)\n  }\n\n  if (touchedPaths.find(touchedPath => path.startsWith(touchedPath)) == null) {\n    touchedPaths.push(path)\n  }\n}\n\nexport const observe = (test: string | RegExp | PathTestFunction, callback: ObserverCallbackFunction): Listener => {\n  return new Listener(test, callback)\n}\n\nexport const unobserve = (listener: Listener): void => {\n  const index = listeners.indexOf(listener)\n  if (index > -1) {\n    listeners.splice(index, 1)\n  } else {\n    throw new Error('unobserve failed, listener not found')\n  }\n}\n","import { XinObject, XinProxy, XinBinding, XinEventHandler } from './xin-types'\nimport { deepClone } from './deep-clone'\n\nexport const BOUND_CLASS = '-xin-data'\nexport const BOUND_SELECTOR = `.${BOUND_CLASS}`\nexport const EVENT_CLASS = '-xin-event'\nexport const EVENT_SELECTOR = `.${EVENT_CLASS}`\n\nexport const XIN_PATH = Symbol('xin-path')\nexport const XIN_VALUE = Symbol('xin-value')\n\nexport const xinPath = (x: any): string | undefined => {\n  return x[XIN_PATH]\n}\n\nexport function xinValue<T extends {}> (x: T): T {\n  // eslint-disable-next-line\n  return (typeof x === 'object' && x !== null ? (x as unknown as XinProxy)[XIN_VALUE] || x : x) as T\n}\n\nexport interface DataBinding<T = HTMLElement> {\n  path: string\n  binding: XinBinding<T>\n  options?: XinObject\n}\n\nexport type DataBindings = DataBinding[]\n\nexport interface XinEventBindings {\n  [eventType: string]: XinEventHandler[]\n}\n\nexport const elementToHandlers: WeakMap<Element, XinEventBindings> = new WeakMap()\nexport const elementToBindings: WeakMap<Element, DataBindings> = new WeakMap()\n\ninterface ElementMetadata {\n  eventBindings?: XinEventBindings\n  dataBindings?: DataBindings\n}\n\nexport const getElementBindings = (element: Element): ElementMetadata => {\n  return {\n    eventBindings: elementToHandlers.get(element),\n    dataBindings: elementToBindings.get(element)\n  }\n}\n\nexport const cloneWithBindings = (element: Node): Node => {\n  const cloned = element.cloneNode()\n  if (cloned instanceof HTMLElement) {\n    const dataBindings = elementToBindings.get(element as HTMLElement)\n    const eventHandlers = elementToHandlers.get(element as HTMLElement)\n    if (dataBindings != null) {\n      // @ts-expect-error-error\n      elementToBindings.set(cloned, deepClone(dataBindings))\n    }\n    if (eventHandlers != null) {\n      // @ts-expect-error-error\n      elementToHandlers.set(cloned, deepClone(eventHandlers))\n    }\n  }\n  for (const node of element instanceof HTMLTemplateElement ? element.content.childNodes : element.childNodes) {\n    if (node instanceof HTMLElement || node instanceof DocumentFragment) {\n      cloned.appendChild(cloneWithBindings(node))\n    } else {\n      cloned.appendChild(node.cloneNode())\n    }\n  }\n  return cloned\n}\n\nexport const elementToItem: WeakMap<HTMLElement, XinObject> = new WeakMap()\n\nexport const getListItem = (element: HTMLElement): any => {\n  const html = document.body.parentElement\n  while (element.parentElement != null && element.parentElement !== html) {\n    const item = elementToItem.get(element)\n    if (item != null) {\n      return item\n    }\n    element = element.parentElement\n  }\n  return false\n}\n","import { XinObject, XinArray } from './xin-types'\n\ntype Scalar = string | boolean | number | Function\ntype Cloneable = Scalar | XinObject | XinArray\n\nexport function deepClone (obj: Cloneable): Cloneable | Cloneable[] {\n  if (obj == null || typeof obj !== 'object') {\n    return obj\n  }\n  if (Array.isArray(obj)) {\n    // @ts-expect-error-error\n    return obj.map(deepClone)\n  }\n  const clone: XinObject = {}\n  for (const key in obj) {\n    const val = obj[key]\n    if (obj != null && typeof obj === 'object') {\n      clone[key] = deepClone(val) as XinObject\n    } else {\n      clone[key] = val\n    }\n  }\n  return clone\n}\n","// unique tokens passed to set by path to delete or create properties\n\nimport { XinObject, XinArray, XinScalar } from './xin-types'\nimport { makeError } from './make-error'\n\nconst now36 = (): string => new Date(parseInt('1000000000', 36) + Date.now()).valueOf().toString(36).slice(1)\nlet _seq = 0\nconst seq = (): string => (parseInt('10000', 36) + (++_seq)).toString(36).slice(-5)\nconst id = (): string => now36() + seq()\n\nconst _delete_ = {}\nconst _newObject_ = {}\n\ntype Part = string | string[]\ntype PartArray = Part[]\n\nfunction pathParts (path: string | PartArray): PartArray {\n  if (path === '') {\n    return []\n  }\n\n  if (Array.isArray(path)) {\n    return path\n  } else {\n    const parts: PartArray = []\n    while (path.length > 0) {\n      let index = path.search(/\\[[^\\]]+\\]/)\n      if (index === -1) {\n        parts.push(path.split('.'))\n        break\n      } else {\n        const part = path.slice(0, index)\n        path = path.slice(index)\n        if (part !== '') {\n          parts.push(part.split('.'))\n        }\n        index = path.indexOf(']') + 1\n        parts.push(path.slice(1, index - 1))\n        // handle paths dereferencing array element like foo[0].id\n        if (path.slice(index, index + 1) === '.') {\n          index += 1\n        }\n        path = path.slice(index)\n      }\n    }\n    return parts\n  }\n}\n\nconst idPathMaps = new WeakMap()\n\ninterface IdPathMap {\n  [key: string]: number\n}\n\nfunction buildIdPathValueMap (array: XinObject[], idPath: string): IdPathMap {\n  if (idPathMaps.get(array) === undefined) {\n    idPathMaps.set(array, {})\n  }\n  if (idPathMaps.get(array)[idPath] === undefined) {\n    idPathMaps.get(array)[idPath] = {}\n  }\n  const map = idPathMaps.get(array)[idPath]\n\n  if (idPath === '_auto_') {\n    array.forEach((item, idx) => {\n      if (item._auto_ === undefined) item._auto_ = id()\n      map[item._auto_ as string + ''] = idx\n    })\n  } else {\n    array.forEach((item, idx) => {\n      map[getByPath(item, idPath) as string + ''] = idx\n    })\n  }\n  return map\n}\n\nfunction getIdPathMap (array: XinObject[], idPath: string): IdPathMap {\n  if (idPathMaps.get(array) === undefined || idPathMaps.get(array)[idPath] === undefined) {\n    return buildIdPathValueMap(array, idPath)\n  } else {\n    return idPathMaps.get(array)[idPath]\n  }\n}\n\nfunction keyToIndex (array: XinObject[], idPath: string, idValue: any): number {\n  idValue = idValue as string + ''\n  let idx = getIdPathMap(array, idPath)[idValue]\n  if (idx === undefined || getByPath(array[idx], idPath) as string + '' !== idValue) {\n    idx = buildIdPathValueMap(array, idPath)[idValue]\n  }\n  return idx\n}\n\nfunction byKey (obj: XinObject, key: string, valueToInsert?: any): any {\n  if (obj[key] === undefined && valueToInsert !== undefined) {\n    obj[key] = valueToInsert\n  }\n  return obj[key]\n}\n\nfunction byIdPath (array: any[], idPath: string, idValue: string, valueToInsert?: any): any {\n  let idx = idPath !== '' ? keyToIndex(array, idPath, idValue) : idValue\n  if (valueToInsert === _delete_) {\n    array.splice(idx as number, 1)\n    idPathMaps.delete(array)\n    return Symbol('deleted')\n  } else if (valueToInsert === _newObject_) {\n    if (idPath === '' && array[idx as number] === undefined) {\n      array[idx as number] = {}\n    }\n  } else if (valueToInsert !== undefined) {\n    if (idx !== undefined) {\n      array[idx as number] = valueToInsert\n    } else if (idPath !== '' && getByPath(valueToInsert, idPath) as string + '' === idValue + '') {\n      array.push(valueToInsert)\n      idx = array.length - 1\n    } else {\n      throw new Error(`byIdPath insert failed at [${idPath}=${idValue}]`)\n    }\n  }\n  return array[idx as number]\n}\n\nfunction expectArray (obj: any): void {\n  if (!Array.isArray(obj)) {\n    throw makeError('setByPath failed: expected array, found', obj)\n  }\n}\n\nfunction expectObject (obj: any): void {\n  if ((obj == null) || !(obj instanceof Object)) {\n    throw makeError('setByPath failed: expected Object, found', obj)\n  }\n}\n\nfunction getByPath (obj: XinObject | XinArray, path: string): any {\n  const parts = pathParts(path)\n  let found: XinObject | XinArray | XinScalar = obj\n  let i, iMax, j, jMax\n  for (i = 0, iMax = parts.length; found !== undefined && i < iMax; i++) {\n    const part = parts[i]\n    if (Array.isArray(part)) {\n      for (j = 0, jMax = part.length; found !== undefined && j < jMax; j++) {\n        const key = part[j]\n        found = (found as XinObject)[key]\n      }\n    } else {\n      if ((found as XinArray).length === 0) {\n        // @ts-expect-error-error\n        found = (found as XinArray)[part.slice(1)]\n        if (part[0] !== '=') {\n          return undefined\n        }\n      } else if (part.includes('=')) {\n        const [idPath, ...tail] = part.split('=')\n        found = byIdPath(found as any[], idPath, tail.join('='))\n      } else {\n        j = parseInt(part, 10)\n        found = (found as XinArray)[j]\n      }\n    }\n  }\n  return found\n}\n\nfunction setByPath (orig: XinObject | XinArray, path: string, val: any): boolean {\n  let obj: XinObject | XinArray | XinScalar = orig\n  const parts = pathParts(path)\n\n  while ((obj != null) && (parts.length > 0)) {\n    const part = parts.shift()\n    if (typeof part === 'string') {\n      const equalsOffset = part.indexOf('=')\n      if (equalsOffset > -1) {\n        if (equalsOffset === 0) {\n          expectObject(obj)\n        } else {\n          expectArray(obj)\n        }\n        const idPath = part.slice(0, equalsOffset)\n        const idValue = part.slice(equalsOffset + 1)\n        obj = byIdPath(obj as any[], idPath, idValue, (parts.length > 0) ? _newObject_ : val)\n        if (parts.length === 0) {\n          return true\n        }\n      } else {\n        expectArray(obj)\n        const idx = parseInt(part, 10)\n        if (parts.length > 0) {\n          obj = (obj as XinArray)[idx]\n        } else {\n          if (val !== _delete_) {\n            if ((obj as XinArray)[idx] === val) {\n              return false\n            }\n            (obj as XinArray)[idx] = val\n          } else {\n            (obj as XinArray).splice(idx, 1)\n          }\n          return true\n        }\n      }\n    } else if (Array.isArray(part) && (part.length > 0)) {\n      expectObject(obj)\n      while (part.length > 0) {\n        const key = part.shift() as string\n        if ((part.length > 0) || (parts.length > 0)) {\n          // if we're at the end of part.length then we need to insert an array\n          obj = byKey((obj as XinObject), key, (part.length > 0) ? {} : [])\n        } else {\n          if (val !== _delete_) {\n            if ((obj as XinObject)[key] === val) {\n              return false\n            }\n            (obj as XinObject)[key] = val\n          } else {\n            if (!Object.prototype.hasOwnProperty.call(obj, key)) {\n              return false\n            }\n            // eslint-disable-next-line\n            delete (obj as XinObject)[key]\n          }\n          return true\n        }\n      }\n    } else {\n      throw new Error(`setByPath failed, bad path ${path}`)\n    }\n  }\n\n  // eslint-disable-next-line\n  throw new Error(`setByPath(${orig}, ${path}, ${val}) failed`)\n}\n\nfunction deleteByPath (orig: XinObject, path: string): void {\n  if (getByPath(orig, path) !== null) {\n    setByPath(orig, path, _delete_)\n  }\n}\n\nexport { getByPath, setByPath, deleteByPath, pathParts }\n","const stringify = (x: any): string => {\n  try {\n    return JSON.stringify(x)\n  } catch (_) {\n    return '{has circular references}'\n  }\n}\n\nexport const makeError = (...messages: any[]): Error => new Error(messages.map(stringify).join(' '))\n","import { XinObject, XinBinding, ValueElement } from './xin-types'\nimport { getListBinding } from './list-binding'\nimport { getValue, setValue } from './dom'\n\nexport const bindings: { [key: string | symbol]: XinBinding } = {\n  value: {\n    toDOM (element: HTMLElement, value: any) {\n      setValue(element, value)\n    },\n\n    fromDOM (element: HTMLElement) {\n      return getValue(element as ValueElement)\n    }\n  },\n\n  text: {\n    toDOM (element: HTMLElement, value: any) {\n      element.textContent = value\n    }\n  },\n\n  enabled: {\n    toDOM (element: HTMLElement, value: any) {\n      // eslint-disable-next-line\n      (element as HTMLInputElement).disabled = !value\n    }\n  },\n\n  disabled: {\n    toDOM (element: HTMLElement, value: any) {\n      (element as HTMLInputElement).disabled = Boolean(value)\n    }\n  },\n\n  style: {\n    toDOM (element: HTMLElement, value: any) {\n      if (typeof value === 'object') {\n        for (const prop of Object.keys(value)) {\n          // @ts-expect-error\n          element.style[prop] = value[prop]\n        }\n      } else if (typeof value === 'string') {\n        element.setAttribute('style', value)\n      } else {\n        throw new Error('style binding expects either a string or object')\n      }\n    }\n  },\n\n  list: {\n    toDOM (element: HTMLElement, value: any[], options?: XinObject) {\n      const listBinding = getListBinding(element, options)\n      listBinding.update(value)\n    }\n  }\n}\n","import { settings } from './settings'\nimport { resizeObserver } from './dom'\nimport { throttle } from './throttle'\nimport { xin } from './xin'\nimport { cloneWithBindings, elementToItem, elementToBindings, BOUND_SELECTOR, DataBinding, xinValue, xinPath } from './metadata'\nimport { XinObject } from './xin-types'\n\nconst listBindingRef = Symbol('list-binding')\nconst SLICE_INTERVAL_MS = 16 // 60fps\n\ndeclare global {\n  interface HTMLElement {\n    [listBindingRef]?: ListBinding\n  }\n}\n\ninterface ListBindingOptions {\n  idPath?: string\n  initInstance?: (element: HTMLElement, value: any) => void\n  updateInstance?: (element: HTMLElement, value: any) => void\n  virtual?: { height: number, width?: number }\n  hiddenProp?: symbol | string\n  visibleProp?: symbol | string\n}\n\ninterface VirtualListSlice {\n  items: any[]\n  firstItem: number\n  lastItem: number\n  topBuffer: number\n  bottomBuffer: number\n}\n\nfunction updateRelativeBindings (element: HTMLElement, path: string): void {\n  const boundElements = [...element.querySelectorAll(BOUND_SELECTOR)]\n  if (element.matches(BOUND_SELECTOR)) {\n    boundElements.unshift(element)\n  }\n  for (const boundElement of boundElements) {\n    const bindings = elementToBindings.get(boundElement) as DataBinding[]\n    for (const binding of bindings) {\n      if (binding.path.startsWith('^')) {\n        binding.path = `${path}${binding.path.substring(1)}`\n      }\n      if (binding.binding.toDOM != null) {\n        binding.binding.toDOM(boundElement as HTMLElement, xin[binding.path])\n      }\n    }\n  }\n}\n\nclass ListBinding {\n  boundElement: HTMLElement\n  listTop: HTMLElement\n  listBottom: HTMLElement\n  template: HTMLElement\n  options: ListBindingOptions\n  itemToElement: WeakMap<XinObject, HTMLElement>\n  private _array: any[] = []\n  private readonly _update?: VoidFunction\n  private _previousSlice?: VirtualListSlice\n\n  constructor (boundElement: HTMLElement, options: ListBindingOptions = {}) {\n    this.boundElement = boundElement\n    this.itemToElement = new WeakMap()\n    if (boundElement.children.length !== 1) {\n      throw new Error('ListBinding expects an element with exactly one child element')\n    }\n    if (boundElement.children[0] instanceof HTMLTemplateElement) {\n      const template = boundElement.children[0]\n      if (template.content.children.length !== 1) {\n        throw new Error('ListBinding expects a template with exactly one child element')\n      }\n      this.template = cloneWithBindings(template.content.children[0]) as HTMLElement\n    } else {\n      this.template = boundElement.children[0] as HTMLElement\n      this.template.remove()\n    }\n    this.listTop = document.createElement('div')\n    this.listBottom = document.createElement('div')\n    this.boundElement.append(this.listTop)\n    this.boundElement.append(this.listBottom)\n    this.options = options\n    if (options.virtual != null) {\n      resizeObserver.observe(this.boundElement)\n      this._update = throttle(() => {\n        this.update(this._array, true)\n      }, SLICE_INTERVAL_MS)\n      this.boundElement.addEventListener('scroll', this._update)\n      this.boundElement.addEventListener('resize', this._update)\n    }\n  }\n\n  private visibleSlice (): VirtualListSlice {\n    const { virtual, hiddenProp, visibleProp } = this.options\n    let visibleArray = this._array\n    if (hiddenProp !== undefined) {\n      visibleArray = visibleArray.filter(item => item[hiddenProp] !== true)\n    }\n    if (visibleProp !== undefined) {\n      visibleArray = visibleArray.filter(item => item[visibleProp] === true)\n    }\n    let firstItem = 0\n    let lastItem = visibleArray.length - 1\n    let topBuffer = 0\n    let bottomBuffer = 0\n\n    if (virtual != null) {\n      const width = this.boundElement.offsetWidth\n      const height = this.boundElement.offsetHeight\n\n      const visibleColumns = virtual.width != null ? Math.max(1, Math.floor(width / virtual.width)) : 1\n      const visibleRows = Math.ceil(height / virtual.height) + 1\n      const totalRows = Math.ceil(visibleArray.length / visibleColumns)\n      const visibleItems = visibleColumns * visibleRows\n      let topRow = Math.floor(this.boundElement.scrollTop / virtual.height)\n      if (topRow > totalRows - visibleRows + 1) {\n        topRow = Math.max(0, totalRows - visibleRows + 1)\n      }\n      firstItem = topRow * visibleColumns\n      lastItem = firstItem + visibleItems - 1\n\n      topBuffer = topRow * virtual.height\n      bottomBuffer = Math.max(totalRows * virtual.height - height - topBuffer, 0)\n    }\n\n    return {\n      items: visibleArray,\n      firstItem,\n      lastItem,\n      topBuffer,\n      bottomBuffer\n    }\n  }\n\n  update (array?: any[], isSlice?: boolean): void {\n    if (array == null) {\n      array = []\n    }\n    this._array = array\n\n    const { initInstance, updateInstance, hiddenProp, visibleProp } = this.options\n    // @ts-expect-error\n    const arrayPath: string = xinPath(array)\n\n    const slice = this.visibleSlice()\n    this.boundElement.classList.toggle('-xin-empty-list', slice.items.length === 0)\n    const previousSlice = this._previousSlice\n    const { firstItem, lastItem, topBuffer, bottomBuffer } = slice\n    if (\n      hiddenProp === undefined &&\n      visibleProp === undefined &&\n      isSlice === true &&\n      previousSlice != null &&\n      firstItem === previousSlice.firstItem &&\n      lastItem === previousSlice.lastItem\n    ) {\n      return\n    }\n    this._previousSlice = slice\n\n    let removed = 0\n    let moved = 0\n    let created = 0\n\n    for (const element of [...this.boundElement.children]) {\n      if (element === this.listTop || element === this.listBottom) {\n        continue\n      }\n      const proxy = elementToItem.get(element as HTMLElement)\n      if (proxy == null) {\n        element.remove()\n      } else {\n        const idx = slice.items.indexOf(proxy)\n        if (idx < firstItem || idx > lastItem) {\n          element.remove()\n          this.itemToElement.delete(proxy)\n          elementToItem.delete(element as HTMLElement)\n          removed++\n        }\n      }\n    }\n\n    this.listTop.style.height = String(topBuffer) + 'px'\n    this.listBottom.style.height = String(bottomBuffer) + 'px'\n\n    // build a complete new set of elements in the right order\n    const elements: HTMLElement[] = []\n    const { idPath } = this.options\n    for (let i = firstItem; i <= lastItem; i++) {\n      const item = slice.items[i]\n      if (item === undefined) {\n        continue\n      }\n      let element = this.itemToElement.get(xinValue(item))\n      if (element == null) {\n        created++\n        element = cloneWithBindings(this.template) as HTMLElement\n        if (typeof item === 'object') {\n          this.itemToElement.set(xinValue(item), element)\n          elementToItem.set(element, xinValue(item))\n        }\n        this.boundElement.insertBefore(element, this.listBottom)\n        if (idPath != null) {\n          const idValue = item[idPath] as string\n          const itemPath = `${arrayPath}[${idPath}=${idValue}]`\n          updateRelativeBindings(element, itemPath)\n        } else {\n          const itemPath = `${arrayPath}[${i}]`\n          updateRelativeBindings(element, itemPath)\n        }\n        if (initInstance != null) {\n          // eslint-disable-next-line\n          initInstance(element, item)\n        }\n      }\n      if (updateInstance != null) {\n        // eslint-disable-next-line\n        updateInstance(element, item)\n      }\n      elements.push(element)\n    }\n\n    // make sure all the elements are in the DOM and in the correct location\n    let insertionPoint: HTMLElement | null = null\n    for (const element of elements) {\n      if (element.previousElementSibling !== insertionPoint) {\n        moved++\n        if (insertionPoint?.nextElementSibling != null) {\n          this.boundElement.insertBefore(element, insertionPoint.nextElementSibling)\n        } else {\n          this.boundElement.insertBefore(element, this.listBottom)\n        }\n      }\n      insertionPoint = element\n    }\n\n    if (settings.perf) {\n      console.log(arrayPath, 'updated', { removed, created, moved })\n    }\n  }\n}\n\nexport const getListBinding = (boundElement: HTMLElement, options?: ListBindingOptions): ListBinding => {\n  let listBinding = boundElement[listBindingRef]\n  if (listBinding == null) {\n    listBinding = new ListBinding(boundElement, options)\n    boundElement[listBindingRef] = listBinding\n  }\n  return listBinding\n}\n","import { cloneWithBindings } from './metadata'\nimport { ContentType, ValueElement } from './xin-types'\n\nexport const dispatch = (target: Element, type: string): void => {\n  const event = new Event(type)\n  target.dispatchEvent(event)\n}\n\nconst valueType = (element: HTMLElement): string => {\n  if (element instanceof HTMLInputElement) {\n    return element.type\n  } else if (element instanceof HTMLSelectElement && element.hasAttribute('multiple')) {\n    return 'multi-select'\n  } else {\n    return 'other'\n  }\n}\n\nexport const setValue = (element: HTMLElement, newValue: any): void => {\n  switch (valueType(element)) {\n    case 'radio':\n      // @ts-expect-error\n      element.checked = element.value === newValue\n      break\n    case 'checkbox':\n      // @ts-expect-error\n      element.checked = newValue\n      break\n    case 'date':\n      // @ts-expect-error\n      element.valueAsDate = new Date(newValue)\n      break\n    case 'multi-select':\n      for (const option of [...element.querySelectorAll('option')] as HTMLOptionElement[]) {\n        option.selected = newValue[option.value]\n      }\n      break\n    default:\n      // @ts-expect-error\n      element.value = newValue\n  }\n}\n\ninterface PickMap {\n  [key: string]: boolean\n}\nexport const getValue = (element: ValueElement): any => {\n  switch (valueType(element)) {\n    case 'radio':\n    {\n      const radio = element.parentElement?.querySelector(`[name=\"${element.name}\"]:checked`) as HTMLInputElement\n      return radio != null ? radio.value : null\n    }\n    case 'checkbox':\n      // @ts-expect-error\n      return element.checked\n    case 'date':\n      // @ts-expect-error\n      return element.valueAsDate.toISOString()\n    case 'multi-select':\n      return [...element.querySelectorAll('option')]\n        .reduce((map: PickMap, option: HTMLOptionElement): PickMap => {\n          map[option.value] = option.selected\n          return map\n        }, {})\n    default:\n      return element.value\n  }\n}\n\n/* global ResizeObserver */\nconst { ResizeObserver } = globalThis\nexport const resizeObserver = ResizeObserver != null\n  ? new ResizeObserver(entries => {\n    for (const entry of entries) {\n      const element = entry.target\n      dispatch(element, 'resize')\n    }\n  })\n  : {\n      observe () {},\n      unobserve () {}\n    }\n\nfunction convertToXinSlot (slot: HTMLSlotElement): void {\n  const xinSlot = document.createElement('xin-slot')\n  if (slot.name !== '') {\n    xinSlot.setAttribute('name', slot.name)\n  }\n  slot.replaceWith(xinSlot)\n}\n\nexport const appendContentToElement = (elt: Element | ShadowRoot | null | undefined, content: ContentType | null | undefined): boolean => {\n  let isSlotted = false\n  if (elt != null && content != null) {\n    if (typeof content === 'string') {\n      elt.textContent = content\n    } else if (Array.isArray(content)) {\n      content.forEach(node => {\n        elt.append(node instanceof Node ? cloneWithBindings(node) : node)\n        if (node instanceof Node && (node.querySelector('slot') != null)) {\n          isSlotted = true\n        }\n      })\n    } else if (content instanceof HTMLElement || content instanceof DocumentFragment) {\n      const slots = [...content.querySelectorAll('slot')]\n      if (slots.length > 0) {\n        isSlotted = true\n        slots.forEach(convertToXinSlot)\n      }\n      elt.append(cloneWithBindings(content))\n    } else {\n      throw new Error('expect text content or document node')\n    }\n  }\n  return isSlotted\n}\n","type VoidFunc = (...args: any[]) => void\n\nexport const debounce = (origFn: VoidFunc, minInterval = 250): VoidFunc => {\n  let debounceId: number\n  return (...args: any[]) => {\n    if (debounceId !== undefined) clearTimeout(debounceId)\n    debounceId = setTimeout(() => {\n      origFn(...args)\n    }, minInterval)\n  }\n}\n\nexport const throttle = (origFn: VoidFunc, minInterval = 250): VoidFunc => {\n  let debounceId: number\n  let previousCall = Date.now() - minInterval\n  let inFlight = false\n  return (...args: any[]) => {\n    clearTimeout(debounceId)\n    debounceId = setTimeout(async () => {\n      origFn(...args)\n      previousCall = Date.now()\n    }, minInterval)\n    if (!inFlight && Date.now() - previousCall >= minInterval) {\n      inFlight = true\n      try {\n        origFn(...args)\n        previousCall = Date.now()\n      } finally {\n        inFlight = false\n      }\n    }\n  }\n}\n","import { Color } from './color'\nimport { elements } from './elements'\nimport { camelToKabob } from './string-case'\nimport { XinStyleSheet, XinStyleRule, XinStyleMap } from './css-types'\n\nexport function StyleNode (styleSheet: XinStyleSheet): HTMLStyleElement {\n  return elements.style(css(styleSheet))\n}\n\nconst numericProps = [\n  'animation-iteration-count', 'flex', 'flex-base', 'flex-grow', 'flex-shrink', 'gap', 'opacity', 'order',\n  'tab-size', 'widows', 'z-index', 'zoom'\n]\nconst renderProp = (indentation: string, cssProp: string, value: string | number | undefined): string => {\n  if (value === undefined) {\n    return ''\n  } else if (typeof value === 'string' || numericProps.includes(cssProp)) {\n    return `${indentation}  ${cssProp}: ${value};`\n  } else {\n    return `${indentation}  ${cssProp}: ${value}px;`\n  }\n}\n\nconst renderStatement = (key: string, value: string | number | XinStyleRule | undefined, indentation = ''): string => {\n  const cssProp = camelToKabob(key)\n  if (typeof value === 'object') {\n    const renderedRule = Object.keys(value).map(innerKey => renderStatement(innerKey, value[innerKey], `${indentation}  `)).join('\\n')\n    return `${indentation}  ${key} {\\n${renderedRule}\\n${indentation}  }`\n  } else {\n    return renderProp(indentation, cssProp, value)\n  }\n}\n\nexport const css = (obj: XinStyleSheet | XinStyleMap, indentation = ''): string => {\n  const selectors = Object.keys(obj).map((selector) => {\n    const body = obj[selector]\n    if (typeof body === 'string') {\n      if (selector === '@import') {\n        return `@import url('${body}');`\n      }\n      throw new Error('top-level string value only allowed for `@import`')\n    }\n    const rule = Object.keys(body)\n      .map(prop => renderStatement(prop, body[prop]))\n      .join('\\n')\n    return `${indentation}${selector} {\\n${rule}\\n}`\n  })\n  return selectors.join('\\n\\n')\n}\n\nexport const initVars = (obj: { [key: string]: string | number }): XinStyleRule => {\n  const rule: XinStyleRule = {}\n  for (const key of Object.keys(obj)) {\n    const value = obj[key]\n    const kabobKey = camelToKabob(key)\n    rule[`--${kabobKey}`] = typeof value === 'number' && value !== 0 ? String(value) + 'px' : value\n  }\n  return rule\n}\n\nexport const darkMode = (obj: XinStyleRule): XinStyleRule => {\n  const rule: XinStyleRule = {}\n  for (const key of Object.keys(obj)) {\n    let value = obj[key]\n    if (typeof value === 'string' && value.match(/^(#|rgb[a]?\\(|hsl[a]?\\()/) != null) {\n      value = Color.fromCss(value).inverseLuminance.html\n      rule[`--${camelToKabob(key)}`] = value\n    }\n  }\n  return rule\n}\n\nexport const vars = new Proxy<{ [key: string]: string }>({}, {\n  get (target, prop: string) {\n    if (target[prop] == null) {\n      prop = prop.replace(/[A-Z]/g, x => `-${x.toLocaleLowerCase()}`)\n      let [,varName,, isNegative, scaleText, method] = prop.match(/^([^\\d_]*)((_)?(\\d+)(\\w*))?$/) as string[]\n      varName = `--${varName}`\n      if (scaleText != null) {\n        const scale = isNegative == null ? Number(scaleText) / 100 : -Number(scaleText) / 100\n        switch (method) {\n          case 'b': // brighten\n            {\n              const baseColor = getComputedStyle(document.body).getPropertyValue(varName)\n              target[prop] = scale > 0 ? Color.fromCss(baseColor).brighten(scale).rgba : Color.fromCss(baseColor).darken(-scale).rgba\n            }\n            break\n          case 's': // saturate\n            {\n              const baseColor = getComputedStyle(document.body).getPropertyValue(varName)\n              target[prop] = scale > 0 ? Color.fromCss(baseColor).saturate(scale).rgba : Color.fromCss(baseColor).desaturate(-scale).rgba\n            }\n            break\n          case 'h': // hue\n            {\n              const baseColor = getComputedStyle(document.body).getPropertyValue(varName)\n              target[prop] = Color.fromCss(baseColor).rotate(scale * 100).rgba\n              console.log(Color.fromCss(baseColor).hsla, Color.fromCss(baseColor).rotate(scale).hsla)\n            }\n            break\n          case 'o': // alpha\n            {\n              const baseColor = getComputedStyle(document.body).getPropertyValue(varName)\n              target[prop] = Color.fromCss(baseColor).opacity(scale).rgba\n            }\n            break\n          case '':\n            target[prop] = `calc(var(${varName}) * ${scale})`\n            break\n          default:\n            console.error(method)\n            throw new Error(`Unrecognized method ${method} for css variable ${varName}`)\n        }\n      } else {\n        target[prop] = `var(${varName})`\n      }\n    }\n    return target[prop]\n  }\n})\n","import { lerp, clamp } from './more-math'\n\nconst hex2 = (n: number): string => ('00' + Math.round(Number(n)).toString(16)).slice(-2)\n\nclass HslColor {\n  h: number\n  s: number\n  l: number\n\n  constructor (r: number, g: number, b: number) {\n    r /= 255\n    g /= 255\n    b /= 255\n    const l = Math.max(r, g, b)\n    const s = l - Math.min(r, g, b)\n    const h = s !== 0\n      ? l === r\n        ? (g - b) / s\n        : l === g\n          ? 2 + (b - r) / s\n          : 4 + (r - g) / s\n      : 0\n\n    this.h = 60 * h < 0 ? 60 * h + 360 : 60 * h\n    this.s = s !== 0 ? (l <= 0.5 ? s / (2 * l - s) : s / (2 - (2 * l - s))) : 0\n    this.l = (2 * l - s) / 2\n  }\n}\n\nconst span = globalThis.document !== undefined ? globalThis.document.createElement('span') : undefined\nexport class Color {\n  r: number\n  g: number\n  b: number\n  a: number\n\n  static fromCss (spec: string): Color {\n    let converted = spec\n    if (span instanceof HTMLSpanElement) {\n      span.style.color = spec\n      document.body.appendChild(span)\n      converted = getComputedStyle(span).color\n      span.remove()\n    }\n    const [r, g, b, a] = converted.match(/[\\d.]+/g) as string[]\n    return new Color(Number(r), Number(g), Number(b), a == null ? 1 : Number(a))\n  }\n\n  static fromHsl (h: number, s: number, l: number, a = 1): Color {\n    return Color.fromCss(`hsla(${h.toFixed(0)}, ${(s * 100).toFixed(0)}%, ${(l * 100).toFixed(0)}%, ${a.toFixed(2)})`)\n  }\n\n  constructor (r: number, g: number, b: number, a = 1) {\n    this.r = clamp(0, r, 255)\n    this.g = clamp(0, g, 255)\n    this.b = clamp(0, b, 255)\n    this.a = a !== undefined ? clamp(0, a, 1) : a = 1\n  }\n\n  get inverse (): Color {\n    return new Color(255 - this.r, 255 - this.g, 255 - this.b, this.a)\n  }\n\n  get inverseLuminance (): Color {\n    const { h, s, l } = this._hsl\n    return Color.fromHsl(h, s, 1 - l, this.a)\n  }\n\n  get rgb (): string {\n    const { r, g, b } = this\n    return `rgb(${r.toFixed(0)},${g.toFixed(0)},${b.toFixed(0)})`\n  }\n\n  get rgba (): string {\n    const { r, g, b, a } = this\n    return `rgba(${r.toFixed(0)},${g.toFixed(0)},${b.toFixed(0)},${a.toFixed(2)})`\n  }\n\n  get RGBA (): number[] {\n    return [this.r / 255, this.g / 255, this.b / 255, this.a]\n  }\n\n  get ARGB (): number[] {\n    return [this.a, this.r / 255, this.g / 255, this.b / 255]\n  }\n\n  _hslCached?: HslColor\n\n  get _hsl (): HslColor {\n    if (this._hslCached == null) {\n      this._hslCached = new HslColor(this.r, this.g, this.b)\n    }\n    return this._hslCached\n  }\n\n  get hsl (): string {\n    const { h, s, l } = this._hsl\n    return `hsl(${h.toFixed(0)}, ${(s * 100).toFixed(0)}%, ${(l * 100).toFixed(0)}%)`\n  }\n\n  get hsla (): string {\n    const { h, s, l } = this._hsl\n    return `hsla(${h.toFixed(0)}, ${(s * 100).toFixed(0)}%, ${(l * 100).toFixed(0)}%, ${this.a.toFixed(2)})`\n  }\n\n  get mono (): Color {\n    const v = this.brightness * 255\n    return new Color(v, v, v)\n  }\n\n  get brightness (): number {\n    // http://www.itu.int/rec/R-REC-BT.601\n    return (0.299 * this.r + 0.587 * this.g + 0.114 * this.b) / 255\n  }\n\n  get html (): string {\n    return this.a === 1 ? '#' + hex2(this.r) + hex2(this.g) + hex2(this.b) : '#' + hex2(this.r) + hex2(this.g) + hex2(this.b) + hex2(Math.floor(255 * this.a))\n  }\n\n  brighten (amount: number): Color {\n    let { h, s, l } = this._hsl\n    l = clamp(0, l + amount * (1 - l), 1)\n    return Color.fromHsl(h, s, l, this.a)\n  }\n\n  darken (amount: number): Color {\n    let { h, s, l } = this._hsl\n    l = clamp(0, l * (1 - amount), 1)\n    return Color.fromHsl(h, s, l, this.a)\n  }\n\n  saturate (amount: number): Color {\n    let { h, s, l } = this._hsl\n    s = clamp(0, s + amount * (1 - s), 1)\n    return Color.fromHsl(h, s, l, this.a)\n  }\n\n  desaturate (amount: number): Color {\n    let { h, s, l } = this._hsl\n    s = clamp(0, s * (1 - amount), 1)\n    return Color.fromHsl(h, s, l, this.a)\n  }\n\n  rotate (amount: number): Color {\n    let { h, s, l } = this._hsl\n    h = (h + 360 + amount) % 360\n    return Color.fromHsl(h, s, l, this.a)\n  }\n\n  opacity (alpha: number): Color {\n    const { h, s, l } = this._hsl\n    return Color.fromHsl(h, s, l, alpha)\n  }\n\n  swatch (): void {\n    const { r, g, b, a } = this\n    console.log(`%c   %c ${this.html}, rgba(${r}, ${g}, ${b}, ${a}), ${this.hsla}`, `background-color: rgba(${r}, ${g}, ${b}, ${a})`, 'background-color: #eee')\n  }\n\n  blend (otherColor: Color, t: number): Color {\n    return new Color(\n      lerp(this.r, otherColor.r, t),\n      lerp(this.g, otherColor.g, t),\n      lerp(this.b, otherColor.b, t),\n      lerp(this.a, otherColor.a, t)\n    )\n  }\n}\n","/*\n# more-math\n\nSome simple functions egregiously missing from `Math`\n*/\n\nexport const RADIANS_TO_DEGREES = 180 / Math.PI\nexport const DEGREES_TO_RADIANS = Math.PI / 180\n\nexport function clamp (min: number, v: number, max: number): number {\n  return v < min ? min : (v > max ? max : v)\n}\n\nexport function lerp (a: number, b: number, t: number): number {\n  t = clamp(0, t, 1)\n  return t * (b - a) + a\n}\n\nexport const MoreMath = {\n  clamp,\n  lerp\n}\n","import { bind, on } from './bind'\nimport { bindings } from './bindings'\nimport { ElementPart, ElementProps, ElementCreator, SwissArmyElement } from './xin-types'\nimport { camelToKabob } from './string-case'\n\nexport interface ElementsProxy {\n  a: ElementCreator<HTMLAnchorElement>\n  abbr: ElementCreator\n  acronym: ElementCreator\n  address: ElementCreator\n  area: ElementCreator<HTMLAreaElement>\n  article: ElementCreator\n  aside: ElementCreator\n  audio: ElementCreator<HTMLAudioElement>\n  b: ElementCreator\n  base: ElementCreator<HTMLBaseElement>\n  basefont: ElementCreator\n  bdi: ElementCreator\n  bdo: ElementCreator\n  big: ElementCreator\n  blockquote: ElementCreator<HTMLQuoteElement>\n  body: ElementCreator<HTMLBodyElement>\n  br: ElementCreator<HTMLBRElement>\n  button: ElementCreator<HTMLButtonElement>\n  canvas: ElementCreator<HTMLCanvasElement>\n  caption: ElementCreator\n  center: ElementCreator\n  cite: ElementCreator\n  code: ElementCreator\n  col: ElementCreator<HTMLTableColElement>\n  colgroup: ElementCreator<HTMLTableColElement>\n  data: ElementCreator<HTMLDataElement>\n  datalist: ElementCreator<HTMLDataListElement>\n  dd: ElementCreator\n  del: ElementCreator\n  details: ElementCreator<HTMLDetailsElement>\n  dfn: ElementCreator\n  dialog: ElementCreator<HTMLDialogElement>\n  div: ElementCreator<HTMLDivElement>\n  dl: ElementCreator\n  dt: ElementCreator\n  em: ElementCreator\n  embed: ElementCreator<HTMLEmbedElement>\n  fieldset: ElementCreator<HTMLFieldSetElement>\n  figcaption: ElementCreator\n  figure: ElementCreator\n  font: ElementCreator\n  footer: ElementCreator\n  form: ElementCreator<HTMLFormElement>\n  frame: ElementCreator\n  frameset: ElementCreator\n  head: ElementCreator<HTMLHeadElement>\n  header: ElementCreator\n  hgroup: ElementCreator\n  h1: ElementCreator<HTMLHeadingElement>\n  h2: ElementCreator<HTMLHeadingElement>\n  h3: ElementCreator<HTMLHeadingElement>\n  h4: ElementCreator<HTMLHeadingElement>\n  h5: ElementCreator<HTMLHeadingElement>\n  h6: ElementCreator<HTMLHeadingElement>\n  hr: ElementCreator<HTMLHRElement>\n  html: ElementCreator<HTMLHtmlElement>\n  i: ElementCreator\n  iframe: ElementCreator<HTMLIFrameElement>\n  img: ElementCreator<HTMLImageElement>\n  input: ElementCreator<HTMLInputElement>\n  ins: ElementCreator<HTMLModElement>\n  kbd: ElementCreator\n  keygen: ElementCreator<HTMLUnknownElement>\n  label: ElementCreator<HTMLLabelElement>\n  legend: ElementCreator<HTMLLegendElement>\n  li: ElementCreator<HTMLLIElement>\n  link: ElementCreator<HTMLLinkElement>\n  main: ElementCreator\n  map: ElementCreator<HTMLMapElement>\n  mark: ElementCreator\n  menu: ElementCreator<HTMLMenuElement>\n  menuitem: ElementCreator<HTMLUnknownElement>\n  meta: ElementCreator<HTMLMetaElement>\n  meter: ElementCreator<HTMLMeterElement>\n  nav: ElementCreator\n  noframes: ElementCreator\n  noscript: ElementCreator\n  object: ElementCreator<HTMLObjectElement>\n  ol: ElementCreator<HTMLOListElement>\n  optgroup: ElementCreator<HTMLOptGroupElement>\n  option: ElementCreator<HTMLOptionElement>\n  output: ElementCreator<HTMLOutputElement>\n  p: ElementCreator<HTMLParagraphElement>\n  param: ElementCreator\n  picture: ElementCreator<HTMLPictureElement>\n  pre: ElementCreator<HTMLPreElement>\n  progress: ElementCreator<HTMLProgressElement>\n  q: ElementCreator<HTMLQuoteElement>\n  rp: ElementCreator\n  rt: ElementCreator\n  ruby: ElementCreator\n  s: ElementCreator\n  samp: ElementCreator\n  script: ElementCreator<HTMLScriptElement>\n  section: ElementCreator\n  select: ElementCreator<HTMLSelectElement>\n  slot: ElementCreator<HTMLSlotElement>\n  small: ElementCreator\n  source: ElementCreator<HTMLSourceElement>\n  span: ElementCreator<HTMLSpanElement>\n  strike: ElementCreator\n  strong: ElementCreator\n  style: ElementCreator<HTMLStyleElement>\n  sub: ElementCreator\n  summary: ElementCreator\n  svg: ElementCreator<SVGElement>\n  table: ElementCreator<HTMLTableElement>\n  tbody: ElementCreator<HTMLTableSectionElement>\n  td: ElementCreator<HTMLTableCellElement>\n  template: ElementCreator<HTMLTemplateElement>\n  textarea: ElementCreator<HTMLTextAreaElement>\n  tfoot: ElementCreator<HTMLTableSectionElement>\n  th: ElementCreator<HTMLTableCellElement>\n  thead: ElementCreator<HTMLTableSectionElement>\n  time: ElementCreator<HTMLTimeElement>\n  title: ElementCreator<HTMLTitleElement>\n  tr: ElementCreator<HTMLTableRowElement>\n  track: ElementCreator<HTMLTrackElement>\n  tt: ElementCreator\n  u: ElementCreator\n  ul: ElementCreator<HTMLUListElement>\n  var: ElementCreator\n  video: ElementCreator<HTMLVideoElement>\n  wbr: ElementCreator\n  [key: string | symbol]: ElementCreator<any>\n}\n\nconst templates: { [key: string]: HTMLElement } = {}\n\nconst create = (tagType: string, ...contents: ElementPart[]): SwissArmyElement => {\n  if (templates[tagType] === undefined) {\n    templates[tagType] = globalThis.document.createElement(tagType)\n  }\n  const elt = templates[tagType].cloneNode() as SwissArmyElement\n  const elementProps: ElementProps = {}\n  for (const item of contents) {\n    if (item instanceof Element || item instanceof DocumentFragment || typeof item === 'string' || typeof item === 'number') {\n      if (elt instanceof HTMLTemplateElement) {\n        elt.content.append(item as Node)\n      } else {\n        elt.append(item as Node)\n      }\n    } else {\n      Object.assign(elementProps, item)\n    }\n  }\n  for (const key of Object.keys(elementProps)) {\n    const value: any = elementProps[key]\n    if (key === 'apply') {\n      value(elt)\n    } else if (key === 'style') {\n      if (typeof value === 'object') {\n        for (const prop of Object.keys(value)) {\n          if (prop.startsWith('--')) {\n            elt.style.setProperty(prop, value[prop])\n          } else {\n            // @ts-expect-error\n            elt.style[prop] = value[prop]\n          }\n        }\n      } else {\n        elt.setAttribute('style', value)\n      }\n    } else if (key.match(/^on[A-Z]/) != null) {\n      const eventType = key.substring(2).toLowerCase()\n      on(elt, eventType, value)\n    } else if (key.match(/^bind[A-Z]/) != null) {\n      const bindingType = key.substring(4, 5).toLowerCase() + key.substring(5)\n      const binding = bindings[bindingType]\n      if (binding !== undefined) {\n        bind(elt, value, binding)\n      } else {\n        throw new Error(`${key} is not allowed, bindings.${bindingType} is not defined`)\n      }\n    // @ts-expect-error\n    } else if (elt[key] !== undefined) {\n      // @ts-expect-error\n      elt[key] = value\n    } else {\n      const attr = camelToKabob(key)\n\n      if (attr === 'class') {\n        value.split(' ').forEach((className: string) => {\n          elt.classList.add(className)\n        })\n      // @ts-expect-error-error\n      } else if (elt[attr] !== undefined) {\n        // @ts-expect-error-error\n        elt[attr] = value\n      } else if (typeof value === 'boolean') {\n        value ? elt.setAttribute(attr, '') : elt.removeAttribute(attr)\n      } else {\n        elt.setAttribute(attr, value)\n      }\n    }\n  }\n  return elt\n}\n\nconst fragment: ElementCreator<DocumentFragment> = (...contents: ElementPart[]) => {\n  const frag = globalThis.document.createDocumentFragment()\n  for (const item of contents) {\n    frag.append(item as Node)\n  }\n  return frag\n}\n\n/**\n * elements is a proxy that produces ElementCreators, e.g.\n * elements.div() creates <div> elements and\n * elements.myElement() creatres <my-element> elements.\n */\nexport const elements = new Proxy({ fragment }, {\n  get (target, tagName: string) {\n    tagName = tagName.replace(/[A-Z]/g, c => `-${c.toLocaleLowerCase()}`)\n    if (tagName.match(/^\\w+(-\\w+)*$/) == null) {\n      throw new Error(`${tagName} does not appear to be a valid element tagName`)\n      // @ts-expect-error\n    } else if (target[tagName] === undefined) {\n      // @ts-expect-error\n      target[tagName] = (...contents: ElementPart[]) => create(tagName, ...contents)\n    }\n    // @ts-expect-error\n    return target[tagName]\n  },\n  set () {\n    throw new Error('You may not add new properties to elements')\n  }\n}) as unknown as ElementsProxy\n","export function camelToKabob (s: string): string {\n  return s.replace(/[A-Z]/g, (c: string): string => {\n    return `-${c.toLocaleLowerCase()}`\n  })\n}\n\nexport function kabobToCamel (s: string): string {\n  return s.replace(/-([a-z])/g, (_: string, c: string): string => {\n    return c.toLocaleUpperCase()\n  })\n}\n","import { css } from './css'\nimport { XinStyleSheet } from './css-types'\nimport { deepClone } from './deep-clone'\nimport { appendContentToElement, dispatch, resizeObserver } from './dom'\nimport { elements, ElementsProxy } from './elements'\nimport { camelToKabob, kabobToCamel } from './string-case'\nimport { ElementCreator, SwissArmyElement, ContentType } from './xin-types'\n\nlet instanceCount = 0\n\nexport abstract class Component extends HTMLElement {\n  static elements: ElementsProxy = elements\n  private static _elementCreator?: ElementCreator\n  instanceId: string\n  styleNode?: HTMLStyleElement\n  content: ContentType | (() => ContentType) | null = elements.slot()\n  value?: any\n  isSlotted?: boolean\n  [key: string]: any\n\n  static StyleNode (styleSpec: XinStyleSheet): HTMLStyleElement {\n    return elements.style(css(styleSpec))\n  }\n\n  static elementCreator (options?: ElementDefinitionOptions & { tag?: string }): ElementCreator {\n    if (this._elementCreator == null) {\n      let desiredTag = options != null ? options.tag : null\n      if (desiredTag == null) {\n        desiredTag = camelToKabob(this.name)\n        if (desiredTag.startsWith('-')) {\n          desiredTag = desiredTag.substring(1)\n        }\n        if (!desiredTag.includes('-')) {\n          desiredTag += '-elt'\n        }\n      }\n      let attempts = 0\n      while (this._elementCreator == null) {\n        attempts += 1\n        const tag = attempts === 1 ? desiredTag : `${desiredTag}-${attempts}`\n        try {\n          window.customElements.define(tag, this as unknown as CustomElementConstructor, options)\n          this._elementCreator = elements[tag]\n        } catch (e) {\n          throw new Error(`could not define ${this.name} as <${tag}>: ${String(e)}`)\n        }\n      }\n    }\n    return this._elementCreator\n  }\n\n  initAttributes (...attributeNames: string[]): void {\n    const attributes: { [key: string]: any } = {}\n    const attributeValues = {}\n    const observer = new MutationObserver((mutationsList) => {\n      let triggerRender = false\n      mutationsList.forEach((mutation) => {\n        // eslint-disable-next-line\n        triggerRender = !!(mutation.attributeName && attributeNames.includes(kabobToCamel(mutation.attributeName)))\n      })\n      if (triggerRender && this.queueRender !== undefined) this.queueRender(false)\n    })\n    observer.observe(this, { attributes: true })\n    attributeNames.forEach(attributeName => {\n      attributes[attributeName] = deepClone(this[attributeName])\n      const attributeKabob = camelToKabob(attributeName)\n      Object.defineProperty(this, attributeName, {\n        enumerable: false,\n        get () {\n          if (typeof attributes[attributeName] === 'boolean') {\n            return this.hasAttribute(attributeKabob)\n          } else {\n            // eslint-disable-next-line\n            if (this.hasAttribute(attributeKabob)) {\n              return typeof attributes[attributeName] === 'number'\n                ? parseFloat(this.getAttribute(attributeKabob))\n                : this.getAttribute(attributeKabob)\n            // @ts-expect-error\n            } else if (attributeValues[attributeName] !== undefined) {\n            // @ts-expect-error\n              return attributeValues[attributeName]\n            } else {\n              return attributes[attributeName]\n            }\n          }\n        },\n        set (value) {\n          if (typeof attributes[attributeName] === 'boolean') {\n            if (value !== this[attributeName]) {\n              // eslint-disable-next-line\n              if (value) {\n                this.setAttribute(attributeKabob, '')\n              } else {\n                this.removeAttribute(attributeKabob)\n              }\n              this.queueRender()\n            }\n          } else if (typeof attributes[attributeName] === 'number') {\n            if (value !== parseFloat(this[attributeName])) {\n              this.setAttribute(attributeKabob, value)\n              this.queueRender()\n            }\n          } else {\n            if (typeof value === 'object' || `${value as string}` !== `${this[attributeName] as string}`) {\n              if (value === null || value === undefined || typeof value === 'object') {\n                this.removeAttribute(attributeKabob)\n              } else {\n                this.setAttribute(attributeKabob, value)\n              }\n              this.queueRender()\n              // @ts-expect-error\n              attributeValues[attributeName] = value\n            }\n          }\n        }\n      })\n    })\n  }\n\n  private initValue (): void {\n    const valueDescriptor = Object.getOwnPropertyDescriptor(this, 'value')\n    if (valueDescriptor === undefined || valueDescriptor.get !== undefined || valueDescriptor.set !== undefined) {\n      return\n    }\n    let value = this.hasAttribute('value') ? this.getAttribute('value') : deepClone(this.value)\n    delete this.value\n    Object.defineProperty(this, 'value', {\n      enumerable: false,\n      get () {\n        return value\n      },\n      set (newValue: any) {\n        if (value !== newValue) {\n          value = newValue\n          this.queueRender(true)\n        }\n      }\n    })\n  }\n\n  private _refs?: { [key: string]: SwissArmyElement }\n  get refs (): { [key: string]: SwissArmyElement } {\n    const root = this.shadowRoot != null ? this.shadowRoot : this\n    if (this._refs == null) {\n      this._refs = new Proxy({}, {\n        get (target: { [key: string]: SwissArmyElement }, ref: string) {\n          if (target[ref] === undefined) {\n            let element = root.querySelector(`[data-ref=\"${ref}\"]`)\n            if (element == null) {\n              element = root.querySelector(ref)\n            }\n            if (element == null) throw new Error(`elementRef \"${ref}\" does not exist!`)\n            element.removeAttribute('data-ref')\n            target[ref] = element as SwissArmyElement\n          }\n          return target[ref]\n        }\n      })\n    }\n    return this._refs\n  }\n\n  constructor () {\n    super()\n    instanceCount += 1\n    this.initAttributes('hidden')\n    this.instanceId = `${this.tagName.toLocaleLowerCase()}-${instanceCount}`\n    this._value = deepClone(this.defaultValue)\n  }\n\n  connectedCallback (): void {\n    this.hydrate()\n    // super annoyingly, chrome loses its shit if you set *any* attributes in the constructor\n    if (this.role != null) this.setAttribute('role', this.role)\n    if (this.onResize !== undefined) {\n      resizeObserver.observe(this)\n      if (this._onResize == null) {\n        this._onResize = this.onResize.bind(this)\n      }\n      this.addEventListener('resize', this._onResize)\n    }\n    if (this.value != null && this.getAttribute('value') != null) {\n      this._value = this.getAttribute('value')\n    }\n    this.queueRender()\n  }\n\n  disconnectedCallback (): void {\n    resizeObserver.unobserve(this)\n  }\n\n  private _changeQueued = false\n  private _renderQueued = false\n  queueRender (triggerChangeEvent = false): void {\n    if (!this._hydrated) return\n    if (!this._changeQueued) this._changeQueued = triggerChangeEvent\n    if (!this._renderQueued) {\n      this._renderQueued = true\n      requestAnimationFrame(() => {\n        // TODO add mechanism to allow component developer to have more control over\n        // whether input vs. change events are emitted\n        if (this._changeQueued) dispatch(this, 'change')\n        this._changeQueued = false\n        this._renderQueued = false\n        this.render()\n      })\n    }\n  }\n\n  private _hydrated = false\n  private hydrate (): void {\n    if (!this._hydrated) {\n      this.initValue()\n      const _content: ContentType | null = typeof this.content === 'function' ? this.content() : this.content\n      if (this.styleNode !== undefined) {\n        const shadow = this.attachShadow({ mode: 'open' })\n        shadow.appendChild(this.styleNode)\n        appendContentToElement(shadow, _content)\n      } else {\n        const existingChildren = [...this.childNodes]\n        if (appendContentToElement(this as HTMLElement, _content) && (existingChildren.length > 0)) {\n          const slotMap: { [key: string]: Element } = { '': this }\n          ;[...this.querySelectorAll('xin-slot')].forEach(slot => {\n            // @ts-expect-error\n            slotMap[slot.name] = slot\n          })\n          existingChildren.forEach(child => {\n            const defaultSlot = slotMap['']\n            const destSlot = child instanceof Element ? slotMap[child.slot] : defaultSlot\n            ;(destSlot !== undefined ? destSlot : defaultSlot).append(child)\n          })\n        }\n      }\n      this._hydrated = true\n    }\n  }\n\n  render (): void {}\n}\n\nclass XinSlot extends Component {\n  name = ''\n  content = null\n\n  constructor () {\n    super()\n    this.initAttributes('name')\n  }\n}\n\nexport const xinSlot = XinSlot.elementCreator({ tag: 'xin-slot' })\n","import { xin, observe } from './xin'\nimport { XIN_VALUE } from './metadata'\nimport { XinObject, PathTestFunction, ObserverCallbackFunction } from './xin-types'\nimport { debounce } from './throttle'\n\n// TODO reimplement using IndexedDB\n\nexport const hotReload = (test: PathTestFunction = () => true): void => {\n  const savedState = localStorage.getItem('xin-state')\n  if (savedState != null) {\n    const state = JSON.parse(savedState)\n    for (const key of Object.keys(state).filter(test)) {\n      if (xin[key] !== undefined) {\n        Object.assign(xin[key], state[key])\n      } else {\n        xin[key] = state[key]\n      }\n    }\n  }\n\n  const saveState = debounce(() => {\n    const obj: XinObject = {}\n    const state = xin[XIN_VALUE] as XinObject\n    for (const key of Object.keys(state).filter(test)) {\n      obj[key] = state[key]\n    }\n    localStorage.setItem('xin-state', JSON.stringify(obj))\n    console.log('xin state saved to localStorage')\n  }, 500)\n\n  observe(test, saveState as ObserverCallbackFunction)\n}\n","import { XIN_PATH, XIN_VALUE } from './metadata'\nimport { XinStyleRule } from './css-types'\n\nexport type XinScalar = string | boolean | number | Function\n\nexport type XinArray = XinObject[] | XinScalar[]\n\nexport interface XinObject {\n  [key: string]: XinObject | XinArray | XinScalar\n}\n\nexport type XinProxyTarget = XinObject | XinArray\n\nexport type XinValue = XinObject | XinArray | XinScalar | null | undefined\n\nexport interface XinProps {\n  [XIN_VALUE]: XinObject | XinObject | XinScalar\n  [XIN_PATH]: string\n}\n\nexport type XinProxyObject = XinProps & {\n  [key: string]: XinProxyObject | XinProxyArray | XinObject | XinArray | XinScalar\n}\n\nexport type XinProxyArray = XinProps & { [key: string]: XinProxyObject } & (XinProxyObject[] | XinScalar[])\nexport type XinProxy = XinProps & (XinObject | XinArray)\nexport type XinProxyValue = XinProxy | XinScalar | null | undefined\nexport type XinTouchableType = string | XinProps\nexport type XinEventHandler<T=Event> = ((evt: T) => void) | ((evt: T) => Promise<void>) | string\nexport type XinBindingShortcut = XinTouchableType | XinBindingSpec\n\ntype _BooleanFunction = () => boolean\ntype _PathTestFunction = (path: string) => boolean | Symbol\nexport type PathTestFunction = _BooleanFunction | _PathTestFunction\n\ntype OptionalSymbol = Symbol | undefined\ntype _CallbackFunction = (() => void) | (() => OptionalSymbol)\ntype _PathCallbackFunction = ((path: string) => void) | ((path: string) => OptionalSymbol)\nexport type ObserverCallbackFunction = _PathCallbackFunction | _CallbackFunction\n\nexport interface XinBindingSpec {\n  value: XinTouchableType | any\n  [key: string]: any\n}\n\nexport interface XinBinding<T = HTMLElement> {\n  toDOM?: (element: T, value: any, options?: XinObject) => void\n  fromDOM?: (element: T, options?: XinObject) => any\n}\nexport interface ElementProps {\n  onClick?: XinEventHandler<MouseEvent>\n  onInput?: XinEventHandler\n  onChange?: XinEventHandler\n  onSubmit?: XinEventHandler\n  bindValue?: XinBindingShortcut\n  bindText?: XinBindingShortcut\n  bindList?: XinBindingShortcut\n  bindEnabled?: XinBindingShortcut\n  bindDisabled?: XinBindingShortcut\n  bindStyle?: XinBindingShortcut\n  style?: XinStyleRule\n  class?: string\n  apply?: (element: HTMLElement) => void | Promise<void>\n  [key: string]: any\n}\n\nexport type ValueElement = HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement\nexport type SwissArmyElement = HTMLElement & HTMLInputElement & HTMLCanvasElement\nexport type ElementPart = HTMLElement | DocumentFragment | ElementProps | string | number\nexport type HTMLElementCreator<T extends Node = SwissArmyElement> = (...contents: ElementPart[]) => T\nexport type FragmentCreator = (...contents: ElementPart[]) => DocumentFragment\nexport type ElementCreator<T extends Node = SwissArmyElement> = (...contents: ElementPart[]) => T\nexport type ContentPart = HTMLElement | DocumentFragment | string\nexport type ContentType = ContentPart | ContentPart[]\n","import { XinProxyObject } from './xin-types'\nimport { xin } from './xin'\n\nexport function xinProxy<T extends {}> (obj: T): T {\n  const registered: { [key: string]: any } = {}\n  Object.keys(obj).forEach((key: string) => {\n    // eslint-disable-next-line\n    xin[key] = (obj as {[key: string]: any})[key]\n    registered[key] = xin[key] as XinProxyObject\n  })\n  return registered as T\n}\n","const timeNow = new Date()\n\nexport interface Timezone {\n  name: string,\n  abbr: string,\n  offset: number,\n}\n\n// @ts-ignore-error\nexport const timezones: Timezone[] = Intl.supportedValuesOf('timeZone').map(name => {\n  // @ts-expect-error\n  const offset = Number(Intl.DateTimeFormat('en-GB', {\n    hour: 'numeric',\n    minute: 'numeric',\n    timeZoneName: 'shortOffset',\n    timeZone: name\n  }).format(timeNow).split('GMT').pop().replace(/\\:30/, '.5'))\n\n  const abbr = Intl.DateTimeFormat('en-GB', {\n    hour: 'numeric',\n    minute: 'numeric',\n    timeZoneName: 'short',\n    timeZone: name\n  }).format(timeNow).split(' ').pop()\n\n  return {\n    name,\n    abbr,\n    offset,\n  }\n})\n\nexport const localTimezone = timezones.find(z => z.name === Intl.DateTimeFormat().resolvedOptions().timeZone) as Timezone","export interface Region {\n  timezone: string\n  abbr: string\n  country: string\n  pin: string\n  offset: number\n  points: string\n}\n\nexport const regions: Region[] = [\n  {\n      timezone: \"Africa/Abidjan\",\n      country: \"CI\",\n      pin: \"244,118\",\n      offset: 0,\n      points: \"241,118,240,119,240,117,238,116,238,115,239,114,239,113,239,113,239,111,241,110,241,111,243,111,244,112,246,111,247,113,245,116,246,118,241,118\",\n      abbr: \"GMT\"\n  },\n  {\n      timezone: \"Africa/Accra\",\n      country: \"GH\",\n      pin: \"250,117\",\n      offset: 0,\n      points: \"251,117,247,118,246,118,246,118,246,116,247,114,246,110,250,110,251,113,251,116,252,116,251,117\",\n      abbr: \"GMT\"\n  },\n  {\n      timezone: \"Africa/Addis_Ababa\",\n      country: \"ET\",\n      pin: \"304,112\",\n      offset: 3,\n      points: \"313,118,311,118,308,120,307,119,305,120,300,119,299,116,296,114,296,113,297,113,298,110,299,110,300,107,300,107,301,105,302,105,303,104,303,105,307,105,309,108,308,110,310,110,309,110,310,112,317,114,313,118\",\n      abbr: \"EAT\"\n  },\n  {\n      timezone: \"Africa/Algiers\",\n      country: \"DZ\",\n      pin: \"254,74\",\n      offset: 1,\n      points: \"263,83,264,86,264,88,263,89,264,91,266,91,267,92,258,98,255,99,254,97,252,97,250,95,238,87,238,85,239,85,243,83,243,82,245,82,245,81,246,81,246,80,248,80,249,80,248,79,248,77,247,76,254,74,262,74,261,74,262,77,260,78,263,81,263,83\",\n      abbr: \"CET\"\n  },\n  {\n      timezone: \"Africa/Asmera\",\n      country: \"ER\",\n      pin: \"304,104\",\n      offset: 3,\n      points: \"306,104,310,107,309,108,306,105,303,105,303,104,302,105,301,105,301,101,304,100,305,104,305,103,306,104\",\n      abbr: \"EAT\"\n  },\n  {\n      timezone: \"Africa/Bamako\",\n      country: \"ML\",\n      pin: \"239,107\",\n      offset: 0,\n      points: \"244,107,244,108,242,109,242,111,241,111,241,110,240,111,239,110,239,111,238,110,238,110,238,109,237,108,235,108,234,108,234,107,233,105,234,103,235,104,237,103,242,103,241,90,243,90,252,96,252,97,254,97,255,99,256,98,256,101,255,104,249,104,246,105,245,107,244,106,244,107\",\n      abbr: \"GMT\"\n  },\n  {\n      timezone: \"Africa/Bangui\",\n      country: \"CF\",\n      pin: \"276,119\",\n      offset: 1,\n      points: \"284,118,283,119,282,118,281,119,277,118,276,119,276,120,273,120,272,122,270,119,270,117,272,115,276,114,276,113,278,112,280,110,281,110,283,111,283,113,284,113,284,113,285,114,288,118,285,118,285,118,284,118\",\n      abbr: \"WAT\"\n  },\n  {\n      timezone: \"Africa/Banjul\",\n      country: \"GM\",\n      pin: \"227,106\",\n      offset: 0,\n      points: \"231,106,227,106,229,106,231,106\",\n      abbr: \"GMT\"\n  },\n  {\n      timezone: \"Africa/Bissau\",\n      country: \"GW\",\n      pin: \"228,109\",\n      offset: 0,\n      points: \"228,109,228,109,228,109\",\n      abbr: \"GMT\"\n  },\n  {\n      timezone: \"Africa/Blantyre\",\n      country: \"MW\",\n      pin: \"299,147\",\n      offset: 2,\n      points: \"298,144,300,146,299,149,298,147,298,145,297,145,295,144,297,142,296,140,297,140,296,138,298,139,299,141,298,142,298,144\",\n      abbr: \"CAT\"\n  },\n  {\n      timezone: \"Africa/Brazzaville\",\n      country: \"CG\",\n      pin: \"271,131\",\n      offset: 1,\n      points: \"266,131,267,130,266,128,267,128,268,128,270,128,270,128,270,126,269,125,270,124,269,123,268,123,268,122,272,123,273,120,276,120,275,126,273,128,272,130,270,132,270,131,269,132,268,131,267,132,266,131\",\n      abbr: \"WAT\"\n  },\n  {\n      timezone: \"Africa/Bujumbura\",\n      country: \"BI\",\n      pin: \"291,130\",\n      offset: 2,\n      points: \"292,131,291,131,290,129,291,129,292,128,292,128,293,130,292,131\",\n      abbr: \"CAT\"\n  },\n  {\n      timezone: \"Asia/Oral\",\n      country: \"KZ\",\n      pin: \"321,54\",\n      offset: 5,\n      points: \"316,55,317,56,318,56,317,55,319,54,320,53,323,53,326,54,326,56,323,58,321,57,319,58,315,58,316,55\",\n      abbr: \"ORAT\"\n  },\n  {\n      timezone: \"Africa/Cairo\",\n      country: \"EG\",\n      pin: \"293,83\",\n      offset: 2,\n      points: \"294,94,285,94,284,83,285,81,290,82,293,81,294,81,295,82,298,82,298,84,298,86,296,85,295,83,295,84,300,92,299,92,299,93,297,95,294,94\",\n      abbr: \"EET\"\n  },\n  {\n      timezone: \"Africa/Casablanca\",\n      country: \"MA\",\n      pin: \"239,78\",\n      offset: 0,\n      points: \"242,84,240,84,238,85,238,87,232,87,236,84,237,83,236,81,237,80,241,78,242,75,243,75,244,76,246,76,248,77,248,80,246,80,246,81,245,81,245,82,243,82,242,84\",\n      abbr: \"WET\"\n  },\n  {\n      timezone: \"Africa/Ceuta\",\n      country: \"ES\",\n      pin: \"243,75\",\n      offset: 1,\n      points: \"243,75,243,75,243,75\",\n      abbr: \"CET\"\n  },\n  {\n      timezone: \"Africa/Conakry\",\n      country: \"GN\",\n      pin: \"231,112\",\n      offset: 0,\n      points: \"238,114,237,115,236,113,235,114,235,113,234,111,233,111,232,112,231,111,230,110,229,109,231,109,231,107,234,108,235,108,237,108,238,109,238,110,238,110,239,111,239,112,239,113,239,113,239,114,238,114\",\n      abbr: \"GMT\"\n  },\n  {\n      timezone: \"Africa/Dakar\",\n      country: \"SN\",\n      pin: \"226,105\",\n      offset: 0,\n      points: \"227,107,229,106,231,106,229,106,227,106,226,105,227,102,230,102,233,105,234,108,229,107,227,108,227,108,227,108,227,107\",\n      abbr: \"GMT\"\n  },\n  {\n      timezone: \"Africa/Dar_es_Salaam\",\n      country: \"TZ\",\n      pin: \"305,134\",\n      offset: 3,\n      points: \"306,139,306,139,306,140,302,141,299,141,297,138,293,137,291,134,291,132,293,130,292,129,293,128,292,126,297,126,302,129,302,130,304,131,304,134,305,135,305,137,306,139\",\n      abbr: \"EAT\"\n  },\n  {\n      timezone: \"Asia/Yekaterinburg\",\n      country: \"RU\",\n      pin: \"334,46\",\n      offset: 6,\n      points: \"333,53,335,54,335,54,333,55,331,54,329,54,327,55,326,54,326,55,324,53,321,53,322,51,322,50,324,50,325,49,324,48,325,48,324,47,326,47,325,46,326,46,325,44,325,43,324,43,325,42,323,41,322,40,326,40,329,40,332,39,333,35,342,31,341,31,342,31,341,31,341,30,340,29,342,29,342,29,341,29,345,30,346,29,345,28,343,28,344,28,344,27,343,27,345,25,346,24,351,24,350,26,351,27,351,27,351,29,352,30,350,32,346,32,346,33,350,33,354,31,353,30,356,29,357,30,357,31,358,31,361,32,358,31,359,30,358,29,353,29,352,28,353,27,351,26,354,25,354,24,355,25,354,26,355,26,359,27,356,25,358,25,357,25,358,25,362,25,360,26,362,26,362,27,360,28,365,29,365,30,364,31,364,31,364,32,366,32,366,34,367,34,367,35,369,35,369,36,368,37,369,37,367,39,369,40,369,40,364,41,357,40,356,42,353,44,349,44,348,44,348,45,350,46,348,47,348,48,346,48,341,50,335,50,335,51,336,51,335,51,334,52,335,52,333,53\",\n      abbr: \"YEKT\"\n  },\n  {\n      timezone: \"Africa/Djibouti\",\n      country: \"DJ\",\n      pin: \"310,109\",\n      offset: 3,\n      points: \"310,109,310,109,310,109\",\n      abbr: \"EAT\"\n  },\n  {\n      timezone: \"Africa/Douala\",\n      country: \"CM\",\n      pin: \"263,119\",\n      offset: 1,\n      points: \"270,117,270,119,272,121,272,123,270,122,264,122,263,119,263,120,262,119,262,117,264,116,265,115,266,116,266,115,269,110,270,109,270,107,271,107,271,110,272,111,269,112,272,114,270,117\",\n      abbr: \"WAT\"\n  },\n  {\n      timezone: \"Africa/Freetown\",\n      country: \"SL\",\n      pin: \"232,113\",\n      offset: 0,\n      points: \"235,115,234,115,232,114,232,112,233,111,234,111,235,112,235,114,236,114,235,115\",\n      abbr: \"GMT\"\n  },\n  {\n      timezone: \"Africa/Gaborone\",\n      country: \"BW\",\n      pin: \"286,159\",\n      offset: 2,\n      points: \"287,158,285,161,282,160,281,162,279,162,279,161,278,159,278,156,279,156,279,150,282,150,283,151,285,150,286,152,289,153,289,155,291,156,287,158\",\n      abbr: \"CAT\"\n  },\n  {\n      timezone: \"Africa/Harare\",\n      country: \"ZW\",\n      pin: \"293,150\",\n      offset: 2,\n      points: \"293,156,289,155,289,153,286,152,285,150,288,150,291,147,296,148,295,151,296,153,295,155,293,156\",\n      abbr: \"CAT\"\n  },\n  {\n      timezone: \"Africa/El_Aaiun\",\n      country: \"EH\",\n      pin: \"232,87\",\n      offset: 0,\n      points: \"233,89,233,92,232,93,232,95,227,95,226,96,226,95,228,92,228,92,229,91,230,89,231,88,232,87,238,87,238,89,233,89\",\n      abbr: \"WET\"\n  },\n  {\n      timezone: \"Africa/Johannesburg\",\n      country: \"ZA\",\n      pin: \"289,161\",\n      offset: 2,\n      points: \"283,172,278,173,276,172,276,173,275,171,275,170,275,169,273,165,274,164,274,165,275,165,278,164,278,159,279,161,279,162,280,162,282,160,285,161,288,158,290,156,293,156,294,159,294,161,294,161,293,162,294,163,294,163,294,162,296,162,295,165,289,171,286,172,283,172\",\n      abbr: \"SAST\"\n  },\n  {\n      timezone: \"Africa/Juba\",\n      country: \"SS\",\n      pin: \"294,118\",\n      offset: 3,\n      points: \"299,117,299,118,300,118,300,119,298,119,297,120,293,120,291,119,289,119,289,119,287,116,284,113,285,111,286,111,287,112,290,112,292,111,293,111,295,110,295,108,296,108,296,110,297,111,297,113,296,113,296,114,297,115,299,117\",\n      abbr: \"EAT\"\n  },\n  {\n      timezone: \"Africa/Kampala\",\n      country: \"UG\",\n      pin: \"295,125\",\n      offset: 3,\n      points: \"293,126,291,127,292,124,293,122,293,122,293,120,297,120,297,119,299,122,297,125,297,126,293,126\",\n      abbr: \"EAT\"\n  },\n  {\n      timezone: \"Africa/Khartoum\",\n      country: \"SD\",\n      pin: \"295,103\",\n      offset: 3,\n      points: \"300,107,299,110,298,110,297,112,296,110,296,108,295,108,295,108,295,110,293,111,292,111,290,112,287,112,286,111,285,111,284,113,283,113,283,111,282,110,281,107,280,107,282,103,283,103,283,97,285,97,285,94,294,94,297,95,299,93,301,94,302,96,302,99,304,100,301,101,301,106,300,107,300,107\",\n      abbr: \"EAT\"\n  },\n  {\n      timezone: \"Africa/Kinshasa\",\n      country: \"CD\",\n      pin: \"271,131\",\n      offset: 1,\n      points: \"271,131,272,130,273,128,275,126,276,119,277,118,277,118,279,119,283,120,281,120,283,122,281,122,281,123,283,125,282,126,283,126,282,126,284,127,281,128,281,128,281,128,279,128,279,131,278,131,278,135,277,135,277,136,274,136,273,133,267,133,268,131,269,132,270,131,270,132,271,131\",\n      abbr: \"WAT\"\n  },\n  {\n      timezone: \"Africa/Lagos\",\n      country: \"NG\",\n      pin: \"255,116\",\n      offset: 1,\n      points: \"261,119,258,119,256,116,254,116,254,112,255,110,255,109,256,106,258,106,260,107,261,106,263,107,265,106,267,107,269,106,270,108,270,109,269,110,266,115,266,116,264,115,262,117,262,118,261,119\",\n      abbr: \"WAT\"\n  },\n  {\n      timezone: \"Africa/Libreville\",\n      country: \"GA\",\n      pin: \"263,124\",\n      offset: 1,\n      points: \"269,125,270,126,270,128,267,128,267,128,266,128,267,130,266,131,263,128,262,126,263,126,263,125,264,125,263,124,263,124,266,124,266,122,268,122,268,123,270,123,270,124,269,125\",\n      abbr: \"WAT\"\n  },\n  {\n      timezone: \"Africa/Lome\",\n      country: \"TG\",\n      pin: \"252,116\",\n      offset: 0,\n      points: \"252,116,251,116,251,113,250,110,251,110,251,111,252,111,253,116,252,116\",\n      abbr: \"GMT\"\n  },\n  {\n      timezone: \"Africa/Kigali\",\n      country: \"RW\",\n      pin: \"292,128\",\n      offset: 2,\n      points: \"292,128,291,129,290,129,291,127,292,126,293,128,292,128\",\n      abbr: \"CAT\"\n  },\n  {\n      timezone: \"Africa/Luanda\",\n      country: \"AO\",\n      pin: \"268,137\",\n      offset: 1,\n      points: \"281,140,281,141,283,140,283,143,281,143,281,148,283,149,279,150,276,149,269,149,268,149,266,149,267,144,269,142,269,140,268,138,269,137,267,133,273,133,274,136,277,136,277,135,280,135,280,138,281,140\",\n      abbr: \"WAT\"\n  },\n  {\n      timezone: \"Africa/Lubumbashi\",\n      country: \"CD\",\n      pin: \"288,141\",\n      offset: 2,\n      points: \"291,132,291,134,293,136,290,137,289,138,290,139,289,141,290,142,291,142,291,144,290,144,288,141,287,142,286,142,285,141,284,141,283,140,281,141,280,135,278,135,277,134,278,133,278,131,279,131,279,128,281,128,281,128,281,128,284,127,282,126,283,126,282,126,283,125,281,123,281,122,283,122,281,120,283,120,281,119,282,118,285,118,285,118,288,118,289,119,291,119,293,120,293,122,293,122,292,124,291,127,290,128,291,132\",\n      abbr: \"CAT\"\n  },\n  {\n      timezone: \"Africa/Lusaka\",\n      country: \"ZM\",\n      pin: \"289,146\",\n      offset: 2,\n      points: \"290,147,290,148,287,150,284,149,283,149,281,148,281,143,283,143,283,140,284,141,285,141,286,142,287,142,288,141,290,144,291,144,291,142,290,142,289,141,290,139,289,138,290,137,293,136,296,138,297,140,296,140,297,142,295,144,296,144,292,146,292,147,290,147\",\n      abbr: \"CAT\"\n  },\n  {\n      timezone: \"Africa/Malabo\",\n      country: \"GQ\",\n      pin: \"262,120\",\n      offset: 1,\n      points: \"266,123,266,124,263,123,264,122,266,122,266,123\",\n      abbr: \"WAT\"\n  },\n  {\n      timezone: \"Africa/Maputo\",\n      country: \"MZ\",\n      pin: \"295,161\",\n      offset: 2,\n      points: \"296,160,295,161,295,162,296,161,296,162,295,162,294,159,293,156,295,155,296,153,295,151,296,148,292,147,292,146,296,144,297,145,298,145,298,146,298,147,299,149,300,146,298,144,298,141,302,141,306,140,306,146,305,148,303,149,300,151,298,152,298,154,299,156,299,158,296,160\",\n      abbr: \"CAT\"\n  },\n  {\n      timezone: \"Africa/Mbabane\",\n      country: \"SZ\",\n      pin: \"293,162\",\n      offset: 2,\n      points: \"294,161,295,162,294,163,293,162,294,161,294,161\",\n      abbr: \"SAST\"\n  },\n  {\n      timezone: \"Africa/Mogadishu\",\n      country: \"SO\",\n      pin: \"313,122\",\n      offset: 3,\n      points: \"310,125,308,127,307,126,307,121,308,119,312,118,317,114,311,113,309,110,310,109,312,111,321,109,321,111,321,111,321,111,321,112,317,119,310,125\",\n      abbr: \"EAT\"\n  },\n  {\n      timezone: \"Africa/Monrovia\",\n      country: \"LR\",\n      pin: \"235,116\",\n      offset: 0,\n      points: \"239,118,240,119,238,119,234,116,236,113,237,113,237,115,238,115,238,114,239,115,238,116,240,117,239,118\",\n      abbr: \"GMT\"\n  },\n  {\n      timezone: \"Africa/Nairobi\",\n      country: \"KE\",\n      pin: \"301,127\",\n      offset: 3,\n      points: \"308,127,306,129,304,131,302,130,302,129,297,126,297,125,299,122,297,119,298,119,300,119,305,120,307,119,308,119,307,121,307,126,308,127\",\n      abbr: \"EAT\"\n  },\n  {\n      timezone: \"Africa/Maseru\",\n      country: \"LS\",\n      pin: \"288,166\",\n      offset: 2,\n      points: \"289,167,289,167,288,166,290,165,291,166,289,167\",\n      abbr: \"SAST\"\n  },\n  {\n      timezone: \"Africa/Ndjamena\",\n      country: \"TD\",\n      pin: \"271,108\",\n      offset: 1,\n      points: \"278,112,276,113,276,114,272,115,269,112,270,111,272,111,271,110,271,107,270,107,269,105,272,102,272,97,271,95,271,93,272,92,283,98,283,103,282,103,280,107,281,107,282,110,280,110,279,112,278,112\",\n      abbr: \"WAT\"\n  },\n  {\n      timezone: \"Africa/Niamey\",\n      country: \"NE\",\n      pin: \"253,106\",\n      offset: 1,\n      points: \"256,106,255,108,255,109,254,108,253,108,253,107,251,107,252,106,251,106,250,104,255,104,256,101,256,98,258,98,267,92,270,94,271,93,271,95,272,97,272,102,269,105,269,106,267,107,265,106,263,107,261,106,260,107,258,106,256,106\",\n      abbr: \"WAT\"\n  },\n  {\n      timezone: \"Africa/Nouakchott\",\n      country: \"MR\",\n      pin: \"228,100\",\n      offset: 0,\n      points: \"234,103,233,105,230,102,227,102,227,103,228,100,227,98,228,97,227,95,226,96,232,95,232,93,233,92,233,89,238,89,238,87,243,90,241,90,242,103,237,103,235,104,234,103\",\n      abbr: \"GMT\"\n  },\n  {\n      timezone: \"Africa/Ouagadougou\",\n      country: \"BF\",\n      pin: \"248,108\",\n      offset: 0,\n      points: \"249,110,246,110,246,112,246,111,243,112,242,111,242,109,244,108,244,106,245,107,247,105,250,104,250,104,251,106,252,106,251,107,253,107,253,109,252,110,249,110\",\n      abbr: \"GMT\"\n  },\n  {\n      timezone: \"Africa/Porto-Novo\",\n      country: \"BJ\",\n      pin: \"254,116\",\n      offset: 1,\n      points: \"254,114,254,116,252,116,252,112,251,111,252,109,253,109,254,108,255,109,255,110,254,112,254,114\",\n      abbr: \"WAT\"\n  },\n  {\n      timezone: \"Africa/Tunis\",\n      country: \"TN\",\n      pin: \"264,74\",\n      offset: 1,\n      points: \"266,80,264,81,264,82,263,83,263,80,261,79,260,78,262,76,261,74,263,73,264,73,264,74,265,74,265,75,266,76,264,78,266,79,266,80\",\n      abbr: \"CET\"\n  },\n  {\n      timezone: \"Africa/Sao_Tome\",\n      country: \"ST\",\n      pin: \"259,125\",\n      offset: 0,\n      points: \"260,123,260,123,260,123\",\n      abbr: \"GMT\"\n  },\n  {\n      timezone: \"Africa/Tripoli\",\n      country: \"LY\",\n      pin: \"268,79\",\n      offset: 2,\n      points: \"285,88,285,97,283,97,283,98,272,92,270,94,264,91,263,89,264,88,264,86,263,83,264,82,264,81,266,80,266,79,271,80,272,81,276,83,278,82,278,80,281,79,282,80,285,81,284,83,285,88\",\n      abbr: \"EET\"\n  },\n  {\n      timezone: \"Africa/Windhoek\",\n      country: \"NA\",\n      pin: \"274,156\",\n      offset: 2,\n      points: \"278,163,278,164,277,165,274,165,274,164,273,165,272,164,271,162,270,156,267,151,266,149,268,149,269,149,276,149,279,150,284,149,285,150,283,151,282,150,279,150,279,156,278,156,278,163\",\n      abbr: \"WAST\"\n  },\n  {\n      timezone: \"America/Adak\",\n      country: \"US\",\n      pin: \"5,53\",\n      offset: -10,\n      points: \"7,53,6,53,8,52,7,53\",\n      abbr: \"HST\"\n  },\n  {\n      timezone: \"America/Argentina/Salta\",\n      country: \"AR\",\n      pin: \"159,159\",\n      offset: -3,\n      points: \"162,180,162,182,163,182,160,182,160,183,150,183,150,180,152,179,151,176,152,175,153,177,155,177,155,175,160,175,160,174,162,174,162,180\",\n      abbr: \"ART\"\n  },\n  {\n      timezone: \"America/Argentina/Salta\",\n      country: \"AR\",\n      pin: \"159,159\",\n      offset: -3,\n      points: \"159,156,161,157,161,156,163,156,163,156,163,159,162,161,158,162,157,161,158,160,155,160,155,159,157,158,158,159,158,157,159,159,161,159,161,158,160,158,159,156\",\n      abbr: \"ART\"\n  },\n  {\n      timezone: \"America/Anchorage\",\n      country: \"US\",\n      pin: \"42,40\",\n      offset: -9,\n      points: \"42,42,40,43,39,43,40,42,39,42,40,41,43,41,42,40,42,40,40,40,36,43,37,43,36,44,30,47,30,47,25,48,25,48,27,48,27,47,31,45,31,44,32,43,30,44,30,43,29,44,27,43,25,44,25,37,27,36,26,36,27,35,25,35,25,33,26,33,25,33,25,32,26,33,25,32,25,27,33,26,34,26,33,27,35,26,39,27,39,27,38,27,39,27,51,28,54,28,54,42,54,41,50,42,46,41,47,40,44,40,45,40,43,41,44,41,44,41,44,41,42,42\",\n      abbr: \"AKST\"\n  },\n  {\n      timezone: \"America/Anguilla\",\n      country: \"AI\",\n      pin: \"162,100\",\n      offset: -4,\n      points: \"162,100,162,100,162,100\",\n      abbr: \"AST\"\n  },\n  {\n      timezone: \"America/Antigua\",\n      country: \"AG\",\n      pin: \"164,101\",\n      offset: -4,\n      points: \"164,101,164,101,164,101\",\n      abbr: \"AST\"\n  },\n  {\n      timezone: \"America/Araguaina\",\n      country: \"BR\",\n      pin: \"183,135\",\n      offset: -3,\n      points: \"185,136,185,136,185,138,186,139,185,141,186,141,186,143,184,143,182,143,182,142,181,143,180,143,180,142,180,143,180,140,182,137,182,135,183,134,183,133,183,132,184,133,184,135,185,136\",\n      abbr: \"BRT\"\n  },\n  {\n      timezone: \"America/Buenos_Aires\",\n      country: \"AR\",\n      pin: \"169,173\",\n      offset: -3,\n      points: \"167,171,169,172,169,173,171,174,170,175,171,176,169,178,165,179,163,179,164,180,163,180,163,181,164,181,163,182,162,182,162,173,164,173,165,172,167,171\",\n      abbr: \"ART\"\n  },\n  {\n      timezone: \"America/Catamarca\",\n      country: \"AR\",\n      pin: \"159,165\",\n      offset: -3,\n      points: \"159,188,157,188,156,189,151,189,151,188,150,187,151,187,150,187,151,186,150,184,160,183,161,184,161,183,162,184,160,184,161,185,159,186,159,188\",\n      abbr: \"ART\"\n  },\n  {\n      timezone: \"America/Catamarca\",\n      country: \"AR\",\n      pin: \"159,165\",\n      offset: -3,\n      points: \"160,167,158,164,154,164,155,162,155,160,158,160,157,161,159,162,158,163,159,164,159,164,160,167\",\n      abbr: \"ART\"\n  },\n  {\n      timezone: \"America/Cordoba\",\n      country: \"AR\",\n      pin: \"161,169\",\n      offset: -3,\n      points: \"163,173,162,173,162,174,160,174,160,170,159,169,159,168,160,166,159,164,161,161,162,161,163,159,163,156,165,158,170,160,169,163,173,163,174,162,174,161,175,161,175,163,173,164,170,167,169,172,166,171,164,173,163,173\",\n      abbr: \"ART\"\n  },\n  {\n      timezone: \"America/Jujuy\",\n      country: \"AR\",\n      pin: \"159,159\",\n      offset: -3,\n      points: \"157,157,158,155,159,156,159,157,160,158,161,158,161,159,160,159,159,159,158,157,158,159,157,158,157,157\",\n      abbr: \"ART\"\n  },\n  {\n      timezone: \"America/Argentina/La_Rioja\",\n      country: \"AR\",\n      pin: \"157,166\",\n      offset: -3,\n      points: \"156,167,154,166,154,165,153,164,154,164,158,164,160,167,159,169,157,169,156,167\",\n      abbr: \"ART\"\n  },\n  {\n      timezone: \"America/Mendoza\",\n      country: \"AR\",\n      pin: \"154,171\",\n      offset: -3,\n      points: \"152,170,156,170,157,171,157,175,155,175,155,177,153,177,152,175,152,174,153,171,152,170\",\n      abbr: \"ART\"\n  },\n  {\n      timezone: \"America/Argentina/Rio_Gallegos\",\n      country: \"AR\",\n      pin: \"154,197\",\n      offset: -3,\n      points: \"151,189,156,189,157,190,159,191,158,192,154,195,154,197,155,198,150,197,149,197,150,195,148,196,148,195,148,193,150,192,149,191,150,191,151,189\",\n      abbr: \"ART\"\n  },\n  {\n      timezone: \"America/Argentina/San_Juan\",\n      country: \"AR\",\n      pin: \"155,169\",\n      offset: -3,\n      points: \"153,167,154,164,154,165,154,166,156,167,157,169,156,169,156,170,154,169,152,170,152,168,153,167\",\n      abbr: \"ART\"\n  },\n  {\n      timezone: \"America/Argentina/San_Luis\",\n      country: \"AR\",\n      pin: \"158,171\",\n      offset: -3,\n      points: \"159,169,160,170,160,175,157,175,156,169,159,169\",\n      abbr: \"ART\"\n  },\n  {\n      timezone: \"America/Argentina/Tucuman\",\n      country: \"AR\",\n      pin: \"159,162\",\n      offset: -3,\n      points: \"158,161,160,161,160,164,159,164,158,163,159,162,158,161\",\n      abbr: \"ART\"\n  },\n  {\n      timezone: \"America/Aruba\",\n      country: \"AW\",\n      pin: \"153,108\",\n      offset: -4,\n      points: \"153,108,153,108,153,108\",\n      abbr: \"AST\"\n  },\n  {\n      timezone: \"America/Argentina/Ushuaia\",\n      country: \"AR\",\n      pin: \"155,201\",\n      offset: -3,\n      points: \"155,201,155,198,155,199,155,199,156,200,160,201,158,201,155,201\",\n      abbr: \"ART\"\n  },\n  {\n      timezone: \"America/Asuncion\",\n      country: \"PY\",\n      pin: \"170,160\",\n      offset: -3,\n      points: \"174,161,173,163,169,163,170,160,165,158,163,156,164,152,167,152,169,152,169,156,172,156,173,158,175,158,174,161\",\n      abbr: \"PYST\"\n  },\n  {\n      timezone: \"America/Bahia_Banderas\",\n      country: \"MX\",\n      pin: \"104,96\",\n      offset: -6,\n      points: \"104,96,103,96,104,96\",\n      abbr: \"CST\"\n  },\n  {\n      timezone: \"America/Toronto\",\n      country: \"CA\",\n      pin: \"123,57\",\n      offset: -5,\n      points: \"125,58,122,58,123,57,124,57,124,58,125,58\",\n      abbr: \"EST\"\n  },\n  {\n      timezone: \"America/Bahia\",\n      country: \"BR\",\n      pin: \"197,143\",\n      offset: -3,\n      points: \"187,146,186,146,186,141,185,141,186,140,187,139,188,140,189,140,189,138,191,138,193,137,194,138,195,137,197,137,198,139,197,140,198,141,196,143,196,147,195,150,194,149,195,147,194,147,193,147,192,146,189,145,189,145,187,146\",\n      abbr: \"BRT\"\n  },\n  {\n      timezone: \"America/Barbados\",\n      country: \"BB\",\n      pin: \"167,107\",\n      offset: -4,\n      points: \"167,106,167,107,167,106\",\n      abbr: \"AST\"\n  },\n  {\n      timezone: \"America/Belem\",\n      country: \"BR\",\n      pin: \"183,127\",\n      offset: -3,\n      points: \"179,126,180,125,179,126,180,125,183,125,182,127,180,128,182,127,181,128,183,127,183,126,186,127,185,130,182,132,183,133,182,135,182,137,180,139,177,138,178,138,177,136,178,134,177,132,177,130,178,129,177,127,178,127,177,126,176,123,174,122,174,122,177,122,178,119,180,122,181,123,179,126\",\n      abbr: \"BRT\"\n  },\n  {\n      timezone: \"America/Belize\",\n      country: \"BZ\",\n      pin: \"128,101\",\n      offset: -6,\n      points: \"128,101,128,101,128,101\",\n      abbr: \"CST\"\n  },\n  {\n      timezone: \"America/Blanc-Sablon\",\n      country: \"CA\",\n      pin: \"171,54\",\n      offset: -4,\n      points: \"169,54,167,55,169,54\",\n      abbr: \"AST\"\n  },\n  {\n      timezone: \"America/Boa_Vista\",\n      country: \"BR\",\n      pin: \"166,121\",\n      offset: -4,\n      points: \"167,118,166,119,167,120,167,121,167,122,168,123,168,125,167,125,166,126,165,126,164,127,163,126,163,122,161,122,160,119,163,120,163,119,165,119,166,118,167,118\",\n      abbr: \"AMT\"\n  },\n  {\n      timezone: \"America/Bogota\",\n      country: \"CO\",\n      pin: \"147,119\",\n      offset: -5,\n      points: \"154,126,153,131,152,130,153,129,152,128,150,128,149,128,146,125,142,124,140,123,143,120,142,119,143,117,142,115,143,114,143,113,143,114,143,113,145,112,145,110,148,109,150,108,151,108,149,110,148,112,149,113,149,115,150,115,153,115,154,117,156,117,156,119,157,120,156,121,157,122,157,123,156,122,153,123,153,124,154,124,153,124,154,126\",\n      abbr: \"COT\"\n  },\n  {\n      timezone: \"America/Boise\",\n      country: \"US\",\n      pin: \"89,64\",\n      offset: -7,\n      points: \"96,66,96,67,87,67,87,66,86,66,86,64,87,63,88,62,88,61,89,62,92,62,93,63,96,63,96,66\",\n      abbr: \"MST\"\n  },\n  {\n      timezone: \"America/Cambridge_Bay\",\n      country: \"CA\",\n      pin: \"104,29\",\n      offset: -7,\n      points: \"99,18,100,19,99,19,101,19,100,20,102,19,104,20,103,21,97,21,97,20,99,20,97,20,98,19,97,19,99,18\",\n      abbr: \"MST\"\n  },\n  {\n      timezone: \"America/Cambridge_Bay\",\n      country: \"CA\",\n      pin: \"104,29\",\n      offset: -7,\n      points: \"108,36,97,35,95,34,92,34,81,30,81,28,89,29,92,30,89,31,90,31,97,31,100,32,99,32,101,33,100,32,101,32,101,32,101,32,100,31,103,30,99,30,100,30,103,29,105,31,106,30,109,31,113,31,113,30,115,30,116,30,116,31,117,30,116,31,118,32,117,30,120,30,120,30,120,29,119,30,120,28,116,28,117,27,116,27,116,26,119,25,118,25,120,25,121,26,121,27,123,28,122,27,121,28,122,28,121,28,125,29,123,29,124,29,124,30,125,30,126,29,126,32,108,32,108,36\",\n      abbr: \"MST\"\n  },\n  {\n      timezone: \"America/Cambridge_Bay\",\n      country: \"CA\",\n      pin: \"104,29\",\n      offset: -7,\n      points: \"115,24,116,24,116,25,116,25,114,25,114,26,113,26,107,24,111,24,110,23,115,24\",\n      abbr: \"MST\"\n  },\n  {\n      timezone: \"America/Cambridge_Bay\",\n      country: \"CA\",\n      pin: \"104,29\",\n      offset: -7,\n      points: \"100,23,103,24,105,26,105,26,110,27,110,28,106,28,107,28,107,29,108,28,109,29,107,29,104,29,104,29,102,28,99,30,93,30,92,29,93,29,88,29,87,28,97,28,97,24,99,24,100,26,101,25,100,23,100,23\",\n      abbr: \"MST\"\n  },\n  {\n      timezone: \"America/Campo_Grande\",\n      country: \"BR\",\n      pin: \"174,153\",\n      offset: -3,\n      points: \"176,150,177,151,179,152,179,153,175,158,173,158,172,156,169,156,170,150,172,149,173,150,175,149,175,150,176,150\",\n      abbr: \"AMST\"\n  },\n  {\n      timezone: \"America/Cancun\",\n      country: \"MX\",\n      pin: \"129,96\",\n      offset: -6,\n      points: \"128,95,130,96,128,98,129,98,128,100,128,99,127,100,126,100,126,98,128,96,128,95\",\n      abbr: \"EST\"\n  },\n  {\n      timezone: \"America/Caracas\",\n      country: \"VE\",\n      pin: \"157,110\",\n      offset: -4.5,\n      points: \"163,111,165,112,165,113,167,113,166,115,166,115,165,116,165,117,166,118,163,119,163,120,160,119,161,122,162,122,159,124,159,124,158,124,157,123,157,122,156,121,157,120,156,119,156,116,154,117,153,115,150,115,149,112,148,112,149,110,151,109,150,109,151,110,150,111,150,112,151,112,151,112,151,110,153,109,153,108,153,109,155,109,155,110,158,110,160,111,162,110,161,110,164,110,163,110,163,111\",\n      abbr: \"VET\"\n  },\n  {\n      timezone: \"America/Cayenne\",\n      country: \"GF\",\n      pin: \"177,118\",\n      offset: -3,\n      points: \"176,117,178,119,177,122,175,122,175,120,174,118,175,117,176,117\",\n      abbr: \"GFT\"\n  },\n  {\n      timezone: \"America/Cayman\",\n      country: \"KY\",\n      pin: \"137,98\",\n      offset: -5,\n      points: \"139,98,139,98,139,98\",\n      abbr: \"EST\"\n  },\n  {\n      timezone: \"America/Chicago\",\n      country: \"US\",\n      pin: \"128,67\",\n      offset: -6,\n      points: \"128,72,132,74,132,75,131,76,132,80,132,84,130,83,130,83,129,83,129,82,128,83,128,82,128,83,124,83,126,83,125,84,126,84,126,85,125,84,125,85,120,83,118,84,118,84,118,85,116,86,117,85,116,85,116,86,115,86,115,87,114,87,115,87,115,89,112,88,112,87,109,84,107,84,107,85,105,84,104,82,104,81,107,81,107,74,108,74,108,73,109,73,109,70,108,70,108,69,109,69,109,67,110,67,109,64,111,63,110,63,111,62,111,61,109,61,110,60,110,59,106,59,105,57,118,57,118,56,119,57,126,58,122,60,124,60,124,60,128,61,128,62,128,63,129,63,128,66,129,67,130,67,128,68,128,72\",\n      abbr: \"CST\"\n  },\n  {\n      timezone: \"America/Chihuahua\",\n      country: \"MX\",\n      pin: \"103,85\",\n      offset: -7,\n      points: \"106,85,106,86,106,88,105,88,103,88,101,89,98,86,99,86,99,82,100,82,100,81,102,81,104,83,105,84,106,85\",\n      abbr: \"MST\"\n  },\n  {\n      timezone: \"America/Coral_Harbour\",\n      country: \"\",\n      pin: \"250,125\",\n      offset: -5,\n      points: \"131,33,132,34,133,34,136,35,137,36,136,36,139,36,137,37,135,36,131,37,131,36,129,37,130,36,130,34,131,33\",\n      abbr: \"EST\"\n  },\n  {\n      timezone: \"America/Costa_Rica\",\n      country: \"CR\",\n      pin: \"133,111\",\n      offset: -6,\n      points: \"132,112,131,111,131,109,134,110,135,112,135,112,135,114,131,111,132,112\",\n      abbr: \"CST\"\n  },\n  {\n      timezone: \"America/Creston\",\n      country: \"CA\",\n      pin: \"88,57\",\n      offset: -7,\n      points: \"89,57,87,57,88,56,89,57\",\n      abbr: \"MST\"\n  },\n  {\n      timezone: \"America/Cuiaba\",\n      country: \"BR\",\n      pin: \"172,147\",\n      offset: -3,\n      points: \"179,146,176,148,176,150,175,150,175,149,173,150,172,149,170,150,169,149,169,148,166,148,166,144,167,142,167,141,165,140,164,137,169,137,169,135,170,137,171,138,180,139,180,141,180,143,179,146\",\n      abbr: \"AMST\"\n  },\n  {\n      timezone: \"America/Curacao\",\n      country: \"CW\",\n      pin: \"154,108\",\n      offset: -4,\n      points: \"154,108,154,108,154,108\",\n      abbr: \"AST\"\n  },\n  {\n      timezone: \"America/Danmarkshavn\",\n      country: \"GL\",\n      pin: \"224,18\",\n      offset: 0,\n      points: \"223,15,223,15,224,15,221,16,221,16,220,17,221,17,223,17,224,17,221,17,224,18,225,18,218,18,223,19,220,19,223,20,218,20,219,14,223,15\",\n      abbr: \"GMT\"\n  },\n  {\n      timezone: \"America/Dawson\",\n      country: \"CA\",\n      pin: \"56,36\",\n      offset: -8,\n      points: \"56,36,56,36,56,36\",\n      abbr: \"PST\"\n  },\n  {\n      timezone: \"America/Dawson_Creek\",\n      country: \"CA\",\n      pin: \"83,42\",\n      offset: -7,\n      points: \"83,45,83,50,79,48,78,46,83,45\",\n      abbr: \"MST\"\n  },\n  {\n      timezone: \"America/Denver\",\n      country: \"US\",\n      pin: \"104,70\",\n      offset: -7,\n      points: \"93,63,92,62,91,62,91,60,89,59,89,57,105,57,106,59,108,59,108,60,110,61,109,61,111,61,111,62,110,63,111,63,109,64,110,67,109,67,109,69,108,69,108,70,109,70,109,73,108,73,108,74,107,74,107,81,104,81,104,82,102,81,99,81,99,76,96,76,95,74,95,74,92,74,92,67,96,67,96,63,93,63\",\n      abbr: \"MST\"\n  },\n  {\n      timezone: \"America/Detroit\",\n      country: \"US\",\n      pin: \"135,66\",\n      offset: -5,\n      points: \"132,67,129,67,130,66,130,64,130,63,131,62,132,63,132,61,134,62,134,62,134,63,133,65,135,64,136,65,134,67,132,67\",\n      abbr: \"EST\"\n  },\n  {\n      timezone: \"America/Detroit\",\n      country: \"US\",\n      pin: \"135,66\",\n      offset: -5,\n      points: \"125,60,127,59,127,60,130,61,132,60,134,61,131,61,130,62,129,61,128,62,129,62,128,61,126,61,125,60\",\n      abbr: \"EST\"\n  },\n  {\n      timezone: \"America/Dominica\",\n      country: \"DM\",\n      pin: \"165,104\",\n      offset: -4,\n      points: \"165,103,165,104,165,103\",\n      abbr: \"AST\"\n  },\n  {\n      timezone: \"America/Edmonton\",\n      country: \"CA\",\n      pin: \"92,51\",\n      offset: -7,\n      points: \"92,57,88,56,88,55,85,53,86,52,86,52,83,51,83,42,97,42,97,51,99,51,97,52,97,57,92,57\",\n      abbr: \"MST\"\n  },\n  {\n      timezone: \"America/Eirunepe\",\n      country: \"BR\",\n      pin: \"153,134\",\n      offset: -4,\n      points: \"156,138,148,135,148,134,149,132,150,131,153,131,156,138\",\n      abbr: \"ACT\"\n  },\n  {\n      timezone: \"America/El_Salvador\",\n      country: \"SV\",\n      pin: \"126,106\",\n      offset: -6,\n      points: \"126,106,125,106,126,105,128,106,128,107,126,106\",\n      abbr: \"CST\"\n  },\n  {\n      timezone: \"America/Fortaleza\",\n      country: \"BR\",\n      pin: \"197,130\",\n      offset: -3,\n      points: \"201,134,202,135,201,135,199,137,198,136,198,135,197,136,194,135,194,136,192,138,189,138,189,140,187,140,186,139,185,138,185,136,184,135,184,133,182,132,185,130,186,126,187,127,187,127,188,127,188,128,188,130,188,128,189,129,190,128,191,129,194,129,198,132,201,132,201,134\",\n      abbr: \"BRT\"\n  },\n  {\n      timezone: \"America/Glace_Bay\",\n      country: \"CA\",\n      pin: \"167,61\",\n      offset: -4,\n      points: \"167,61,166,61,166,61,167,61\",\n      abbr: \"AST\"\n  },\n  {\n      timezone: \"America/Godthab\",\n      country: \"GL\",\n      pin: \"178,36\",\n      offset: -3,\n      points: \"188,42,187,42,188,41,187,41,188,41,187,41,187,41,186,41,187,40,186,41,187,40,183,41,184,40,183,40,183,40,182,40,183,39,182,39,182,39,181,39,182,39,181,39,182,39,180,38,181,37,180,38,180,38,180,37,180,37,179,37,180,37,179,37,180,37,179,37,179,36,178,36,180,36,178,36,180,35,179,35,180,35,181,36,179,34,180,35,178,36,178,35,179,35,177,35,178,34,177,34,180,34,177,34,177,34,176,34,178,33,176,33,180,32,175,33,176,33,175,33,177,33,176,32,177,32,175,32,180,32,175,31,181,31,177,31,178,31,175,31,176,30,178,31,176,30,180,31,179,30,179,30,176,30,179,30,180,29,179,30,179,29,180,29,180,29,180,29,180,29,179,29,180,28,179,28,180,28,174,27,180,27,179,27,179,27,178,26,179,26,177,26,178,26,177,26,179,26,176,26,178,25,176,25,175,25,175,26,173,26,172,25,174,25,173,25,174,25,173,24,174,24,173,23,174,23,172,23,173,22,172,22,172,22,170,22,172,21,168,20,169,20,169,20,161,19,158,15,160,15,160,14,162,14,156,13,162,12,163,13,162,12,165,12,165,12,166,12,165,11,166,11,172,12,167,11,169,11,174,11,176,11,175,12,176,11,181,12,179,11,181,11,179,10,180,10,188,11,189,11,188,11,188,11,188,11,191,11,186,10,195,10,187,10,196,10,196,10,199,10,196,9,202,9,214,9,201,10,215,9,216,10,214,10,220,10,204,11,216,11,213,12,213,12,221,11,220,12,217,13,224,12,223,12,228,11,234,12,229,13,221,13,228,13,221,14,222,14,226,14,225,14,219,14,218,20,223,20,223,21,219,20,220,20,219,20,222,21,219,21,224,22,219,22,219,22,219,22,220,23,220,22,222,22,221,23,219,23,217,23,219,23,214,22,216,23,212,23,213,23,212,23,212,24,215,24,212,24,216,24,213,24,215,24,215,25,216,25,216,26,210,25,212,25,210,26,215,26,211,26,212,26,209,27,213,27,210,28,212,28,215,27,219,28,213,30,208,30,206,30,205,30,206,31,204,31,202,33,198,33,198,34,197,33,198,33,197,33,197,33,197,33,197,34,195,34,194,34,195,34,194,35,193,35,194,36,192,36,194,36,194,37,192,36,193,37,192,37,192,37,191,37,192,38,190,38,191,38,190,38,192,39,190,39,191,39,190,40,191,40,189,40,191,40,190,41,190,41,189,41,190,42,189,41,188,42\",\n      abbr: \"WGT\"\n  },\n  {\n      timezone: \"America/Goose_Bay\",\n      country: \"CA\",\n      pin: \"166,51\",\n      offset: -4,\n      points: \"171,53,161,53,161,52,162,52,162,52,161,52,160,53,158,53,158,51,156,52,157,51,156,50,157,49,156,49,157,49,157,48,159,49,161,49,162,48,161,48,161,47,162,47,161,47,162,45,160,44,162,43,160,43,161,43,161,42,160,42,160,41,162,43,161,43,163,43,162,44,163,44,162,44,164,45,163,45,165,46,163,46,164,46,164,47,166,48,166,48,166,49,167,48,167,48,168,48,167,49,168,48,168,49,170,49,167,50,169,50,166,51,170,50,171,50,170,51,171,53\",\n      abbr: \"AST\"\n  },\n  {\n      timezone: \"America/Grand_Turk\",\n      country: \"TC\",\n      pin: \"151,95\",\n      offset: -5,\n      points: \"151,95,151,95,151,95\",\n      abbr: \"AST\"\n  },\n  {\n      timezone: \"America/Grenada\",\n      country: \"GD\",\n      pin: \"164,108\",\n      offset: -4,\n      points: \"165,108,165,108,165,108\",\n      abbr: \"AST\"\n  },\n  {\n      timezone: \"America/Guadeloupe\",\n      country: \"GP\",\n      pin: \"165,102\",\n      offset: -4,\n      points: \"165,102,165,102,165,102\",\n      abbr: \"AST\"\n  },\n  {\n      timezone: \"America/Guatemala\",\n      country: \"GT\",\n      pin: \"124,105\",\n      offset: -6,\n      points: \"125,106,123,105,122,104,123,103,124,103,123,101,124,101,124,100,126,100,126,103,127,103,125,106\",\n      abbr: \"CST\"\n  },\n  {\n      timezone: \"America/Guayaquil\",\n      country: \"EC\",\n      pin: \"139,128\",\n      offset: -5,\n      points: \"141,130,140,132,139,131,138,131,139,128,139,129,137,128,139,124,141,123,142,124,144,124,145,125,145,125,146,126,141,130\",\n      abbr: \"ECT\"\n  },\n  {\n      timezone: \"America/Guyana\",\n      country: \"GY\",\n      pin: \"169,116\",\n      offset: -4,\n      points: \"170,116,171,118,170,118,169,119,172,122,170,122,168,123,167,122,167,121,167,120,166,119,167,118,165,117,165,116,166,115,166,115,167,114,167,113,169,115,169,116,169,115,170,116\",\n      abbr: \"GYT\"\n  },\n  {\n      timezone: \"America/Halifax\",\n      country: \"CA\",\n      pin: \"162,63\",\n      offset: -4,\n      points: \"161,63,162,62,160,62,161,61,163,62,164,61,165,62,161,63,159,65,158,64,158,63,160,62,161,63\",\n      abbr: \"AST\"\n  },\n  {\n      timezone: \"America/Havana\",\n      country: \"CU\",\n      pin: \"136,93\",\n      offset: -5,\n      points: \"146,96,147,97,142,97,143,96,141,96,141,95,136,94,136,94,137,94,136,93,132,95,134,93,138,93,146,96\",\n      abbr: \"CST\"\n  },\n  {\n      timezone: \"America/Hermosillo\",\n      country: \"MX\",\n      pin: \"96,85\",\n      offset: -7,\n      points: \"90,81,91,80,96,81,99,81,99,86,98,86,99,88,98,88,96,87,97,86,94,85,93,82,90,81\",\n      abbr: \"MST\"\n  },\n  {\n      timezone: \"America/Indiana/Petersburg\",\n      country: \"US\",\n      pin: \"129,72\",\n      offset: -5,\n      points: \"129,72,129,72,129,72\",\n      abbr: \"EST\"\n  },\n  {\n      timezone: \"America/Indiana/Tell_City\",\n      country: \"US\",\n      pin: \"129,72\",\n      offset: -6,\n      points: \"130,72,130,72,130,72\",\n      abbr: \"CST\"\n  },\n  {\n      timezone: \"America/Indiana/Vevay\",\n      country: \"US\",\n      pin: \"132,71\",\n      offset: -5,\n      points: \"132,71,132,71,132,71\",\n      abbr: \"EST\"\n  },\n  {\n      timezone: \"America/Indianapolis\",\n      country: \"US\",\n      pin: \"130,70\",\n      offset: -5,\n      points: \"132,71,130,72,130,71,128,71,128,68,130,68,130,67,132,67,132,70,132,71\",\n      abbr: \"EST\"\n  },\n  {\n      timezone: \"America/Indiana/Knox\",\n      country: \"US\",\n      pin: \"130,68\",\n      offset: -6,\n      points: \"130,67,129,68,130,67\",\n      abbr: \"CST\"\n  },\n  {\n      timezone: \"America/Indiana/Marengo\",\n      country: \"US\",\n      pin: \"130,72\",\n      offset: -5,\n      points: \"130,72,130,72,130,72,130,72\",\n      abbr: \"EST\"\n  },\n  {\n      timezone: \"America/Indiana/Vincennes\",\n      country: \"US\",\n      pin: \"128,71\",\n      offset: -5,\n      points: \"128,72,128,71,130,71,130,72,128,72\",\n      abbr: \"EST\"\n  },\n  {\n      timezone: \"America/Indiana/Winamac\",\n      country: \"US\",\n      pin: \"130,68\",\n      offset: -5,\n      points: \"130,68,129,68,130,68\",\n      abbr: \"EST\"\n  },\n  {\n      timezone: \"America/Inuvik\",\n      country: \"CA\",\n      pin: \"64,30\",\n      offset: -7,\n      points: \"65,30,64,30,65,30\",\n      abbr: \"MST\"\n  },\n  {\n      timezone: \"America/Iqaluit\",\n      country: \"CA\",\n      pin: \"155,36\",\n      offset: -5,\n      points: \"139,20,138,20,140,20,138,21,140,21,132,21,132,20,139,20\",\n      abbr: \"EST\"\n  },\n  {\n      timezone: \"America/Iqaluit\",\n      country: \"CA\",\n      pin: \"155,36\",\n      offset: -5,\n      points: \"139,10,145,10,144,11,145,10,142,10,156,10,155,10,156,10,156,12,154,12,156,12,152,12,156,12,156,13,152,13,153,14,149,14,152,14,151,14,147,14,146,14,148,15,142,15,147,15,142,15,146,16,143,16,145,16,145,17,141,17,142,17,141,18,136,18,142,18,141,19,137,19,138,19,135,18,136,19,132,19,132,18,134,18,134,17,136,17,132,17,132,15,136,16,134,16,137,15,132,15,134,15,132,15,132,14,138,14,139,14,134,13,144,13,140,13,143,12,140,12,140,12,139,13,132,13,132,12,136,12,132,12,132,11,133,11,132,10,140,11,135,11,138,10,137,10,141,10,138,10,139,10\",\n      abbr: \"EST\"\n  },\n  {\n      timezone: \"America/Iqaluit\",\n      country: \"CA\",\n      pin: \"155,36\",\n      offset: -5,\n      points: \"132,30,133,29,132,29,132,28,136,28,134,28,137,29,136,29,137,30,135,30,137,31,134,33,133,32,132,32,132,30\",\n      abbr: \"EST\"\n  },\n  {\n      timezone: \"America/Iqaluit\",\n      country: \"CA\",\n      pin: \"155,36\",\n      offset: -5,\n      points: \"144,24,140,24,138,23,142,23,144,24\",\n      abbr: \"EST\"\n  },\n  {\n      timezone: \"America/Iqaluit\",\n      country: \"CA\",\n      pin: \"155,36\",\n      offset: -5,\n      points: \"133,23,137,23,139,24,138,24,138,24,138,25,139,24,142,25,140,25,142,25,141,24,142,24,146,24,146,25,144,25,147,25,145,26,146,25,146,26,148,25,147,26,148,26,147,26,149,26,148,26,149,25,151,26,149,27,150,27,149,27,152,26,150,27,151,27,151,28,153,27,152,27,155,27,152,28,155,28,153,28,156,27,155,28,153,28,156,29,154,29,155,29,154,29,155,29,155,29,156,29,154,29,156,30,156,33,155,33,156,34,156,37,154,36,156,37,156,39,151,37,150,37,151,37,149,36,148,36,148,35,148,36,148,35,147,36,147,35,146,35,146,35,147,36,142,36,141,35,142,34,148,34,147,33,150,32,148,30,148,30,147,30,148,30,145,29,144,30,145,29,143,28,143,28,143,28,143,28,142,28,142,27,140,27,139,27,140,27,141,28,136,28,138,28,135,27,137,28,132,28,132,26,133,25,132,25,132,25,133,25,132,25,132,24,133,24,132,23,133,24,132,23,133,23\",\n      abbr: \"EST\"\n  },\n  {\n      timezone: \"America/La_Paz\",\n      country: \"BO\",\n      pin: \"155,148\",\n      offset: -4,\n      points: \"164,154,163,156,161,156,161,157,160,156,158,155,157,157,156,157,155,153,155,152,153,149,154,148,154,147,155,142,153,140,155,140,157,139,159,138,160,142,166,144,166,148,169,148,169,149,170,150,170,153,168,152,164,152,164,154\",\n      abbr: \"BOT\"\n  },\n  {\n      timezone: \"America/Jamaica\",\n      country: \"JM\",\n      pin: \"143,100\",\n      offset: -5,\n      points: \"144,100,143,100,141,100,143,99,144,100\",\n      abbr: \"EST\"\n  },\n  {\n      timezone: \"America/Juneau\",\n      country: \"US\",\n      pin: \"63,44\",\n      offset: -9,\n      points: \"59,43,62,42,66,45,65,46,65,45,64,45,65,45,64,45,65,45,64,44,64,44,63,44,62,42,62,42,62,44,61,44,61,43,61,43,61,43,60,43,61,44,60,44,58,43,59,43\",\n      abbr: \"AKST\"\n  },\n  {\n      timezone: \"America/Louisville\",\n      country: \"US\",\n      pin: \"131,72\",\n      offset: -5,\n      points: \"130,72,130,72,131,71,130,72\",\n      abbr: \"EST\"\n  },\n  {\n      timezone: \"America/Kentucky/Monticello\",\n      country: \"US\",\n      pin: \"132,74\",\n      offset: -5,\n      points: \"132,74,133,74,132,74,132,74\",\n      abbr: \"EST\"\n  },\n  {\n      timezone: \"America/Kralendijk\",\n      country: \"BQ\",\n      pin: \"155,108\",\n      offset: -4,\n      points: \"162,101,162,100,162,101\",\n      abbr: \"AST\"\n  },\n  {\n      timezone: \"America/Lima\",\n      country: \"PE\",\n      pin: \"143,142\",\n      offset: -5,\n      points: \"153,149,153,150,152,150,151,149,146,146,144,145,144,144,139,135,137,133,138,133,137,131,138,130,139,130,138,131,140,132,141,130,145,127,146,126,145,125,146,125,149,128,150,128,153,129,152,130,153,131,152,131,149,132,148,134,147,135,149,137,148,138,150,138,150,139,152,138,152,140,153,140,155,142,154,147,154,148,153,149\",\n      abbr: \"PET\"\n  },\n  {\n      timezone: \"America/Managua\",\n      country: \"NI\",\n      pin: \"130,108\",\n      offset: -6,\n      points: \"132,110,131,110,128,107,129,107,129,106,131,106,132,104,135,104,134,110,132,110\",\n      abbr: \"CST\"\n  },\n  {\n      timezone: \"America/Manaus\",\n      country: \"BR\",\n      pin: \"167,129\",\n      offset: -4,\n      points: \"167,125,168,125,169,127,172,128,169,134,169,135,169,137,164,137,163,136,162,136,161,137,160,138,158,138,157,139,156,138,153,131,154,127,153,124,154,124,153,124,153,123,156,122,157,123,158,124,159,124,159,124,161,122,162,122,163,124,163,126,164,127,165,126,166,126,167,125\",\n      abbr: \"AMT\"\n  },\n  {\n      timezone: \"America/Los_Angeles\",\n      country: \"US\",\n      pin: \"86,78\",\n      offset: -8,\n      points: \"91,62,88,62,88,61,88,62,87,63,86,64,86,66,87,66,87,67,92,67,92,75,91,75,91,77,91,79,91,79,87,80,85,78,82,77,82,76,80,73,80,72,79,72,78,71,77,69,78,67,77,66,78,61,78,61,78,61,78,60,78,60,78,60,78,60,77,58,80,58,79,59,80,58,80,59,79,60,80,59,80,57,89,57,89,59,91,60,91,62\",\n      abbr: \"PST\"\n  },\n  {\n      timezone: \"America/Lower_Princes\",\n      country: \"SX\",\n      pin: \"162,100\",\n      offset: -4,\n      points: \"162,100,162,100,162,100\",\n      abbr: \"AST\"\n  },\n  {\n      timezone: \"America/Maceio\",\n      country: \"BR\",\n      pin: \"200,138\",\n      offset: -3,\n      points: \"199,140,198,141,197,140,198,139,197,138,198,137,199,138,201,137,199,140\",\n      abbr: \"BRT\"\n  },\n  {\n      timezone: \"America/Marigot\",\n      country: \"MF\",\n      pin: \"162,100\",\n      offset: -4,\n      points: \"162,100,162,100,162,100\",\n      abbr: \"AST\"\n  },\n  {\n      timezone: \"America/Martinique\",\n      country: \"MQ\",\n      pin: \"165,105\",\n      offset: -4,\n      points: \"165,104,165,104,165,104\",\n      abbr: \"AST\"\n  },\n  {\n      timezone: \"America/Matamoros\",\n      country: \"MX\",\n      pin: \"115,89\",\n      offset: -6,\n      points: \"113,89,112,89,109,84,108,84,107,85,107,85,107,84,109,84,112,87,112,88,115,89,115,90,113,89\",\n      abbr: \"CST\"\n  },\n  {\n      timezone: \"America/Mazatlan\",\n      country: \"MX\",\n      pin: \"102,93\",\n      offset: -7,\n      points: \"104,93,106,95,105,96,104,96,104,95,103,94,100,90,98,89,98,88,100,88,101,90,104,93\",\n      abbr: \"MST\"\n  },\n  {\n      timezone: \"America/Mazatlan\",\n      country: \"MX\",\n      pin: \"102,93\",\n      offset: -7,\n      points: \"91,86,93,86,98,93,97,93,94,91,94,89,93,88,92,88,90,86,92,87,91,86\",\n      abbr: \"MST\"\n  },\n  {\n      timezone: \"America/Menominee\",\n      country: \"US\",\n      pin: \"128,62\",\n      offset: -6,\n      points: \"128,62,128,61,124,60,128,61,129,62,128,62\",\n      abbr: \"CST\"\n  },\n  {\n      timezone: \"America/Mexico_City\",\n      country: \"MX\",\n      pin: \"112,98\",\n      offset: -6,\n      points: \"119,103,118,102,116,103,114,103,104,98,103,97,104,96,105,96,106,95,105,94,106,92,108,91,107,90,110,91,111,93,114,94,117,99,119,100,122,99,122,100,124,100,124,101,123,101,124,102,123,103,122,105,119,102,119,103\",\n      abbr: \"CST\"\n  },\n  {\n      timezone: \"America/Merida\",\n      country: \"MX\",\n      pin: \"126,96\",\n      offset: -6,\n      points: \"124,96,125,95,128,95,128,96,126,98,126,100,122,100,122,99,123,99,124,96\",\n      abbr: \"CST\"\n  },\n  {\n      timezone: \"America/Metlakatla\",\n      country: \"US\",\n      pin: \"67,48\",\n      offset: -8,\n      points: \"67,48,67,48,67,48\",\n      abbr: \"PST\"\n  },\n  {\n      timezone: \"America/Miquelon\",\n      country: \"PM\",\n      pin: \"172,60\",\n      offset: -3,\n      points: \"172,60,172,60,172,60\",\n      abbr: \"PMST\"\n  },\n  {\n      timezone: \"America/Moncton\",\n      country: \"CA\",\n      pin: \"160,61\",\n      offset: -4,\n      points: \"157,58,160,59,159,60,160,60,160,61,161,61,158,62,156,62,156,62,156,60,154,59,155,58,157,58\",\n      abbr: \"AST\"\n  },\n  {\n      timezone: \"America/Monterrey\",\n      country: \"MX\",\n      pin: \"111,89\",\n      offset: -6,\n      points: \"107,90,108,91,106,92,105,94,104,94,101,90,103,88,105,88,106,88,106,86,106,85,108,84,109,84,112,89,115,89,115,90,115,90,114,90,114,94,111,93,110,91,107,90\",\n      abbr: \"CST\"\n  },\n  {\n      timezone: \"America/Montevideo\",\n      country: \"UY\",\n      pin: \"172,173\",\n      offset: -2,\n      points: \"172,173,170,173,169,172,170,167,171,167,172,168,173,168,176,170,175,173,172,173\",\n      abbr: \"UYT\"\n  },\n  {\n      timezone: \"America/Montreal\",\n      country: \"\",\n      pin: \"250,125\",\n      offset: -5,\n      points: \"146,63,147,62,144,62,141,61,139,59,140,53,140,54,140,53,141,52,140,51,140,50,139,49,142,48,144,47,143,44,141,44,143,42,142,41,143,41,142,41,142,40,141,41,142,40,142,39,142,38,146,39,148,38,150,39,150,39,151,39,150,40,151,40,153,40,153,42,151,42,153,42,153,43,154,43,152,44,154,43,155,44,154,45,156,44,155,44,156,44,156,45,158,43,158,44,158,43,159,43,159,43,160,43,159,42,160,41,160,42,161,42,161,43,160,43,162,43,160,44,162,45,161,47,162,47,161,47,161,48,162,48,161,49,159,49,157,48,157,49,156,49,157,49,156,50,157,51,156,52,158,51,158,53,160,53,161,52,162,52,162,52,161,52,161,53,171,53,171,53,168,54,167,55,164,55,158,55,158,55,156,57,155,57,152,60,149,61,157,57,160,57,161,58,159,58,155,58,153,60,152,62,151,63,146,63\",\n      abbr: \"EST\"\n  },\n  {\n      timezone: \"America/Montserrat\",\n      country: \"MS\",\n      pin: \"164,102\",\n      offset: -4,\n      points: \"164,102,164,102,164,102\",\n      abbr: \"AST\"\n  },\n  {\n      timezone: \"America/Nassau\",\n      country: \"BS\",\n      pin: \"143,90\",\n      offset: -5,\n      points: \"143,90,143,90,143,90\",\n      abbr: \"EST\"\n  },\n  {\n      timezone: \"America/New_York\",\n      country: \"US\",\n      pin: \"147,68\",\n      offset: -5,\n      points: \"132,82,131,76,132,75,133,74,130,72,132,71,132,71,132,67,136,67,140,66,140,65,144,65,144,64,146,63,152,62,154,59,156,60,156,62,157,63,155,64,154,63,154,64,152,64,151,66,152,67,153,67,153,67,151,67,151,67,151,68,148,68,146,71,145,70,146,72,145,73,145,72,144,71,145,70,144,70,144,72,143,72,144,72,143,72,144,74,143,73,144,74,145,75,144,74,145,75,143,75,145,76,143,76,144,76,143,76,144,76,144,77,138,80,137,82,139,88,138,90,137,90,136,88,136,88,136,88,135,87,136,86,135,86,135,84,133,83,131,84,132,82\",\n      abbr: \"EST\"\n  },\n  {\n      timezone: \"America/Nipigon\",\n      country: \"CA\",\n      pin: \"127,57\",\n      offset: -5,\n      points: \"127,57,127,57,127,57\",\n      abbr: \"EST\"\n  },\n  {\n      timezone: \"America/Nome\",\n      country: \"US\",\n      pin: \"20,35\",\n      offset: -9,\n      points: \"25,32,23,32,22,31,18,30,19,29,23,29,25,27,25,32\",\n      abbr: \"AKST\"\n  },\n  {\n      timezone: \"America/Nome\",\n      country: \"US\",\n      pin: \"20,35\",\n      offset: -9,\n      points: \"25,35,24,36,19,35,18,35,19,34,16,34,23,33,22,33,25,33,25,35\",\n      abbr: \"AKST\"\n  },\n  {\n      timezone: \"America/Nome\",\n      country: \"US\",\n      pin: \"20,35\",\n      offset: -9,\n      points: \"25,42,22,42,20,41,21,40,19,39,22,37,23,37,25,37,25,42\",\n      abbr: \"AKST\"\n  },\n  {\n      timezone: \"America/Noronha\",\n      country: \"BR\",\n      pin: \"205,130\",\n      offset: -2,\n      points: \"205,130,205,130,205,130\",\n      abbr: \"FNT\"\n  },\n  {\n      timezone: \"America/North_Dakota/Beulah\",\n      country: \"US\",\n      pin: \"109,59\",\n      offset: -6,\n      points: \"109,59,108,60,108,59,109,59\",\n      abbr: \"CST\"\n  },\n  {\n      timezone: \"America/North_Dakota/Center\",\n      country: \"US\",\n      pin: \"109,60\",\n      offset: -6,\n      points: \"110,60,109,60,110,60\",\n      abbr: \"CST\"\n  },\n  {\n      timezone: \"America/North_Dakota/New_Salem\",\n      country: \"US\",\n      pin: \"109,60\",\n      offset: -6,\n      points: \"110,60,110,60,110,61,108,60,110,60\",\n      abbr: \"CST\"\n  },\n  {\n      timezone: \"America/Ojinaga\",\n      country: \"MX\",\n      pin: \"105,84\",\n      offset: -7,\n      points: \"102,81,106,85,105,84,104,83,102,81,99,82,100,81,100,81,102,81\",\n      abbr: \"MST\"\n  },\n  {\n      timezone: \"America/Panama\",\n      country: \"PA\",\n      pin: \"140,113\",\n      offset: -5,\n      points: \"142,113,143,114,142,115,141,114,141,113,142,114,140,112,138,114,139,115,138,115,138,115,137,114,137,114,136,113,135,114,135,113,135,112,137,113,140,112,142,113\",\n      abbr: \"EST\"\n  },\n  {\n      timezone: \"America/Pangnirtung\",\n      country: \"CA\",\n      pin: \"159,33\",\n      offset: -5,\n      points: \"156,10,160,10,165,11,156,12,156,10\",\n      abbr: \"EST\"\n  },\n  {\n      timezone: \"America/Pangnirtung\",\n      country: \"CA\",\n      pin: \"159,33\",\n      offset: -5,\n      points: \"156,34,157,34,157,35,157,35,160,35,159,36,160,36,160,36,160,37,159,36,160,38,159,37,159,38,158,37,158,37,156,37,156,34\",\n      abbr: \"EST\"\n  },\n  {\n      timezone: \"America/Pangnirtung\",\n      country: \"CA\",\n      pin: \"159,33\",\n      offset: -5,\n      points: \"156,30,157,30,156,30,158,30,157,31,158,31,158,31,158,31,160,31,159,31,160,31,161,31,160,31,161,32,160,32,162,31,161,32,163,32,163,32,164,32,165,32,163,33,164,33,162,33,163,33,163,33,163,34,162,33,162,35,159,34,161,33,159,33,159,33,158,33,156,32,157,33,156,33,157,33,156,33,156,30\",\n      abbr: \"EST\"\n  },\n  {\n      timezone: \"America/Paramaribo\",\n      country: \"SR\",\n      pin: \"173,117\",\n      offset: -3,\n      points: \"175,118,175,120,174,122,172,121,172,122,171,122,169,119,170,118,171,118,171,117,175,117,175,118\",\n      abbr: \"SRT\"\n  },\n  {\n      timezone: \"America/Phoenix\",\n      country: \"US\",\n      pin: \"94,79\",\n      offset: -7,\n      points: \"99,80,99,81,96,81,91,80,91,77,91,75,91,75,92,74,95,74,95,74,96,76,99,76,99,80\",\n      abbr: \"MST\"\n  },\n  {\n      timezone: \"America/Port-au-Prince\",\n      country: \"HT\",\n      pin: \"150,99\",\n      offset: -5,\n      points: \"148,99,149,99,148,99\",\n      abbr: \"EST\"\n  },\n  {\n      timezone: \"America/Port_of_Spain\",\n      country: \"TT\",\n      pin: \"165,110\",\n      offset: -4,\n      points: \"164,110,164,110,164,110\",\n      abbr: \"AST\"\n  },\n  {\n      timezone: \"America/Porto_Velho\",\n      country: \"BR\",\n      pin: \"161,137\",\n      offset: -4,\n      points: \"167,142,166,144,164,144,160,142,159,138,157,139,158,138,160,138,161,137,162,136,163,136,165,137,165,140,167,140,167,142\",\n      abbr: \"AMT\"\n  },\n  {\n      timezone: \"America/Puerto_Rico\",\n      country: \"PR\",\n      pin: \"158,99\",\n      offset: -4,\n      points: \"158,99,158,99,158,99\",\n      abbr: \"AST\"\n  },\n  {\n      timezone: \"America/Rainy_River\",\n      country: \"CA\",\n      pin: \"119,57\",\n      offset: -6,\n      points: \"119,57,119,57,119,57\",\n      abbr: \"CST\"\n  },\n  {\n      timezone: \"America/Rankin_Inlet\",\n      country: \"CA\",\n      pin: \"122,38\",\n      offset: -6,\n      points: \"132,12,125,12,125,12,129,12,122,12,132,11,132,12\",\n      abbr: \"CST\"\n  },\n  {\n      timezone: \"America/Rankin_Inlet\",\n      country: \"CA\",\n      pin: \"122,38\",\n      offset: -6,\n      points: \"113,19,114,19,114,20,115,20,111,21,110,20,111,20,108,20,108,20,109,20,108,19,111,20,111,19,112,19,110,19,113,19\",\n      abbr: \"CST\"\n  },\n  {\n      timezone: \"America/Rankin_Inlet\",\n      country: \"CA\",\n      pin: \"122,38\",\n      offset: -6,\n      points: \"125,16,126,16,122,16,121,16,123,16,119,15,124,15,118,15,117,15,119,14,116,14,119,14,118,14,119,14,116,13,120,13,117,13,121,12,119,12,120,12,127,14,128,13,128,14,129,14,129,15,132,15,128,16,128,15,127,16,128,16,127,16,127,16,125,16\",\n      abbr: \"CST\"\n  },\n  {\n      timezone: \"America/Rankin_Inlet\",\n      country: \"CA\",\n      pin: \"122,38\",\n      offset: -6,\n      points: \"132,21,122,21,122,21,122,20,121,19,118,19,118,19,115,18,117,18,121,18,120,19,124,19,124,19,123,19,126,19,123,19,126,20,132,20,132,21\",\n      abbr: \"CST\"\n  },\n  {\n      timezone: \"America/Rankin_Inlet\",\n      country: \"CA\",\n      pin: \"122,38\",\n      offset: -6,\n      points: \"132,19,125,19,130,18,127,17,129,17,132,18,132,19\",\n      abbr: \"CST\"\n  },\n  {\n      timezone: \"America/Rankin_Inlet\",\n      country: \"CA\",\n      pin: \"122,38\",\n      offset: -6,\n      points: \"132,28,127,27,126,26,129,26,125,26,125,25,126,25,125,24,128,23,132,23,130,24,130,24,130,25,132,26,129,26,132,26,132,28\",\n      abbr: \"CST\"\n  },\n  {\n      timezone: \"America/Rankin_Inlet\",\n      country: \"CA\",\n      pin: \"122,38\",\n      offset: -6,\n      points: \"125,36,124,37,119,36,123,37,124,37,122,38,122,38,120,39,120,39,119,40,120,40,118,42,108,42,108,32,126,32,126,29,128,30,128,30,127,31,129,32,130,31,131,30,132,30,132,33,130,33,131,33,129,34,123,33,129,35,128,36,125,36\",\n      abbr: \"CST\"\n  },\n  {\n      timezone: \"America/Rankin_Inlet\",\n      country: \"CA\",\n      pin: \"122,38\",\n      offset: -6,\n      points: \"118,22,120,22,125,22,122,24,119,24,120,24,120,25,117,24,117,23,119,23,118,22\",\n      abbr: \"CST\"\n  },\n  {\n      timezone: \"America/Recife\",\n      country: \"BR\",\n      pin: \"202,136\",\n      offset: -3,\n      points: \"196,136,197,136,198,135,199,137,201,135,202,136,201,137,199,138,198,137,197,138,195,137,194,138,193,137,194,136,194,135,196,136\",\n      abbr: \"BRT\"\n  },\n  {\n      timezone: \"America/Regina\",\n      country: \"CA\",\n      pin: \"105,55\",\n      offset: -6,\n      points: \"104,57,97,57,97,52,99,51,97,51,97,42,108,42,108,48,108,49,109,50,109,57,104,57\",\n      abbr: \"CST\"\n  },\n  {\n      timezone: \"America/Resolute\",\n      country: \"CA\",\n      pin: \"118,21\",\n      offset: -6,\n      points: \"118,20,120,20,120,21,116,21,118,20\",\n      abbr: \"CST\"\n  },\n  {\n      timezone: \"America/Rio_Branco\",\n      country: \"BR\",\n      pin: \"156,139\",\n      offset: -4,\n      points: \"148,135,152,136,157,139,155,140,152,140,152,138,150,139,150,138,148,138,149,137,147,135,148,135\",\n      abbr: \"ACT\"\n  },\n  {\n      timezone: \"America/Santa_Isabel\",\n      country: \"MX\",\n      pin: \"90,83\",\n      offset: -8,\n      points: \"91,80,91,83,93,86,91,86,92,85,89,84,88,81,88,80,91,80\",\n      abbr: \"PST\"\n  },\n  {\n      timezone: \"America/Santarem\",\n      country: \"BR\",\n      pin: \"174,128\",\n      offset: -3,\n      points: \"176,125,177,126,178,127,177,127,178,129,177,130,177,132,178,134,177,136,178,138,177,138,171,138,170,137,169,134,172,128,168,126,168,123,170,122,172,122,172,121,174,121,174,123,176,123,176,125\",\n      abbr: \"BRT\"\n  },\n  {\n      timezone: \"America/Santiago\",\n      country: \"CL\",\n      pin: \"152,171\",\n      offset: -3,\n      points: \"152,199,154,198,155,198,155,201,150,201,153,201,152,200,154,201,154,201,154,201,153,200,154,199,152,199,152,199\",\n      abbr: \"CLT\"\n  },\n  {\n      timezone: \"America/Santiago\",\n      country: \"CL\",\n      pin: \"152,171\",\n      offset: -3,\n      points: \"148,193,148,195,148,196,150,195,149,197,150,197,155,198,152,198,151,200,149,199,150,199,151,198,151,198,149,198,149,199,148,199,149,198,148,198,148,197,149,198,149,197,149,198,149,198,149,198,149,197,148,196,148,197,149,197,148,197,149,197,148,197,148,197,148,197,147,197,148,196,147,196,148,195,148,195,147,196,147,195,146,195,147,195,147,194,148,194,147,193,147,194,147,193,147,193,147,193,147,192,146,192,148,192,148,191,146,191,147,191,147,191,147,191,147,190,145,190,146,189,147,189,147,190,148,188,148,189,148,188,149,188,148,188,149,187,148,186,149,184,149,184,149,184,149,183,149,183,150,183,148,183,147,182,148,180,148,177,148,177,151,172,151,165,152,162,152,157,153,155,152,150,154,149,155,152,155,153,156,157,157,157,156,158,155,159,155,162,153,164,153,167,152,168,153,173,152,174,152,175,151,176,152,179,150,180,150,183,150,184,151,186,150,187,151,187,150,187,151,188,150,188,150,190,149,191,149,193,148,193\",\n      abbr: \"CLT\"\n  },\n  {\n      timezone: \"America/Santo_Domingo\",\n      country: \"DO\",\n      pin: \"153,99\",\n      offset: -4,\n      points: \"151,100,150,100,150,99,150,97,153,98,154,98,153,98,155,99,155,100,151,100\",\n      abbr: \"AST\"\n  },\n  {\n      timezone: \"America/Scoresbysund\",\n      country: \"GL\",\n      pin: \"219,27\",\n      offset: -1,\n      points: \"216,25,219,25,218,26,220,25,219,26,220,26,220,26,219,26,220,26,219,26,220,27,217,27,216,26,216,25\",\n      abbr: \"EGT\"\n  },\n  {\n      timezone: \"America/Sao_Paulo\",\n      country: \"BR\",\n      pin: \"185,158\",\n      offset: -2,\n      points: \"181,166,179,168,178,170,180,167,179,167,179,168,176,172,176,171,176,170,175,170,173,168,172,168,171,167,170,167,173,164,175,162,175,161,174,161,175,159,176,157,178,155,179,152,177,151,176,149,179,146,180,142,181,143,182,142,182,143,184,143,186,143,186,146,189,145,195,147,194,149,195,150,195,152,193,155,193,156,192,157,188,157,183,160,182,160,183,161,182,161,183,161,182,164,181,166\",\n      abbr: \"BRST\"\n  },\n  {\n      timezone: \"America/Sitka\",\n      country: \"US\",\n      pin: \"62,46\",\n      offset: -9,\n      points: \"66,45,67,46,65,46,66,45,66,45\",\n      abbr: \"AKST\"\n  },\n  {\n      timezone: \"America/St_Barthelemy\",\n      country: \"BL\",\n      pin: \"163,100\",\n      offset: -4,\n      points: \"163,100,163,100,163,100\",\n      abbr: \"AST\"\n  },\n  {\n      timezone: \"America/St_Johns\",\n      country: \"CA\",\n      pin: \"177,59\",\n      offset: -3.5,\n      points: \"173,53,172,54,173,54,172,54,171,56,172,55,173,56,172,56,173,56,173,57,174,56,176,57,175,58,176,57,175,58,175,59,177,58,176,59,177,59,176,60,176,60,176,59,175,60,175,59,175,58,173,60,174,59,172,59,173,59,173,58,171,59,168,59,169,58,168,58,169,57,170,57,169,57,170,56,169,56,170,55,173,53\",\n      abbr: \"NST\"\n  },\n  {\n      timezone: \"America/Thule\",\n      country: \"GL\",\n      pin: \"154,19\",\n      offset: -4,\n      points: \"161,19,155,19,153,19,156,18,151,18,158,17,153,17,153,17,149,16,158,15,161,19\",\n      abbr: \"AST\"\n  },\n  {\n      timezone: \"America/St_Kitts\",\n      country: \"KN\",\n      pin: \"163,101\",\n      offset: -4,\n      points: \"163,101,163,101,163,101\",\n      abbr: \"AST\"\n  },\n  {\n      timezone: \"America/St_Lucia\",\n      country: \"LC\",\n      pin: \"165,106\",\n      offset: -4,\n      points: \"165,105,165,106,165,105\",\n      abbr: \"AST\"\n  },\n  {\n      timezone: \"America/St_Thomas\",\n      country: \"VI\",\n      pin: \"160,100\",\n      offset: -4,\n      points: \"160,99,160,99,160,99\",\n      abbr: \"AST\"\n  },\n  {\n      timezone: \"America/St_Vincent\",\n      country: \"VC\",\n      pin: \"165,107\",\n      offset: -4,\n      points: \"165,106,165,107,165,106\",\n      abbr: \"AST\"\n  },\n  {\n      timezone: \"America/Swift_Current\",\n      country: \"CA\",\n      pin: \"100,55\",\n      offset: -6,\n      points: \"100,55,100,55,100,55\",\n      abbr: \"CST\"\n  },\n  {\n      timezone: \"America/Tegucigalpa\",\n      country: \"HN\",\n      pin: \"129,105\",\n      offset: -6,\n      points: \"129,106,129,107,128,106,126,105,126,104,128,103,131,103,133,103,135,104,132,104,131,106,129,106\",\n      abbr: \"CST\"\n  },\n  {\n      timezone: \"America/Thunder_Bay\",\n      country: \"CA\",\n      pin: \"126,58\",\n      offset: -5,\n      points: \"126,58,126,58,126,58\",\n      abbr: \"EST\"\n  },\n  {\n      timezone: \"America/Tijuana\",\n      country: \"MX\",\n      pin: \"87,80\",\n      offset: -8,\n      points: \"87,80,87,80,87,80\",\n      abbr: \"PST\"\n  },\n  {\n      timezone: \"America/Toronto\",\n      country: \"CA\",\n      pin: \"140,64\",\n      offset: -5,\n      points: \"146,62,147,62,143,64,142,63,143,64,143,64,140,64,139,65,140,65,135,67,137,65,137,63,137,62,138,63,139,63,138,61,137,61,136,62,133,61,133,60,132,58,131,58,130,57,127,57,128,58,126,58,126,58,124,58,124,57,125,56,125,55,124,53,125,53,125,52,126,52,127,51,126,50,125,50,125,47,127,46,128,47,132,48,136,48,136,51,138,54,140,54,140,60,141,61,144,62,146,62\",\n      abbr: \"EST\"\n  },\n  {\n      timezone: \"America/Tortola\",\n      country: \"VG\",\n      pin: \"160,99\",\n      offset: -4,\n      points: \"160,99,160,99,160,99\",\n      abbr: \"AST\"\n  },\n  {\n      timezone: \"America/Vancouver\",\n      country: \"CA\",\n      pin: \"79,57\",\n      offset: -8,\n      points: \"72,54,76,55,79,58,76,57,77,57,76,57,75,56,74,56,75,56,72,55,73,55,72,54\",\n      abbr: \"PST\"\n  },\n  {\n      timezone: \"America/Vancouver\",\n      country: \"CA\",\n      pin: \"79,57\",\n      offset: -8,\n      points: \"63,43,62,42,59,43,57,42,83,42,83,45,78,46,79,48,86,52,86,52,85,53,88,55,88,57,79,57,81,56,81,57,80,56,81,57,80,57,80,56,79,57,79,56,79,56,79,55,79,56,78,56,78,56,78,56,78,55,77,56,77,55,77,55,76,55,77,54,76,54,76,55,75,55,76,54,75,55,74,54,75,54,73,54,74,54,73,54,74,53,73,53,72,53,73,52,74,53,74,52,75,52,73,52,73,52,73,52,72,53,72,52,72,52,72,52,71,51,73,51,71,51,71,50,70,51,69,50,70,50,69,49,69,50,69,49,70,48,69,49,70,48,70,48,69,49,69,47,67,46,65,44,63,43\",\n      abbr: \"PST\"\n  },\n  {\n      timezone: \"America/Whitehorse\",\n      country: \"CA\",\n      pin: \"62,41\",\n      offset: -8,\n      points: \"57,29,60,29,61,32,64,32,64,33,66,33,66,35,69,36,70,37,69,37,70,37,70,39,73,40,74,41,77,40,78,42,54,41,54,28,57,29\",\n      abbr: \"PST\"\n  },\n  {\n      timezone: \"America/Winnipeg\",\n      country: \"CA\",\n      pin: \"115,56\",\n      offset: -6,\n      points: \"122,58,119,57,118,56,118,57,109,57,109,50,108,49,108,48,108,42,118,42,118,43,121,43,122,45,121,46,124,45,126,46,125,47,125,50,126,50,127,51,126,52,125,52,125,53,124,53,125,55,125,56,123,57,122,58\",\n      abbr: \"CST\"\n  },\n  {\n      timezone: \"America/Yakutat\",\n      country: \"US\",\n      pin: \"56,42\",\n      offset: -9,\n      points: \"56,42,56,42,56,42\",\n      abbr: \"AKST\"\n  },\n  {\n      timezone: \"America/Yellowknife\",\n      country: \"CA\",\n      pin: \"91,38\",\n      offset: -7,\n      points: \"83,31,92,34,95,34,97,35,108,36,108,42,78,42,77,40,74,41,73,40,70,39,70,37,69,37,70,37,69,36,66,35,66,33,64,33,64,32,61,32,60,29,62,30,61,29,63,28,64,28,64,29,70,28,67,28,67,29,68,28,68,29,69,28,73,27,72,27,76,29,77,28,78,28,77,29,79,28,82,28,81,28,81,30,83,31\",\n      abbr: \"MST\"\n  },\n  {\n      timezone: \"America/Yellowknife\",\n      country: \"CA\",\n      pin: \"91,38\",\n      offset: -7,\n      points: \"88,17,90,18,88,18,89,18,87,19,86,19,86,18,83,20,79,19,84,18,88,17\",\n      abbr: \"MST\"\n  },\n  {\n      timezone: \"America/Yellowknife\",\n      country: \"CA\",\n      pin: \"91,38\",\n      offset: -7,\n      points: \"84,22,87,22,90,23,85,24,83,25,83,26,79,26,75,25,78,23,77,22,81,21,84,22\",\n      abbr: \"MST\"\n  },\n  {\n      timezone: \"America/Yellowknife\",\n      country: \"CA\",\n      pin: \"91,38\",\n      offset: -7,\n      points: \"91,19,97,20,97,21,93,22,91,21,96,20,87,20,90,20,87,20,91,20,88,20,91,19\",\n      abbr: \"MST\"\n  },\n  {\n      timezone: \"America/Yellowknife\",\n      country: \"CA\",\n      pin: \"91,38\",\n      offset: -7,\n      points: \"90,23,92,23,91,24,93,24,96,24,95,25,97,24,97,28,87,28,87,28,87,28,95,27,87,27,86,26,90,26,86,26,87,25,85,25,86,25,86,24,90,23\",\n      abbr: \"MST\"\n  },\n  {\n      timezone: \"Antarctica/Macquarie\",\n      country: \"AU\",\n      pin: \"471,201\",\n      offset: 11,\n      points: \"471,201,471,201,471,201\",\n      abbr: \"MIST\"\n  },\n  {\n      timezone: \"Arctic/Longyearbyen\",\n      country: \"SJ\",\n      pin: \"272,17\",\n      offset: 1,\n      points: \"275,14,275,14,275,15,275,14,280,16,276,16,276,17,274,18,274,19,273,19,272,18,273,18,269,17,273,17,270,17,274,17,269,17,269,17,274,16,273,16,273,16,271,16,271,15,270,16,271,16,268,16,267,16,268,16,266,15,267,15,266,15,267,15,266,15,265,15,269,14,267,14,269,15,269,15,270,14,273,15,272,14,275,14\",\n      abbr: \"CET\"\n  },\n  {\n      timezone: \"Arctic/Longyearbyen\",\n      country: \"SJ\",\n      pin: \"272,17\",\n      offset: 1,\n      points: \"285,14,288,14,283,15,275,14,277,14,276,13,278,14,277,13,281,14,282,13,282,13,282,14,285,14\",\n      abbr: \"CET\"\n  },\n  {\n      timezone: \"Asia/Aden\",\n      country: \"YE\",\n      pin: \"313,107\",\n      offset: 3,\n      points: \"313,107,310,107,309,104,310,101,314,102,314,103,318,100,322,99,324,102,323,102,322,103,313,107\",\n      abbr: \"AST\"\n  },\n  {\n      timezone: \"Asia/Almaty\",\n      country: \"KZ\",\n      pin: \"357,65\",\n      offset: 6,\n      points: \"348,66,345,68,343,68,342,66,344,65,345,64,344,63,343,61,337,60,339,58,339,58,340,57,342,57,345,55,344,54,344,52,342,52,342,51,342,51,342,51,342,49,346,48,348,48,349,50,352,50,352,51,357,49,356,50,358,51,361,55,362,54,363,55,366,54,368,56,371,56,371,57,369,58,369,60,365,59,364,62,365,62,363,62,361,63,362,63,362,65,361,66,359,65,355,66,353,65,352,65,352,66,350,66,348,66\",\n      abbr: \"ALMT\"\n  },\n  {\n      timezone: \"Asia/Amman\",\n      country: \"JO\",\n      pin: \"300,81\",\n      offset: 2,\n      points: \"302,82,303,83,302,83,300,84,299,84,299,80,301,80,304,79,305,80,301,81,302,82\",\n      abbr: \"EET\"\n  },\n  {\n      timezone: \"Asia/Anadyr\",\n      country: \"RU\",\n      pin: \"497,35\",\n      offset: 12,\n      points: \"10,32,14,33,13,34,12,34,12,34,10,34,11,34,11,35,9,35,11,36,10,36,6,35,6,34,2,34,2,33,2,33,0,33,1,34,0,35,0,29,7,31,8,33,9,33,7,32,10,32\",\n      abbr: \"ANAT\"\n  },\n  {\n      timezone: \"Asia/Anadyr\",\n      country: \"RU\",\n      pin: \"497,35\",\n      offset: 12,\n      points: \"497,35,493,35,498,36,499,38,499,39,496,38,492,39,491,38,487,39,484,37,486,37,484,36,473,35,471,34,471,33,470,33,471,32,469,31,470,30,476,30,476,29,475,28,476,28,483,28,486,30,488,29,486,28,487,28,495,28,500,29,500,35,498,35,497,35\",\n      abbr: \"ANAT\"\n  },\n  {\n      timezone: \"Asia/Aqtau\",\n      country: \"KZ\",\n      pin: \"320,63\",\n      offset: 5,\n      points: \"328,63,328,68,325,66,323,67,323,66,321,65,320,63,322,63,321,63,321,62,324,62,323,60,321,60,319,61,317,60,318,60,318,59,315,58,319,58,325,57,325,57,326,57,327,60,329,61,329,62,328,63\",\n      abbr: \"AQTT\"\n  },\n  {\n      timezone: \"Asia/Aqtobe\",\n      country: \"KZ\",\n      pin: \"329,55\",\n      offset: 5,\n      points: \"326,55,326,54,327,55,328,54,331,54,333,55,335,54,336,54,337,56,337,57,339,58,337,60,335,59,331,62,329,62,328,60,326,59,326,57,324,57,326,56,326,55\",\n      abbr: \"AQTT\"\n  },\n  {\n      timezone: \"Asia/Ashgabat\",\n      country: \"TM\",\n      pin: \"331,72\",\n      offset: 5,\n      points: \"340,74,340,75,337,76,335,75,335,74,334,74,332,73,329,72,325,73,325,71,324,71,324,70,325,70,323,69,324,68,323,67,325,66,327,68,329,68,329,67,331,66,331,66,331,66,331,66,333,66,334,68,336,68,337,70,343,72,342,73,341,73,340,74\",\n      abbr: \"TMT\"\n  },\n  {\n      timezone: \"Asia/Baghdad\",\n      country: \"IQ\",\n      pin: \"312,79\",\n      offset: 3,\n      points: \"315,83,315,85,312,84,308,82,304,80,304,79,307,77,307,74,309,73,312,73,313,75,314,75,313,78,314,79,316,80,316,81,316,82,317,83,315,83\",\n      abbr: \"AST\"\n  },\n  {\n      timezone: \"Asia/Bahrain\",\n      country: \"BH\",\n      pin: \"320,88\",\n      offset: 3,\n      points: \"320,89,320,89,320,89\",\n      abbr: \"AST\"\n  },\n  {\n      timezone: \"Asia/Bangkok\",\n      country: \"TH\",\n      pin: \"390,106\",\n      offset: 7,\n      points: \"391,116,392,117,390,117,390,116,389,116,389,116,386,113,387,110,388,109,388,106,386,104,387,102,385,99,386,99,386,97,387,98,389,97,390,97,390,98,391,98,390,101,392,100,393,100,393,99,394,100,397,103,396,105,394,105,392,106,393,109,391,107,390,107,390,106,389,107,388,112,389,112,390,115,391,116\",\n      abbr: \"ICT\"\n  },\n  {\n      timezone: \"Asia/Baku\",\n      country: \"AZ\",\n      pin: \"319,69\",\n      offset: 4,\n      points: \"314,67,316,68,317,67,320,69,319,69,318,72,317,71,317,70,317,70,315,71,315,70,313,69,314,69,313,68,315,68,314,67\",\n      abbr: \"AZT\"\n  },\n  {\n      timezone: \"Asia/Shanghai\",\n      country: \"CN\",\n      pin: \"250,125\",\n      offset: 8,\n      points: \"403,95,402,95,401,95,401,95,399,95,398,94,398,93,396,93,394,94,394,93,393,94,392,93,391,94,391,96,391,96,390,95,389,95,389,94,388,94,388,93,387,93,387,91,385,92,386,90,387,89,387,87,386,86,387,86,387,85,388,84,387,81,385,80,386,79,385,78,387,78,388,77,387,77,388,77,387,75,388,73,388,72,389,72,385,71,386,70,384,70,385,68,386,68,385,66,390,66,396,67,399,66,403,66,404,65,407,67,409,66,408,67,408,69,406,69,404,70,403,72,404,73,403,77,404,79,402,79,403,80,402,80,403,82,401,83,401,84,402,85,402,87,401,87,402,87,402,88,402,89,405,89,404,90,405,90,406,91,405,93,406,92,407,95,405,95,405,94,405,94,404,93,403,95\",\n      abbr: \"CST\"\n  },\n  {\n      timezone: \"Asia/Beirut\",\n      country: \"LB\",\n      pin: \"299,78\",\n      offset: 2,\n      points: \"300,79,299,79,300,77,301,77,301,77,300,79\",\n      abbr: \"EET\"\n  },\n  {\n      timezone: \"Asia/Bishkek\",\n      country: \"KG\",\n      pin: \"354,65\",\n      offset: 6,\n      points: \"354,69,353,69,353,70,350,71,346,70,352,68,350,67,349,68,347,67,349,66,348,66,349,66,352,66,352,65,353,65,355,66,359,65,361,66,359,68,357,68,356,69,354,69\",\n      abbr: \"KGT\"\n  },\n  {\n      timezone: \"Asia/Brunei\",\n      country: \"BN\",\n      pin: \"410,118\",\n      offset: 8,\n      points: \"410,118,410,119,410,118\",\n      abbr: \"BNT\"\n  },\n  {\n      timezone: \"Asia/Choibalsan\",\n      country: \"MN\",\n      pin: \"409,58\",\n      offset: 8,\n      points: \"412,61,411,62,409,62,408,63,406,62,405,60,405,59,407,59,406,56,409,55,412,56,410,58,411,59,415,58,416,59,416,61,415,60,412,61\",\n      abbr: \"CHOT\"\n  },\n  {\n      timezone: \"Asia/Colombo\",\n      country: \"LK\",\n      pin: \"361,115\",\n      offset: 5.5,\n      points: \"363,116,362,117,361,116,361,114,361,111,363,113,364,115,363,116\",\n      abbr: \"IST\"\n  },\n  {\n      timezone: \"Asia/Damascus\",\n      country: \"SY\",\n      pin: \"300,78\",\n      offset: 2,\n      points: \"302,80,301,80,299,80,299,79,301,77,300,76,301,75,301,74,304,74,309,73,307,75,307,77,302,80\",\n      abbr: \"EET\"\n  },\n  {\n      timezone: \"Asia/Dhaka\",\n      country: \"BD\",\n      pin: \"376,92\",\n      offset: 6,\n      points: \"375,94,375,94,375,95,374,95,373,91,372,91,374,90,372,89,373,88,374,89,375,89,375,90,378,90,377,92,377,93,378,92,379,95,378,95,378,96,378,94,378,94,377,94,377,93,376,93,376,92,375,92,376,93,374,92,375,92,376,94,375,94\",\n      abbr: \"BDT\"\n  },\n  {\n      timezone: \"Asia/Dili\",\n      country: \"TL\",\n      pin: \"424,137\",\n      offset: 9,\n      points: \"424,137,427,137,424,138,424,137\",\n      abbr: \"TLT\"\n  },\n  {\n      timezone: \"Asia/Dubai\",\n      country: \"AE\",\n      pin: \"327,90\",\n      offset: 4,\n      points: \"328,91,328,92,327,92,327,94,323,93,322,92,325,91,328,89,328,90,328,91\",\n      abbr: \"GST\"\n  },\n  {\n      timezone: \"Asia/Dushanbe\",\n      country: \"TJ\",\n      pin: \"346,71\",\n      offset: 5,\n      points: \"346,73,344,73,345,72,344,70,345,70,346,69,345,69,348,68,348,68,348,69,349,69,347,69,346,70,349,70,350,71,352,70,352,71,354,72,354,73,352,73,350,74,349,72,349,72,346,73\",\n      abbr: \"TJT\"\n  },\n  {\n      timezone: \"Asia/Gaza\",\n      country: \"PS\",\n      pin: \"298,81\",\n      offset: 2,\n      points: \"298,81,298,82,298,81\",\n      abbr: \"EET\"\n  },\n  {\n      timezone: \"Asia/Shanghai\",\n      country: \"CN\",\n      pin: \"250,125\",\n      offset: 8,\n      points: \"424,68,423,65,423,66,421,65,421,63,420,64,420,62,419,61,420,61,421,60,422,60,420,59,423,58,423,58,425,54,424,53,421,54,420,53,423,51,425,52,427,56,431,57,432,59,437,58,437,59,435,62,433,62,432,63,432,65,431,66,431,66,430,65,430,66,428,67,428,68,426,67,424,68\",\n      abbr: \"CST\"\n  },\n  {\n      timezone: \"Asia/Hebron\",\n      country: \"PS\",\n      pin: \"299,81\",\n      offset: 2,\n      points: \"299,81,299,80,299,81,298,81,299,81\",\n      abbr: \"EET\"\n  },\n  {\n      timezone: \"Asia/Saigon\",\n      country: \"VN\",\n      pin: \"398,110\",\n      offset: 7,\n      points: \"397,112,395,113,396,111,395,111,396,110,397,110,397,109,399,108,400,104,396,99,394,98,396,97,395,97,395,96,393,96,393,95,392,94,392,93,394,94,396,93,398,93,398,94,400,95,398,96,398,96,397,99,401,104,402,107,401,109,398,110,398,112,397,112\",\n      abbr: \"ICT\"\n  },\n  {\n      timezone: \"Asia/Hong_Kong\",\n      country: \"HK\",\n      pin: \"409,94\",\n      offset: 8,\n      points: \"409,94,408,94,409,94\",\n      abbr: \"HKT\"\n  },\n  {\n      timezone: \"Asia/Hovd\",\n      country: \"MN\",\n      pin: \"377,58\",\n      offset: 7,\n      points: \"387,63,386,64,386,66,384,66,383,63,376,62,376,60,375,59,372,58,372,57,378,54,381,55,381,56,385,56,385,56,386,57,388,57,388,58,386,58,387,59,385,60,387,61,387,63\",\n      abbr: \"HOVT\"\n  },\n  {\n      timezone: \"Asia/Irkutsk\",\n      country: \"RU\",\n      pin: \"395,52\",\n      offset: 9,\n      points: \"411,46,410,46,411,48,412,48,412,49,408,51,409,51,408,52,406,52,404,53,401,53,400,55,401,55,400,56,396,55,393,55,392,55,392,54,387,52,388,51,384,50,383,50,384,49,384,48,386,47,385,46,386,45,389,44,390,45,390,44,392,43,392,43,395,44,396,43,396,42,397,42,396,41,395,41,398,39,398,38,397,37,398,37,398,36,400,36,401,36,400,37,402,37,402,38,402,38,403,38,402,39,402,40,404,40,402,42,402,43,406,42,406,43,411,41,413,42,413,42,415,43,415,44,413,44,413,45,414,45,413,46,411,46\",\n      abbr: \"IRKT\"\n  },\n  {\n      timezone: \"Asia/Jakarta\",\n      country: \"ID\",\n      pin: \"398,134\",\n      offset: 7,\n      points: \"406,135,407,136,409,136,409,137,400,136,396,134,397,133,400,134,401,134,403,135,404,134,406,135\",\n      abbr: \"WIB\"\n  },\n  {\n      timezone: \"Asia/Jakarta\",\n      country: \"ID\",\n      pin: \"398,134\",\n      offset: 7,\n      points: \"397,131,397,133,396,133,396,133,395,133,395,133,392,131,389,125,388,125,387,123,383,119,382,117,385,118,386,119,393,124,393,125,394,125,394,126,395,126,395,129,397,128,397,129,397,131\",\n      abbr: \"WIB\"\n  },\n  {\n      timezone: \"Asia/Jayapura\",\n      country: \"ID\",\n      pin: \"445,129\",\n      offset: 9,\n      points: \"438,131,437,131,437,130,436,130,436,129,435,130,435,131,434,130,433,129,435,128,436,129,436,128,434,128,433,127,432,127,432,126,434,125,436,126,436,128,438,130,441,127,446,129,446,138,444,136,445,136,443,136,443,136,443,135,444,135,442,135,443,135,441,132,438,131\",\n      abbr: \"WIT\"\n  },\n  {\n      timezone: \"Asia/Kabul\",\n      country: \"AF\",\n      pin: \"346,77\",\n      offset: 4.5,\n      points: \"338,84,335,84,336,82,335,81,334,79,335,78,334,78,335,76,337,76,341,73,344,74,346,73,349,72,349,72,350,74,352,73,354,73,349,75,350,76,349,78,347,78,348,79,347,79,346,81,345,81,344,81,343,82,342,84,338,84\",\n      abbr: \"AFT\"\n  },\n  {\n      timezone: \"Asia/Jerusalem\",\n      country: \"IL\",\n      pin: \"299,81\",\n      offset: 2,\n      points: \"298,81,299,79,300,79,299,80,299,80,299,81,298,81,299,81,298,84,298,82,298,81\",\n      abbr: \"IST\"\n  },\n  {\n      timezone: \"Asia/Kamchatka\",\n      country: \"RU\",\n      pin: \"470,51\",\n      offset: 12,\n      points: \"476,45,477,47,475,47,475,48,475,49,472,50,472,51,470,51,470,52,468,54,466,47,468,45,468,45,471,44,475,41,477,41,477,40,478,40,478,39,480,38,477,38,476,39,477,39,476,39,475,39,476,38,475,37,476,37,476,36,477,36,477,35,484,36,486,37,484,37,486,38,491,38,492,39,489,40,487,42,484,41,481,42,481,41,479,42,477,42,477,43,475,44,477,45,476,45\",\n      abbr: \"PETT\"\n  },\n  {\n      timezone: \"Asia/Karachi\",\n      country: \"PK\",\n      pin: \"343,90\",\n      offset: 5,\n      points: \"348,86,347,88,348,89,349,91,348,91,346,91,344,92,344,91,343,91,342,89,336,90,336,89,338,88,338,87,337,87,337,86,336,85,335,84,339,84,342,84,343,82,346,81,347,79,348,79,347,78,349,78,349,77,350,76,349,75,350,74,354,74,355,74,356,75,358,76,355,77,353,77,353,79,355,80,354,81,354,82,350,86,348,86\",\n      abbr: \"PKT\"\n  },\n  {\n      timezone: \"Asia/Kashgar\",\n      country: \"\",\n      pin: \"250,125\",\n      offset: 6,\n      points: \"361,83,359,82,359,80,360,80,360,79,359,78,360,77,359,77,358,76,356,75,355,74,354,74,354,73,354,72,352,71,352,70,354,69,356,69,357,68,358,68,362,67,361,66,362,65,362,63,361,63,363,62,365,63,363,63,368,65,365,64,366,65,365,65,365,67,364,68,364,70,365,70,364,74,365,75,364,76,365,76,364,77,366,80,365,81,365,81,366,81,366,82,365,82,363,83,361,83\",\n      abbr: \"XJT\"\n  },\n  {\n      timezone: \"Asia/Katmandu\",\n      country: \"NP\",\n      pin: \"368,87\",\n      offset: 5.8,\n      points: \"368,86,372,86,372,88,369,88,367,87,366,87,361,85,362,84,363,83,368,85,368,86\",\n      abbr: \"NPT\"\n  },\n  {\n      timezone: \"Asia/Calcutta\",\n      country: \"IN\",\n      pin: \"373,94\",\n      offset: 5.5,\n      points: \"362,106,361,109,361,111,360,111,360,112,360,112,359,112,358,113,357,114,356,113,352,103,351,97,351,96,351,95,352,95,351,95,351,94,351,94,350,96,348,96,346,94,347,94,348,93,346,93,345,92,346,92,345,92,346,91,349,91,347,87,348,86,350,86,354,82,354,81,355,80,353,79,353,77,355,77,358,76,359,77,360,77,359,78,360,79,360,80,359,80,359,82,363,83,361,85,369,88,372,88,372,86,373,86,374,88,378,88,378,87,377,86,379,86,381,84,384,84,384,85,384,85,384,86,385,86,385,87,385,87,384,87,382,88,381,92,380,92,379,95,378,92,377,93,377,92,378,90,375,90,375,89,374,89,373,88,372,89,374,90,372,91,373,91,374,95,373,94,373,95,372,94,371,95,371,96,370,97,368,98,364,101,364,102,362,103,362,106\",\n      abbr: \"IST\"\n  },\n  {\n      timezone: \"Asia/Krasnoyarsk\",\n      country: \"RU\",\n      pin: \"379,47\",\n      offset: 8,\n      points: \"396,16,388,17,392,15,393,15,392,16,394,15,396,16,396,16\",\n      abbr: \"KRAT\"\n  },\n  {\n      timezone: \"Asia/Krasnoyarsk\",\n      country: \"RU\",\n      pin: \"379,47\",\n      offset: 8,\n      points: \"385,14,386,14,384,14,389,14,389,15,388,15,389,15,382,15,380,14,379,14,385,14\",\n      abbr: \"KRAT\"\n  },\n  {\n      timezone: \"Asia/Krasnoyarsk\",\n      country: \"RU\",\n      pin: \"379,47\",\n      offset: 8,\n      points: \"383,12,386,13,384,13,385,14,380,14,377,14,383,12\",\n      abbr: \"KRAT\"\n  },\n  {\n      timezone: \"Asia/Krasnoyarsk\",\n      country: \"RU\",\n      pin: \"379,47\",\n      offset: 8,\n      points: \"384,51,388,51,386,54,386,55,385,56,381,56,381,55,378,54,374,56,374,55,375,55,374,54,372,53,374,52,373,51,374,50,373,49,373,49,373,48,374,47,373,46,374,45,372,44,373,43,373,43,371,42,367,42,368,41,367,40,369,40,367,39,369,37,368,37,369,36,369,35,367,35,367,34,366,34,366,32,364,32,364,31,364,31,365,30,365,29,360,28,362,27,360,26,362,25,359,24,366,25,364,26,364,27,364,27,364,27,364,28,367,28,365,27,366,27,366,26,366,26,362,24,362,24,362,23,362,23,362,23,371,22,371,22,369,22,371,22,369,21,371,21,372,21,371,21,374,20,381,20,379,19,380,19,388,19,387,19,390,19,391,18,395,17,398,18,395,18,399,18,398,19,404,18,406,19,405,19,408,20,408,20,406,20,408,20,407,21,400,23,397,23,399,23,396,24,404,23,404,23,403,23,404,24,404,24,406,25,406,26,407,26,403,27,402,28,397,29,398,29,398,31,397,32,397,32,398,34,399,34,397,35,400,36,398,36,398,37,397,37,398,38,398,39,396,40,395,41,397,41,397,42,396,42,396,43,396,43,393,43,390,45,390,45,389,44,386,45,385,46,386,47,384,48,384,49,383,50,384,51\",\n      abbr: \"KRAT\"\n  },\n  {\n      timezone: \"Asia/Kuala_Lumpur\",\n      country: \"MY\",\n      pin: \"391,121\",\n      offset: 8,\n      points: \"394,121,395,123,394,123,391,121,390,119,389,116,390,116,390,117,392,116,393,117,394,121\",\n      abbr: \"MYT\"\n  },\n  {\n      timezone: \"Asia/Kuching\",\n      country: \"MY\",\n      pin: \"403,123\",\n      offset: 8,\n      points: \"410,118,412,115,412,116,413,115,413,116,414,117,416,118,414,118,415,119,411,119,409,123,406,123,405,124,404,124,402,123,402,122,405,123,404,123,405,121,407,121,408,119,409,119,410,118,410,119,410,118\",\n      abbr: \"MYT\"\n  },\n  {\n      timezone: \"Asia/Kuwait\",\n      country: \"KW\",\n      pin: \"317,84\",\n      offset: 3,\n      points: \"317,83,317,83,317,83\",\n      abbr: \"AST\"\n  },\n  {\n      timezone: \"Asia/Macau\",\n      country: \"MO\",\n      pin: \"408,94\",\n      offset: 8,\n      points: \"408,94,408,94,408,94\",\n      abbr: \"CST\"\n  },\n  {\n      timezone: \"Asia/Magadan\",\n      country: \"RU\",\n      pin: \"459,42\",\n      offset: 12,\n      points: \"464,42,464,42,466,43,460,43,460,43,462,43,458,42,457,43,455,43,454,43,454,42,452,41,454,40,453,39,450,39,445,38,444,37,445,36,444,35,445,34,444,33,445,32,443,32,446,31,446,30,447,30,447,29,448,29,447,28,448,28,446,28,450,25,457,25,458,25,457,25,461,27,470,26,472,27,472,28,474,28,474,29,476,28,476,29,476,30,470,30,469,31,471,32,470,33,471,33,471,34,477,35,477,36,476,36,476,37,475,37,476,38,475,39,476,39,472,41,473,40,472,40,473,39,469,39,464,42\",\n      abbr: \"MAGT\"\n  },\n  {\n      timezone: \"Asia/Makassar\",\n      country: \"ID\",\n      pin: \"416,132\",\n      offset: 8,\n      points: \"412,128,411,130,409,131,409,129,411,127,410,125,410,125,410,124,408,124,410,122,411,119,413,119,414,120,413,120,413,120,413,120,414,122,414,122,415,124,414,123,413,126,411,127,412,128\",\n      abbr: \"WITA\"\n  },\n  {\n      timezone: \"Asia/Makassar\",\n      country: \"ID\",\n      pin: \"416,132\",\n      offset: 8,\n      points: \"420,129,420,130,421,131,419,132,418,130,418,129,417,129,417,133,416,133,416,131,416,130,415,130,415,129,416,127,416,126,417,124,418,123,422,124,424,123,423,124,417,124,417,125,417,126,418,127,419,126,421,126,421,126,418,128,420,129\",\n      abbr: \"WITA\"\n  },\n  {\n      timezone: \"Asia/Manila\",\n      country: \"PH\",\n      pin: \"418,105\",\n      offset: 8,\n      points: \"423,117,422,116,423,115,422,114,421,115,420,114,420,115,419,115,420,114,421,113,422,113,422,114,423,113,423,112,424,112,424,111,425,112,426,115,425,116,425,115,424,117,424,117,423,117\",\n      abbr: \"PHT\"\n  },\n  {\n      timezone: \"Asia/Manila\",\n      country: \"PH\",\n      pin: \"418,105\",\n      offset: 8,\n      points: \"421,105,421,106,421,105,422,106,422,106,422,107,422,108,420,106,420,107,419,106,418,106,418,105,417,104,417,105,417,104,416,102,417,103,418,99,420,99,420,102,419,104,419,106,421,105\",\n      abbr: \"PHT\"\n  },\n  {\n      timezone: \"Asia/Muscat\",\n      country: \"OM\",\n      pin: \"331,92\",\n      offset: 4,\n      points: \"328,100,327,100,326,101,324,102,322,99,326,97,327,94,327,93,327,92,328,92,328,90,329,92,332,92,333,94,331,97,330,97,330,99,329,99,328,100\",\n      abbr: \"GST\"\n  },\n  {\n      timezone: \"Asia/Nicosia\",\n      country: \"CY\",\n      pin: \"296,76\",\n      offset: 2,\n      points: \"296,77,295,76,298,75,297,76,297,76,296,77\",\n      abbr: \"EET\"\n  },\n  {\n      timezone: \"Asia/Novokuznetsk\",\n      country: \"RU\",\n      pin: \"371,50\",\n      offset: 7,\n      points: \"373,46,374,47,373,48,373,49,373,49,374,50,374,50,373,51,374,52,373,53,371,52,370,51,371,51,368,49,367,47,373,46\",\n      abbr: \"KRAT\"\n  },\n  {\n      timezone: \"Asia/Novosibirsk\",\n      country: \"RU\",\n      pin: \"365,49\",\n      offset: 7,\n      points: \"367,47,368,49,367,50,366,50,365,51,362,49,358,51,356,50,357,49,355,50,355,49,354,48,356,47,355,47,356,46,354,44,356,42,357,40,364,41,366,40,368,41,368,42,371,42,373,43,372,44,374,45,373,46,367,47\",\n      abbr: \"NOVT\"\n  },\n  {\n      timezone: \"Asia/Omsk\",\n      country: \"RU\",\n      pin: \"352,49\",\n      offset: 7,\n      points: \"354,44,356,46,355,47,356,47,354,48,355,49,355,50,352,51,352,50,349,50,349,48,348,48,348,47,350,46,348,45,348,44,349,44,351,44,354,44\",\n      abbr: \"OMST\"\n  },\n  {\n      timezone: \"Asia/Omsk\",\n      country: \"RU\",\n      pin: \"352,49\",\n      offset: 7,\n      points: \"373,53,372,53,374,54,375,55,374,55,375,56,371,57,371,56,368,56,366,54,363,55,362,54,361,55,358,51,362,49,365,51,366,50,368,49,371,51,370,51,371,52,373,53\",\n      abbr: \"OMST\"\n  },\n  {\n      timezone: \"Asia/Phnom_Penh\",\n      country: \"KH\",\n      pin: \"396,109\",\n      offset: 7,\n      points: \"397,109,397,110,394,110,394,109,393,110,392,106,394,105,397,106,397,105,399,105,399,108,397,109\",\n      abbr: \"ICT\"\n  },\n  {\n      timezone: \"Asia/Pontianak\",\n      country: \"ID\",\n      pin: \"402,125\",\n      offset: 7,\n      points: \"411,127,409,130,407,129,405,130,405,129,403,129,403,127,402,126,401,123,402,122,404,124,405,124,406,123,408,123,408,124,410,124,410,125,410,125,411,127\",\n      abbr: \"WIB\"\n  },\n  {\n      timezone: \"Asia/Pyongyang\",\n      country: \"KP\",\n      pin: \"425,71\",\n      offset: 9,\n      points: \"426,72,424,73,423,72,424,71,424,71,424,70,423,70,423,69,425,68,426,67,428,68,428,67,429,67,431,65,431,66,430,67,430,68,427,70,428,72,426,72\",\n      abbr: \"KST\"\n  },\n  {\n      timezone: \"Asia/Qatar\",\n      country: \"QA\",\n      pin: \"322,90\",\n      offset: 3,\n      points: \"322,90,321,91,321,90,321,89,322,90\",\n      abbr: \"AST\"\n  },\n  {\n      timezone: \"Asia/Qyzylorda\",\n      country: \"KZ\",\n      pin: \"341,63\",\n      offset: 6,\n      points: \"344,52,344,54,345,55,342,57,340,57,339,58,337,57,337,56,336,54,333,53,335,52,334,52,335,51,336,51,335,51,336,51,335,51,335,50,342,49,342,51,342,52,344,52\",\n      abbr: \"QYZT\"\n  },\n  {\n      timezone: \"Asia/Qyzylorda\",\n      country: \"KZ\",\n      pin: \"341,63\",\n      offset: 6,\n      points: \"342,65,340,64,336,65,334,63,334,61,335,60,334,60,333,61,334,61,333,61,333,61,331,61,335,59,341,61,343,61,344,63,345,64,344,65,342,66,342,65\",\n      abbr: \"QYZT\"\n  },\n  {\n      timezone: \"Asia/Rangoon\",\n      country: \"MM\",\n      pin: \"384,102\",\n      offset: 6.5,\n      points: \"386,104,388,106,388,109,387,111,387,107,386,106,386,102,385,102,384,101,384,102,383,102,383,103,382,102,382,103,382,102,381,103,382,102,381,103,381,101,381,98,380,99,380,98,381,98,380,98,381,98,380,97,379,96,379,97,378,96,379,94,380,92,381,92,382,88,384,87,385,87,385,87,386,85,387,87,387,88,387,89,385,91,385,92,387,91,387,93,388,93,388,94,389,94,389,95,391,95,389,97,386,97,386,99,385,99,387,102,386,104\",\n      abbr: \"MMT\"\n  },\n  {\n      timezone: \"Asia/Riyadh\",\n      country: \"SA\",\n      pin: \"315,91\",\n      offset: 3,\n      points: \"310,101,309,102,307,98,304,96,303,92,302,91,299,86,298,86,299,84,300,84,303,83,301,81,304,80,306,81,312,84,317,85,318,87,320,88,319,89,321,91,322,91,321,91,323,93,327,93,327,94,326,97,318,100,314,103,314,102,312,101,310,101,310,101\",\n      abbr: \"AST\"\n  },\n  {\n      timezone: \"Asia/Sakhalin\",\n      country: \"RU\",\n      pin: \"448,60\",\n      offset: 11,\n      points: \"450,56,451,57,450,57,449,57,448,59,449,61,449,61,448,60,447,61,447,57,448,54,447,52,447,51,448,50,448,50,449,50,449,52,449,53,450,56\",\n      abbr: \"SAKT\"\n  },\n  {\n      timezone: \"Asia/Samarkand\",\n      country: \"UZ\",\n      pin: \"343,70\",\n      offset: 5,\n      points: \"345,71,345,72,344,73,342,73,343,72,337,70,336,68,334,68,333,66,331,66,331,66,331,66,331,66,329,67,329,68,328,68,328,63,331,62,331,63,333,64,334,63,336,65,340,64,342,65,342,67,342,67,343,68,343,69,344,70,344,71,345,71\",\n      abbr: \"UZT\"\n  },\n  {\n      timezone: \"Asia/Seoul\",\n      country: \"KR\",\n      pin: \"426,73\",\n      offset: 9,\n      points: \"429,76,427,76,427,77,427,77,426,77,425,77,426,75,425,74,426,74,426,73,426,72,428,71,429,73,430,75,429,76\",\n      abbr: \"KST\"\n  },\n  {\n      timezone: \"Asia/Shanghai\",\n      country: \"CN\",\n      pin: \"419,82\",\n      offset: 8,\n      points: \"401,84,401,83,403,82,402,80,403,80,402,79,404,79,403,77,404,73,403,72,404,70,406,69,408,69,408,67,409,66,407,67,406,66,404,65,406,64,405,63,405,63,406,62,408,63,414,60,416,61,416,59,415,58,411,59,410,58,412,56,414,56,416,55,415,55,418,53,417,52,418,51,423,51,420,53,421,54,424,53,425,54,423,58,423,58,420,59,422,60,421,60,420,61,419,61,420,62,420,64,421,63,421,65,423,66,423,65,425,68,418,71,419,70,418,70,419,70,420,69,418,68,415,71,414,71,413,71,414,72,415,72,415,73,416,73,418,72,420,73,420,74,417,75,416,76,417,77,418,80,419,81,417,81,419,82,417,83,420,83,419,84,419,84,419,85,419,86,418,86,417,88,416,88,417,88,416,90,416,89,415,91,414,91,413,92,412,92,412,93,409,93,409,94,408,94,408,93,408,94,407,94,406,93,406,92,405,93,406,91,405,90,404,90,405,89,402,89,402,88,402,87,401,87,402,87,402,85,401,84\",\n      abbr: \"CST\"\n  },\n  {\n      timezone: \"Asia/Singapore\",\n      country: \"SG\",\n      pin: \"394,123\",\n      offset: 8,\n      points: \"394,123,394,123,394,123\",\n      abbr: \"SGT\"\n  },\n  {\n      timezone: \"Asia/Taipei\",\n      country: \"TW\",\n      pin: \"419,90\",\n      offset: 8,\n      points: \"417,94,417,92,418,91,419,90,419,90,418,95,417,94\",\n      abbr: \"CST\"\n  },\n  {\n      timezone: \"Asia/Tashkent\",\n      country: \"UZ\",\n      pin: \"346,68\",\n      offset: 5,\n      points: \"345,69,346,69,345,70,344,70,343,68,345,68,349,66,347,67,349,68,350,67,352,68,350,69,348,69,348,68,345,69\",\n      abbr: \"UZT\"\n  },\n  {\n      timezone: \"Asia/Tbilisi\",\n      country: \"GE\",\n      pin: \"312,67\",\n      offset: 4,\n      points: \"309,67,308,67,308,66,306,64,310,65,311,66,313,66,315,68,310,68,309,67\",\n      abbr: \"GET\"\n  },\n  {\n      timezone: \"Asia/Tehran\",\n      country: \"IR\",\n      pin: \"321,75\",\n      offset: 3.5,\n      points: \"335,81,336,82,335,84,336,85,337,86,337,87,338,87,338,88,336,89,335,90,330,89,329,87,326,88,325,88,321,86,320,83,319,83,318,83,318,83,317,83,316,82,316,81,316,80,314,79,313,77,314,75,313,75,311,72,312,72,311,70,312,70,314,71,317,70,317,70,317,71,318,72,318,73,322,74,325,74,325,73,328,72,332,73,334,74,335,74,335,77,334,78,335,78,334,79,335,81\",\n      abbr: \"IRST\"\n  },\n  {\n      timezone: \"Asia/Thimphu\",\n      country: \"BT\",\n      pin: \"375,87\",\n      offset: 6,\n      points: \"378,87,378,88,375,88,373,87,375,86,377,86,378,87\",\n      abbr: \"BTT\"\n  },\n  {\n      timezone: \"Asia/Tokyo\",\n      country: \"JP\",\n      pin: \"444,75\",\n      offset: 9,\n      points: \"448,63,451,64,452,63,452,65,453,65,450,65,449,67,447,66,445,66,445,66,446,67,445,67,444,66,445,65,445,65,446,65,447,62,448,63\",\n      abbr: \"JST\"\n  },\n  {\n      timezone: \"Asia/Tokyo\",\n      country: \"JP\",\n      pin: \"444,75\",\n      offset: 9,\n      points: \"432,78,433,78,433,79,433,79,432,81,431,82,432,81,431,82,431,81,431,79,431,79,431,80,430,80,430,79,431,79,430,79,432,78\",\n      abbr: \"JST\"\n  },\n  {\n      timezone: \"Asia/Tokyo\",\n      country: \"JP\",\n      pin: \"444,75\",\n      offset: 9,\n      points: \"437,76,439,75,440,73,441,73,440,73,441,74,442,73,444,71,444,69,445,68,446,68,446,67,446,67,447,70,447,72,446,72,445,75,446,75,445,76,444,76,445,76,444,75,443,77,443,76,442,77,440,77,441,77,440,76,440,77,439,79,438,78,438,77,434,77,434,78,432,78,432,77,434,76,437,76\",\n      abbr: \"JST\"\n  },\n  {\n      timezone: \"Asia/Ulaanbaatar\",\n      country: \"MN\",\n      pin: \"398,58\",\n      offset: 8,\n      points: \"396,67,390,66,386,66,386,64,387,62,385,60,387,59,386,58,388,58,388,57,385,56,386,55,386,54,387,53,392,54,392,55,394,55,398,55,401,56,403,57,406,56,407,59,405,59,405,60,406,62,405,63,406,64,403,66,399,66,396,67\",\n      abbr: \"ULAT\"\n  },\n  {\n      timezone: \"Asia/Urumqi\",\n      country: \"CN\",\n      pin: \"372,64\",\n      offset: 6,\n      points: \"386,86,384,86,384,85,383,84,381,84,378,86,375,86,374,87,373,86,369,86,364,83,364,83,365,82,365,83,366,82,365,81,365,81,366,80,364,77,365,76,364,76,365,75,364,74,365,70,364,70,364,68,365,67,365,65,366,65,365,64,368,65,363,63,365,63,364,62,365,59,369,60,369,58,372,57,372,58,375,59,376,60,376,62,383,63,384,66,385,66,386,68,385,68,384,70,386,70,385,71,389,72,388,72,388,73,387,75,388,77,387,77,388,77,387,78,385,78,386,79,385,80,386,80,387,82,388,84,387,85,387,86,386,86\",\n      abbr: \"XJT\"\n  },\n  {\n      timezone: \"Asia/Vientiane\",\n      country: \"LA\",\n      pin: \"393,100\",\n      offset: 7,\n      points: \"398,105,397,106,396,105,397,103,394,100,393,99,393,100,392,100,390,101,391,98,390,98,390,97,389,97,390,95,391,96,391,94,393,95,393,96,395,96,395,97,396,97,394,98,396,99,398,102,399,103,399,105,398,105\",\n      abbr: \"ICT\"\n  },\n  {\n      timezone: \"Asia/Vladivostok\",\n      country: \"RU\",\n      pin: \"433,65\",\n      offset: 11,\n      points: \"433,63,433,62,435,62,437,59,437,58,432,59,431,57,432,57,433,56,432,54,433,53,435,52,435,52,437,52,437,51,437,51,433,51,433,51,433,50,431,50,435,48,432,48,432,47,433,46,432,46,433,45,433,44,433,44,434,44,433,43,433,42,435,40,435,40,436,39,437,40,439,39,433,37,434,36,434,35,433,34,431,33,435,31,435,30,434,29,435,28,435,28,435,27,433,27,433,26,435,25,435,25,434,25,436,26,444,26,444,25,445,25,443,25,446,24,446,24,455,25,449,25,446,28,448,28,447,28,448,29,447,29,447,30,446,30,446,31,443,32,445,32,444,33,445,34,444,35,445,35,445,36,445,37,444,37,444,38,448,39,453,39,454,40,452,41,454,42,454,42,448,43,438,49,440,49,440,50,441,50,441,51,442,50,442,51,443,50,444,50,446,51,445,51,447,53,445,55,445,57,441,61,436,65,435,66,433,65,431,66,431,66,432,65,432,63,433,63\",\n      abbr: \"VLAT\"\n  },\n  {\n      timezone: \"Asia/Vladivostok\",\n      country: \"RU\",\n      pin: \"433,65\",\n      offset: 11,\n      points: \"443,19,445,20,447,19,446,19,452,20,449,21,444,21,443,21,440,20,441,20,443,19\",\n      abbr: \"VLAT\"\n  },\n  {\n      timezone: \"Asia/Yakutsk\",\n      country: \"RU\",\n      pin: \"430,39\",\n      offset: 10,\n      points: \"432,48,435,48,431,50,433,50,433,51,437,51,437,51,437,52,435,52,435,52,433,53,431,55,433,55,433,56,432,57,428,56,425,52,422,51,418,51,417,52,418,52,418,53,416,55,416,55,414,56,409,55,404,57,400,56,400,55,401,55,400,55,401,53,404,53,406,52,408,52,409,51,408,51,412,49,412,49,411,48,410,46,413,46,414,45,413,45,413,44,415,44,415,42,413,42,413,42,411,41,406,43,406,42,403,43,402,43,404,40,402,40,402,39,403,38,402,38,402,38,402,37,400,37,401,36,401,36,397,35,399,34,398,34,397,32,397,32,398,31,398,29,397,29,402,28,403,27,406,26,406,26,406,25,404,24,404,24,404,24,403,23,405,22,407,22,408,23,411,23,421,24,422,23,421,23,423,22,430,24,429,24,430,24,429,24,430,25,428,25,430,25,429,26,432,27,434,26,433,27,435,27,435,28,435,28,434,29,435,30,435,31,431,33,433,34,434,35,434,36,433,37,439,39,437,40,436,39,435,40,435,40,433,42,433,43,434,44,433,44,433,44,433,45,432,46,433,46,432,47,432,48\",\n      abbr: \"YAKT\"\n  },\n  {\n      timezone: \"Asia/Yerevan\",\n      country: \"AM\",\n      pin: \"312,69\",\n      offset: 4,\n      points: \"313,68,314,69,313,69,315,70,315,71,314,71,314,70,311,69,310,68,313,68\",\n      abbr: \"AMT\"\n  },\n  {\n      timezone: \"Atlantic/Azores\",\n      country: \"PT\",\n      pin: \"214,73\",\n      offset: -1,\n      points: \"202,79,220,65\",\n      abbr: \"AZOT\"\n  },\n  {\n      timezone: \"Atlantic/Bermuda\",\n      country: \"BM\",\n      pin: \"160,80\",\n      offset: -4,\n      points: \"155,85,165,75\",\n      abbr: \"AST\"\n  },\n  {\n      timezone: \"Atlantic/Canary\",\n      country: \"ES\",\n      pin: \"229,86\",\n      offset: 0,\n      points: \"220,92,236,79\",\n      abbr: \"WET\"\n  },\n  {\n      timezone: \"Atlantic/Cape_Verde\",\n      country: \"CV\",\n      pin: \"217,104\",\n      offset: -1,\n      points: \"210,109,224,96\",\n      abbr: \"CVT\"\n  },\n  {\n      timezone: \"Atlantic/Faroe\",\n      country: \"FO\",\n      pin: \"241,39\",\n      offset: 0,\n      points: \"234,45,246,33\",\n      abbr: \"WET\"\n  },\n  {\n      timezone: \"Atlantic/Madeira\",\n      country: \"PT\",\n      pin: \"227,80\",\n      offset: 0,\n      points: \"221,88,233,74\",\n      abbr: \"WET\"\n  },\n  {\n      timezone: \"Atlantic/Reykjavik\",\n      country: \"IS\",\n      pin: \"220,36\",\n      offset: 0,\n      points: \"218,42,231,28\",\n      abbr: \"GMT\"\n  },\n  {\n      timezone: \"Atlantic/South_Georgia\",\n      country: \"GS\",\n      pin: \"199,200\",\n      offset: -2,\n      points: \"192,213,214,195\",\n      abbr: \"GST\"\n  },\n  {\n      timezone: \"Atlantic/St_Helena\",\n      country: \"SH\",\n      pin: \"242,147\",\n      offset: 0,\n      points: \"230,181,242,136\",\n      abbr: \"GMT\"\n  },\n  {\n      timezone: \"Atlantic/Stanley\",\n      country: \"FK\",\n      pin: \"170,197\",\n      offset: -3,\n      points: \"160,203,175,191\",\n      abbr: \"FKST\"\n  },\n  {\n      timezone: \"Australia/Adelaide\",\n      country: \"AU\",\n      pin: \"442,173\",\n      offset: 10.5,\n      points: \"438,161,446,161,446,178,444,177,444,175,443,174,444,175,444,175,442,174,442,173,442,172,441,174,440,174,441,173,442,172,441,170,441,171,439,173,439,174,438,173,438,173,438,172,436,170,432,169,429,169,429,161,438,161\",\n      abbr: \"ACDT\"\n  },\n  {\n      timezone: \"Australia/Brisbane\",\n      country: \"AU\",\n      pin: \"463,163\",\n      offset: 10,\n      points: \"458,156,459,156,460,158,459,157,461,158,463,161,463,163,463,164,462,164,460,166,459,165,457,165,446,165,446,161,442,161,442,148,444,150,446,149,447,146,446,144,447,142,447,142,448,140,449,142,450,145,451,145,452,146,453,151,457,153,458,156,458,156,458,156\",\n      abbr: \"AEST\"\n  },\n  {\n      timezone: \"Australia/Broken_Hill\",\n      country: \"AU\",\n      pin: \"446,169\",\n      offset: 10.5,\n      points: \"446,170,446,169,447,169,447,170,446,170\",\n      abbr: \"ACDT\"\n  },\n  {\n      timezone: \"Australia/Currie\",\n      country: \"AU\",\n      pin: \"450,180\",\n      offset: 11,\n      points: \"450,180,450,180,450,180\",\n      abbr: \"AEDT\"\n  },\n  {\n      timezone: \"Australia/Darwin\",\n      country: \"AU\",\n      pin: \"432,142\",\n      offset: 9.5,\n      points: \"429,146,430,146,430,145,430,145,431,143,432,143,431,142,432,143,432,142,434,142,434,141,433,140,436,142,438,142,439,142,438,142,439,142,439,142,440,141,440,142,440,143,439,143,438,145,437,146,442,148,442,161,429,161,429,146\",\n      abbr: \"ACST\"\n  },\n  {\n      timezone: \"Australia/Eucla\",\n      country: \"AU\",\n      pin: \"429,169\",\n      offset: 8.8,\n      points: \"429,168,428,169,424,170,424,168,429,168\",\n      abbr: \"ACWST\"\n  },\n  {\n      timezone: \"Australia/Hobart\",\n      country: \"AU\",\n      pin: \"455,185\",\n      offset: 11,\n      points: \"456,182,456,185,454,184,454,186,452,185,452,184,452,184,451,182,452,182,454,183,454,182,456,182\",\n      abbr: \"AEDT\"\n  },\n  {\n      timezone: \"Australia/Lindeman\",\n      country: \"AU\",\n      pin: \"457,153\",\n      offset: 10,\n      points: \"457,153,457,153,457,153\",\n      abbr: \"AEST\"\n  },\n  {\n      timezone: \"Australia/Lord_Howe\",\n      country: \"AU\",\n      pin: \"471,169\",\n      offset: 11,\n      points: \"471,169,471,169,471,169\",\n      abbr: \"LHDT\"\n  },\n  {\n      timezone: \"Australia/Melbourne\",\n      country: \"AU\",\n      pin: \"451,178\",\n      offset: 11,\n      points: \"448,173,449,173,451,175,455,175,456,176,458,177,455,178,453,179,453,179,452,178,451,178,452,178,451,178,449,179,446,178,446,178,446,172,447,172,448,173\",\n      abbr: \"AEDT\"\n  },\n  {\n      timezone: \"Australia/Perth\",\n      country: \"AU\",\n      pin: \"411,169\",\n      offset: 8,\n      points: \"424,146,424,145,424,145,425,145,425,144,426,145,426,144,428,145,428,147,428,146,428,147,428,146,429,146,429,168,424,168,424,170,423,171,422,172,417,172,414,174,411,173,410,173,410,172,411,171,411,169,410,165,407,161,408,162,408,160,408,161,409,162,407,159,408,156,409,155,409,156,409,155,412,154,413,154,418,152,420,150,420,149,421,148,422,149,422,148,422,147,423,148,423,148,423,147,423,147,423,147,423,146,424,147,423,146,424,146\",\n      abbr: \"AWST\"\n  },\n  {\n      timezone: \"Australia/Sydney\",\n      country: \"AU\",\n      pin: \"460,172\",\n      offset: 11,\n      points: \"459,174,458,175,458,177,456,176,455,175,451,175,449,173,446,172,446,170,447,170,447,169,446,169,446,165,457,165,459,165,460,166,462,164,463,164,462,169,460,172,460,171,460,172,459,174\",\n      abbr: \"AEDT\"\n  },\n  {\n      timezone: \"Europe/Amsterdam\",\n      country: \"NL\",\n      pin: \"257,52\",\n      offset: 1,\n      points: \"258,53,258,55,257,53,255,53,256,53,256,53,256,52,258,52,257,52,258,51,260,51,259,52,260,52,259,53,258,53\",\n      abbr: \"CET\"\n  },\n  {\n      timezone: \"Europe/Andorra\",\n      country: \"AD\",\n      pin: \"252,66\",\n      offset: 1,\n      points: \"252,66,252,66,252,66\",\n      abbr: \"CET\"\n  },\n  {\n      timezone: \"Europe/Athens\",\n      country: \"GR\",\n      pin: \"283,72\",\n      offset: 2,\n      points: \"282,72,283,73,282,73,282,74,281,74,281,74,281,74,280,74,279,72,280,72,282,72,279,72,279,71,279,71,278,70,279,68,287,67,286,68,283,68,284,69,283,69,283,70,281,69,282,71,282,70,282,71,281,71,283,72,283,73,282,72\",\n      abbr: \"EET\"\n  },\n  {\n      timezone: \"Europe/Belgrade\",\n      country: \"RS\",\n      pin: \"278,63\",\n      offset: 1,\n      points: \"280,63,282,63,281,64,282,65,281,66,279,67,278,66,278,65,277,65,277,64,277,63,276,62,277,62,276,61,278,61,280,63\",\n      abbr: \"CET\"\n  },\n  {\n      timezone: \"Europe/Bucharest\",\n      country: \"RO\",\n      pin: \"286,63\",\n      offset: 2,\n      points: \"289,62,291,62,290,64,288,64,284,64,282,64,281,63,282,63,280,63,280,62,278,61,279,61,281,59,282,58,285,59,287,58,289,60,289,62\",\n      abbr: \"EET\"\n  },\n  {\n      timezone: \"Europe/Berlin\",\n      country: \"DE\",\n      pin: \"269,52\",\n      offset: 1,\n      points: \"260,57,259,56,258,53,260,52,259,52,260,50,262,51,262,50,264,51,262,50,262,50,263,49,262,49,262,49,264,49,264,50,265,49,265,50,267,49,270,50,270,52,270,52,271,54,267,55,269,57,268,58,268,59,261,59,261,57,260,57\",\n      abbr: \"CET\"\n  },\n  {\n      timezone: \"Europe/Budapest\",\n      country: \"HU\",\n      pin: \"277,59\",\n      offset: 1,\n      points: \"279,61,275,61,272,60,273,60,273,59,274,58,276,59,279,58,282,58,279,61\",\n      abbr: \"CET\"\n  },\n  {\n      timezone: \"Europe/Chisinau\",\n      country: \"MD\",\n      pin: \"290,60\",\n      offset: 2,\n      points: \"292,60,290,60,290,61,289,62,289,60,287,58,288,58,291,58,292,60\",\n      abbr: \"EET\"\n  },\n  {\n      timezone: \"Europe/Bratislava\",\n      country: \"SK\",\n      pin: \"274,58\",\n      offset: 1,\n      points: \"274,58,274,57,276,56,281,57,281,58,278,58,276,59,274,58\",\n      abbr: \"CET\"\n  },\n  {\n      timezone: \"Europe/Brussels\",\n      country: \"BE\",\n      pin: \"256,54\",\n      offset: 1,\n      points: \"254,54,254,54,257,53,259,55,258,56,257,55,256,56,254,54\",\n      abbr: \"CET\"\n  },\n  {\n      timezone: \"Europe/Copenhagen\",\n      country: \"DK\",\n      pin: \"267,48\",\n      offset: 1,\n      points: \"263,48,264,49,262,49,262,48,261,48,261,46,265,45,264,46,265,47,263,48\",\n      abbr: \"CET\"\n  },\n  {\n      timezone: \"Europe/Dublin\",\n      country: \"IE\",\n      pin: \"241,51\",\n      offset: 0,\n      points: \"241,50,242,50,241,53,237,54,236,53,237,53,236,53,237,52,238,52,236,52,238,51,236,51,237,50,236,50,238,50,239,49,238,49,240,48,240,48,239,49,241,50\",\n      abbr: \"GMT\"\n  },\n  {\n      timezone: \"Europe/Gibraltar\",\n      country: \"GI\",\n      pin: \"243,75\",\n      offset: 1,\n      points: \"243,75,243,75,243,75\",\n      abbr: \"CET\"\n  },\n  {\n      timezone: \"Europe/Guernsey\",\n      country: \"GG\",\n      pin: \"246,56\",\n      offset: 0,\n      points: \"247,56,247,56,247,56\",\n      abbr: \"GMT\"\n  },\n  {\n      timezone: \"Europe/Helsinki\",\n      country: \"FI\",\n      pin: \"285,41\",\n      offset: 2,\n      points: \"287,41,282,42,282,41,280,41,280,40,279,38,280,37,281,37,282,36,285,35,285,34,283,33,283,32,283,31,283,31,279,29,280,29,281,30,285,30,287,28,289,28,291,28,290,30,292,31,290,32,292,34,291,35,292,36,292,36,294,38,289,41,287,41\",\n      abbr: \"EET\"\n  },\n  {\n      timezone: \"Europe/Isle_of_Man\",\n      country: \"IM\",\n      pin: \"244,50\",\n      offset: 0,\n      points: \"244,50,243,50,244,50\",\n      abbr: \"GMT\"\n  },\n  {\n      timezone: \"Europe/Istanbul\",\n      country: \"TR\",\n      pin: \"290,68\",\n      offset: 2,\n      points: \"301,74,300,75,300,75,300,74,296,75,293,74,291,75,290,74,288,74,289,74,288,74,288,73,288,73,288,72,286,72,287,71,288,72,287,71,287,70,286,70,286,69,287,69,292,68,291,68,293,68,295,67,299,67,301,68,303,68,309,67,311,68,311,69,312,70,311,70,312,72,311,72,312,73,312,74,309,73,304,74,301,74\",\n      abbr: \"EET\"\n  },\n  {\n      timezone: \"Europe/Jersey\",\n      country: \"JE\",\n      pin: \"247,57\",\n      offset: 0,\n      points: \"247,57,247,57,247,57\",\n      abbr: \"GMT\"\n  },\n  {\n      timezone: \"Europe/Kaliningrad\",\n      country: \"RU\",\n      pin: \"278,49\",\n      offset: 3,\n      points: \"279,48,279,49,281,49,282,49,277,49,278,49,278,49,278,49,279,48\",\n      abbr: \"EET\"\n  },\n  {\n      timezone: \"Europe/Kiev\",\n      country: \"UA\",\n      pin: \"292,55\",\n      offset: 2,\n      points: \"304,59,303,60,301,60,302,59,301,59,298,58,298,59,298,59,299,61,298,61,295,61,294,60,295,60,294,60,291,61,291,62,290,62,289,62,290,60,292,61,291,58,288,58,285,59,282,57,281,56,283,55,283,53,284,53,292,54,293,53,297,52,298,53,297,53,298,54,299,54,299,55,302,55,303,56,306,56,305,57,306,57,305,57,305,59,304,59\",\n      abbr: \"EET\"\n  },\n  {\n      timezone: \"Europe/Lisbon\",\n      country: \"PT\",\n      pin: \"237,71\",\n      offset: 0,\n      points: \"240,73,239,74,238,74,238,72,237,71,238,71,237,71,238,68,238,67,239,66,239,67,241,67,241,67,240,68,240,70,240,70,240,72,240,73\",\n      abbr: \"WET\"\n  },\n  {\n      timezone: \"Europe/Ljubljana\",\n      country: \"SI\",\n      pin: \"270,61\",\n      offset: 1,\n      points: \"272,60,273,60,272,61,271,62,269,62,269,62,269,61,269,60,272,60\",\n      abbr: \"CET\"\n  },\n  {\n      timezone: \"Europe/London\",\n      country: \"GB\",\n      pin: \"250,53\",\n      offset: 0,\n      points: \"246,53,245,54,243,53,245,52,244,51,243,52,244,51,246,51,246,51,246,50,245,49,246,49,243,49,244,48,243,47,242,47,242,48,242,47,243,46,241,46,243,46,242,45,243,45,242,44,243,44,243,44,246,44,244,45,245,45,244,45,247,45,246,46,245,47,246,47,245,47,247,47,248,49,250,50,250,51,249,50,250,51,250,52,252,52,252,53,250,54,252,54,251,54,245,55,245,55,242,55,244,54,246,54,247,53,246,53\",\n      abbr: \"GMT\"\n  },\n  {\n      timezone: \"Europe/Luxembourg\",\n      country: \"LU\",\n      pin: \"259,56\",\n      offset: 1,\n      points: \"259,56,258,56,258,55,259,56,259,56\",\n      abbr: \"CET\"\n  },\n  {\n      timezone: \"Europe/Madrid\",\n      country: \"ES\",\n      pin: \"245,69\",\n      offset: 1,\n      points: \"249,72,247,74,244,74,242,75,241,74,242,74,241,74,240,73,240,72,240,70,240,70,240,68,241,67,241,67,239,67,239,66,238,67,238,66,237,65,239,64,248,65,249,66,255,66,254,67,251,68,251,68,250,70,250,71,249,72\",\n      abbr: \"CET\"\n  },\n  {\n      timezone: \"Europe/Malta\",\n      country: \"MT\",\n      pin: \"270,75\",\n      offset: 1,\n      points: \"270,75,270,75,270,75\",\n      abbr: \"CET\"\n  },\n  {\n      timezone: \"Europe/Mariehamn\",\n      country: \"AX\",\n      pin: \"278,42\",\n      offset: 2,\n      points: \"279,41,279,41,279,41\",\n      abbr: \"EET\"\n  },\n  {\n      timezone: \"Europe/Minsk\",\n      country: \"BY\",\n      pin: \"288,50\",\n      offset: 3,\n      points: \"292,53,285,53,283,53,283,53,282,52,283,52,283,50,286,50,286,49,287,48,287,48,287,48,289,47,292,47,293,48,293,49,296,51,294,51,294,53,293,53,292,54,292,53\",\n      abbr: \"MSK\"\n  },\n  {\n      timezone: \"Europe/Monaco\",\n      country: \"MC\",\n      pin: \"260,64\",\n      offset: 1,\n      points: \"260,64,260,64,260,64\",\n      abbr: \"CET\"\n  },\n  {\n      timezone: \"Europe/Moscow\",\n      country: \"RU\",\n      pin: \"302,48\",\n      offset: 4,\n      points: \"326,23,329,23,327,24,327,24,327,24,327,25,327,25,330,27,324,27,325,26,321,25,324,24,323,24,325,24,323,24,326,23\",\n      abbr: \"MSK\"\n  },\n  {\n      timezone: \"Europe/Moscow\",\n      country: \"RU\",\n      pin: \"302,48\",\n      offset: 4,\n      points: \"333,20,344,18,346,18,345,19,335,20,333,21,333,21,332,21,332,22,331,21,332,22,329,22,330,23,329,22,330,23,328,23,329,23,329,23,325,23,328,23,324,23,328,22,327,22,329,21,328,21,329,21,328,21,333,20\",\n      abbr: \"MSK\"\n  },\n  {\n      timezone: \"Europe/Moscow\",\n      country: \"RU\",\n      pin: \"302,48\",\n      offset: 4,\n      points: \"315,63,315,63,316,64,316,65,317,67,316,68,313,66,311,66,310,65,306,65,301,62,303,61,302,60,305,60,303,60,303,59,305,59,306,58,305,57,306,57,305,57,306,56,303,56,302,55,299,55,299,54,298,54,297,53,298,53,297,52,294,53,293,51,296,51,293,49,293,48,289,47,289,45,288,45,289,45,288,44,289,43,289,42,292,42,290,41,290,41,289,41,294,38,292,36,292,36,291,35,292,34,290,32,292,31,290,30,290,29,289,29,294,28,296,28,295,28,295,28,295,29,297,29,296,29,300,29,307,31,307,32,304,33,294,32,297,33,296,33,298,33,298,34,299,35,298,35,302,36,303,36,301,35,306,35,305,34,309,33,311,33,312,32,311,32,312,31,310,30,314,30,315,31,312,32,315,32,316,32,316,31,318,31,317,31,323,30,325,29,326,29,324,29,325,30,324,30,332,29,333,30,332,30,333,30,335,29,334,28,335,28,340,29,340,29,341,30,341,31,342,31,341,31,342,31,333,35,332,39,329,40,326,40,322,40,323,41,319,42,319,43,317,42,318,41,317,40,316,40,314,41,315,42,315,43,316,43,314,44,316,45,315,45,315,46,318,45,322,47,321,47,323,47,324,46,324,47,324,47,324,47,325,48,324,48,325,49,324,50,321,49,320,49,319,50,317,51,317,52,310,52,309,53,310,54,307,54,309,56,308,57,309,57,308,58,310,59,312,59,312,58,315,59,315,59,316,60,315,61,316,61,315,62,316,62,315,63\",\n      abbr: \"MSK\"\n  },\n  {\n      timezone: \"Europe/Oslo\",\n      country: \"NO\",\n      pin: \"265,42\",\n      offset: 1,\n      points: \"261,44,259,44,260,44,258,44,258,43,259,43,258,43,259,42,257,42,260,41,258,42,258,41,257,41,258,41,257,41,257,41,258,40,257,40,260,40,261,40,257,40,257,40,258,40,257,40,258,40,257,39,259,39,257,39,259,39,258,39,259,38,260,39,259,38,261,38,260,38,260,37,262,38,261,37,262,38,261,37,266,36,265,36,266,36,264,37,263,37,267,35,266,35,268,34,267,34,268,34,267,34,268,33,268,34,268,33,270,33,268,33,269,33,268,33,269,32,268,32,269,32,269,32,271,32,270,32,272,31,271,31,272,31,271,30,272,30,273,31,272,31,273,30,272,30,275,30,273,30,275,30,274,30,275,30,274,29,275,29,277,29,277,28,277,28,277,29,278,28,278,29,279,29,278,28,279,28,281,28,280,28,281,28,279,27,280,27,283,28,282,27,284,27,284,27,284,26,286,27,285,27,285,28,287,26,287,27,288,27,288,26,290,26,289,27,289,27,289,27,290,27,293,27,290,28,291,28,291,28,293,28,290,29,290,28,288,28,286,28,286,29,285,30,281,30,280,29,278,29,278,29,278,30,276,30,275,31,273,31,272,33,270,33,270,34,269,35,270,35,269,36,267,37,267,39,268,40,267,40,268,41,266,42,266,43,265,43,265,42,264,43,263,43,261,44\",\n      abbr: \"CET\"\n  },\n  {\n      timezone: \"Europe/Paris\",\n      country: \"FR\",\n      pin: \"253,57\",\n      offset: 1,\n      points: \"256,65,254,65,254,66,254,66,248,65,248,65,249,63,248,62,249,62,248,62,248,61,247,60,247,59,246,59,244,59,243,58,244,58,243,58,246,57,246,58,248,57,247,56,248,57,251,56,250,56,252,55,252,54,254,54,256,56,257,55,258,56,261,57,261,59,260,59,258,61,259,61,260,62,259,62,260,64,261,64,260,64,259,65,256,65\",\n      abbr: \"CET\"\n  },\n  {\n      timezone: \"Europe/Podgorica\",\n      country: \"ME\",\n      pin: \"277,66\",\n      offset: 1,\n      points: \"276,65,278,65,277,66,277,67,276,66,276,65\",\n      abbr: \"CET\"\n  },\n  {\n      timezone: \"Europe/Prague\",\n      country: \"CZ\",\n      pin: \"270,55\",\n      offset: 1,\n      points: \"271,57,270,57,268,56,267,55,271,54,273,55,273,55,275,55,276,56,274,57,271,57\",\n      abbr: \"CET\"\n  },\n  {\n      timezone: \"Europe/Riga\",\n      country: \"LV\",\n      pin: \"283,46\",\n      offset: 2,\n      points: \"281,45,283,46,284,45,284,45,285,44,288,45,289,47,287,48,285,47,279,47,279,46,281,45\",\n      abbr: \"EET\"\n  },\n  {\n      timezone: \"Europe/Rome\",\n      country: \"IT\",\n      pin: \"267,67\",\n      offset: 1,\n      points: \"273,69,273,70,274,71,272,72,273,71,272,69,265,66,264,64,262,63,260,64,261,64,260,64,259,62,260,62,259,61,262,60,263,61,263,60,264,61,265,60,267,60,269,60,269,61,269,62,267,62,267,63,267,63,269,65,270,67,272,67,272,67,276,69,275,70,274,69,273,69\",\n      abbr: \"CET\"\n  },\n  {\n      timezone: \"Europe/Samara\",\n      country: \"RU\",\n      pin: \"320,51\",\n      offset: 4,\n      points: \"320,49,323,49,322,50,322,51,321,53,317,52,317,51,317,51,319,50,320,49\",\n      abbr: \"SAMT\"\n  },\n  {\n      timezone: \"Europe/Samara\",\n      country: \"RU\",\n      pin: \"320,51\",\n      offset: 4,\n      points: \"325,47,324,47,324,47,324,47,324,46,323,47,321,47,321,47,322,46,321,45,322,45,322,44,325,44,326,46,325,46,325,47\",\n      abbr: \"SAMT\"\n  },\n  {\n      timezone: \"Europe/San_Marino\",\n      country: \"SM\",\n      pin: \"267,64\",\n      offset: 1,\n      points: \"267,64,267,64,267,64\",\n      abbr: \"CET\"\n  },\n  {\n      timezone: \"Europe/Sarajevo\",\n      country: \"BA\",\n      pin: \"276,64\",\n      offset: 1,\n      points: \"272,63,277,63,277,63,277,64,277,64,277,64,276,65,276,66,274,65,272,63\",\n      abbr: \"CET\"\n  },\n  {\n      timezone: \"Europe/Simferopol\",\n      country: \"RU\",\n      pin: \"297,63\",\n      offset: 2,\n      points: \"298,61,299,62,301,62,297,63,296,62,296,62,295,62,297,61,297,61,298,61\",\n      abbr: \"MSK\"\n  },\n  {\n      timezone: \"Europe/Skopje\",\n      country: \"MK\",\n      pin: \"280,67\",\n      offset: 1,\n      points: \"281,66,282,67,282,68,279,68,278,67,279,67,281,66\",\n      abbr: \"CET\"\n  },\n  {\n      timezone: \"Europe/Sofia\",\n      country: \"BG\",\n      pin: \"282,66\",\n      offset: 2,\n      points: \"289,66,288,66,289,67,287,67,286,68,282,68,281,66,282,65,281,64,281,64,282,64,285,64,288,64,290,64,289,66\",\n      abbr: \"EET\"\n  },\n  {\n      timezone: \"Europe/Stockholm\",\n      country: \"SE\",\n      pin: \"275,43\",\n      offset: 1,\n      points: \"267,47,268,46,267,45,267,44,266,44,265,43,266,43,266,42,268,41,267,40,268,40,267,39,267,37,268,36,270,36,269,35,270,34,270,33,272,33,273,32,272,31,274,30,275,31,275,30,278,30,278,29,283,31,283,31,283,32,283,33,284,34,280,34,281,34,280,34,280,35,279,35,280,36,279,36,275,38,274,37,275,38,274,38,275,39,274,39,274,41,277,42,275,42,276,43,275,43,275,43,274,43,272,44,274,44,273,44,273,44,273,45,273,45,272,47,270,47,270,48,269,48,268,48,268,48,267,47\",\n      abbr: \"CET\"\n  },\n  {\n      timezone: \"Europe/Tallinn\",\n      country: \"EE\",\n      pin: \"284,42\",\n      offset: 2,\n      points: \"283,43,286,42,289,43,288,44,289,45,287,45,285,44,284,45,284,44,283,44,283,43,283,43\",\n      abbr: \"EET\"\n  },\n  {\n      timezone: \"Europe/Tirane\",\n      country: \"AL\",\n      pin: \"278,68\",\n      offset: 1,\n      points: \"278,70,277,69,277,67,277,66,277,66,279,66,278,68,279,69,278,70\",\n      abbr: \"CET\"\n  },\n  {\n      timezone: \"Europe/Uzhgorod\",\n      country: \"UA\",\n      pin: \"281,57\",\n      offset: 2,\n      points: \"282,57,284,58,282,58,281,58,282,57\",\n      abbr: \"EET\"\n  },\n  {\n      timezone: \"Europe/Vaduz\",\n      country: \"LI\",\n      pin: \"263,60\",\n      offset: 1,\n      points: \"263,59,263,60,263,59\",\n      abbr: \"CET\"\n  },\n  {\n      timezone: \"Europe/Vatican\",\n      country: \"VA\",\n      pin: \"267,67\",\n      offset: 1,\n      points: \"267,67,267,67,267,67\",\n      abbr: \"CET\"\n  },\n  {\n      timezone: \"Europe/Vienna\",\n      country: \"AT\",\n      pin: \"273,58\",\n      offset: 1,\n      points: \"263,59,268,59,268,58,271,57,273,57,274,58,273,59,273,60,272,60,270,61,267,60,267,60,264,60,263,59\",\n      abbr: \"CET\"\n  },\n  {\n      timezone: \"Europe/Vilnius\",\n      country: \"LT\",\n      pin: \"285,49\",\n      offset: 2,\n      points: \"279,47,285,47,287,48,286,49,286,50,283,50,282,49,281,49,280,48,279,47\",\n      abbr: \"EET\"\n  },\n  {\n      timezone: \"Europe/Volgograd\",\n      country: \"RU\",\n      pin: \"312,57\",\n      offset: 4,\n      points: \"315,57,316,59,318,59,318,60,317,60,318,61,318,62,317,61,317,62,315,62,316,61,315,61,316,60,315,59,315,59,314,59,313,58,312,58,312,59,311,59,308,58,309,57,308,57,309,56,307,54,310,54,309,53,310,52,317,52,320,53,320,54,317,55,318,56,316,55,315,57\",\n      abbr: \"MSK\"\n  },\n  {\n      timezone: \"Europe/Volgograd\",\n      country: \"RU\",\n      pin: \"312,57\",\n      offset: 4,\n      points: \"317,40,318,41,317,42,319,43,319,42,321,42,324,41,324,43,325,43,325,44,322,44,322,45,321,45,322,46,321,47,318,45,315,46,315,45,316,45,314,44,316,43,315,43,315,42,314,41,316,40,317,40\",\n      abbr: \"MSK\"\n  },\n  {\n      timezone: \"Europe/Warsaw\",\n      country: \"PL\",\n      pin: \"279,52\",\n      offset: 1,\n      points: \"283,55,282,56,282,57,280,56,276,56,275,55,273,55,273,55,271,54,270,52,270,52,270,50,275,49,277,49,277,50,282,49,283,51,282,52,284,54,283,55\",\n      abbr: \"CET\"\n  },\n  {\n      timezone: \"Europe/Zagreb\",\n      country: \"HR\",\n      pin: \"272,61\",\n      offset: 1,\n      points: \"277,63,272,62,274,65,272,65,270,62,269,63,269,62,271,62,272,61,273,60,275,61,276,61,277,62,277,63\",\n      abbr: \"CET\"\n  },\n  {\n      timezone: \"Europe/Zaporozhye\",\n      country: \"UA\",\n      pin: \"299,59\",\n      offset: 2,\n      points: \"298,59,298,59,298,58,299,58,302,59,301,60,299,61,299,61,298,59\",\n      abbr: \"EET\"\n  },\n  {\n      timezone: \"Europe/Zurich\",\n      country: \"CH\",\n      pin: \"262,59\",\n      offset: 1,\n      points: \"259,61,258,61,260,59,262,59,263,59,263,60,265,60,264,61,263,60,263,61,262,60,260,61,259,61,259,61\",\n      abbr: \"CET\"\n  },\n  {\n      timezone: \"Indian/Antananarivo\",\n      country: \"MG\",\n      pin: \"316,151\",\n      offset: 3,\n      points: \"305,160,324,142\",\n      abbr: \"EAT\"\n  },\n  {\n      timezone: \"Indian/Chagos\",\n      country: \"IO\",\n      pin: \"351,135\",\n      offset: 6,\n      points: \"344,140,356,127\",\n      abbr: \"IOT\"\n  },\n  {\n      timezone: \"Indian/Christmas\",\n      country: \"CX\",\n      pin: \"397,139\",\n      offset: 7,\n      points: \"392,145,402,134\",\n      abbr: \"CXT\"\n  },\n  {\n      timezone: \"Indian/Cocos\",\n      country: \"CC\",\n      pin: \"385,142\",\n      offset: 6.5,\n      points: \"379,147,390,136\",\n      abbr: \"CCT\"\n  },\n  {\n      timezone: \"Indian/Comoro\",\n      country: \"KM\",\n      pin: \"310,141\",\n      offset: 3,\n      points: \"305,147,317,136\",\n      abbr: \"EAT\"\n  },\n  {\n      timezone: \"Indian/Kerguelen\",\n      country: \"TF\",\n      pin: \"348,194\",\n      offset: 5,\n      points: \"320,194,358,177\",\n      abbr: \"TFT\"\n  },\n  {\n      timezone: \"Indian/Mahe\",\n      country: \"SC\",\n      pin: \"327,131\",\n      offset: 4,\n      points: \"314,144,328,125\",\n      abbr: \"SCT\"\n  },\n  {\n      timezone: \"Indian/Maldives\",\n      country: \"MV\",\n      pin: \"352,119\",\n      offset: 5,\n      points: \"346,126,357,115\",\n      abbr: \"MVT\"\n  },\n  {\n      timezone: \"Indian/Mauritius\",\n      country: \"MU\",\n      pin: \"330,153\",\n      offset: 4,\n      points: \"328,154,338,139\",\n      abbr: \"MUT\"\n  },\n  {\n      timezone: \"Indian/Mayotte\",\n      country: \"YT\",\n      pin: \"313,143\",\n      offset: 3,\n      points: \"308,148,318,138\",\n      abbr: \"EAT\"\n  },\n  {\n      timezone: \"Indian/Reunion\",\n      country: \"RE\",\n      pin: \"327,154\",\n      offset: 4,\n      points: \"322,160,333,149\",\n      abbr: \"RET\"\n  },\n  {\n      timezone: \"Pacific/Apia\",\n      country: \"WS\",\n      pin: \"11,144\",\n      offset: 14,\n      points: \"5,150,17,139\",\n      abbr: \"WSDT\"\n  },\n  {\n      timezone: \"Pacific/Auckland\",\n      country: \"NZ\",\n      pin: \"493,176\",\n      offset: 13,\n      points: \"485,190,481,189,484,186,487,185,490,181,491,182,492,182,492,182,492,182,492,183,490,185,490,186,488,187,487,189,485,190\",\n      abbr: \"NZDT\"\n  },\n  {\n      timezone: \"Pacific/Auckland\",\n      country: \"NZ\",\n      pin: \"493,176\",\n      offset: 13,\n      points: \"495,181,494,183,493,182,493,181,491,180,492,179,493,178,492,176,492,175,492,176,490,173,492,174,493,176,494,177,494,176,495,178,498,177,497,179,496,179,495,181\",\n      abbr: \"NZDT\"\n  },\n  {\n      timezone: \"Pacific/Chatham\",\n      country: \"NZ\",\n      pin: \"5,186\",\n      offset: 13.8,\n      points: \"-1,192,11,181\",\n      abbr: \"CHADT\"\n  },\n  {\n      timezone: \"Pacific/Chuuk\",\n      country: \"FM\",\n      pin: \"461,115\",\n      offset: 10,\n      points: \"442,123,464,106\",\n      abbr: \"CHUT\"\n  },\n  {\n      timezone: \"Pacific/Easter\",\n      country: \"CL\",\n      pin: \"98,163\",\n      offset: -5,\n      points: \"93,168,103,158\",\n      abbr: \"EAST\"\n  },\n  {\n      timezone: \"Pacific/Enderbury\",\n      country: \"KI\",\n      pin: \"12,129\",\n      offset: 13,\n      points: \"3,137,18,124\",\n      abbr: \"PHOT\"\n  },\n  {\n      timezone: \"Pacific/Fakaofo\",\n      country: \"TK\",\n      pin: \"12,138\",\n      offset: 13,\n      points: \"5,143,17,132\",\n      abbr: \"TKT\"\n  },\n  {\n      timezone: \"Pacific/Efate\",\n      country: \"VU\",\n      pin: \"484,150\",\n      offset: 11,\n      points: \"476,153,491,143\",\n      abbr: \"VUT\"\n  },\n  {\n      timezone: \"Pacific/Fiji\",\n      country: \"FJ\",\n      pin: \"498,150\",\n      offset: 13,\n      points: \"1,149,1,149,1,149\",\n      abbr: \"FJST\"\n  },\n  {\n      timezone: \"Pacific/Funafuti\",\n      country: \"TV\",\n      pin: \"499,137\",\n      offset: 12,\n      points: \"490,143,505,128\",\n      abbr: \"TVT\"\n  },\n  {\n      timezone: \"Pacific/Galapagos\",\n      country: \"EC\",\n      pin: \"126,126\",\n      offset: -6,\n      points: \"117,132,131,118\",\n      abbr: \"GALT\"\n  },\n  {\n      timezone: \"Pacific/Gambier\",\n      country: \"PF\",\n      pin: \"63,157\",\n      offset: -9,\n      points: \"55,162,68,150\",\n      abbr: \"GAMT\"\n  },\n  {\n      timezone: \"Pacific/Kwajalein\",\n      country: \"MH\",\n      pin: \"482,112\",\n      offset: 12,\n      points: \"477,118,488,107\",\n      abbr: \"MHT\"\n  },\n  {\n      timezone: \"Pacific/Guadalcanal\",\n      country: \"SB\",\n      pin: \"473,138\",\n      offset: 11,\n      points: \"466,142,485,132\",\n      abbr: \"SBT\"\n  },\n  {\n      timezone: \"Pacific/Guam\",\n      country: \"GU\",\n      pin: \"451,106\",\n      offset: 10,\n      points: \"446,112,456,101\",\n      abbr: \"ChST\"\n  },\n  {\n      timezone: \"Pacific/Honolulu\",\n      country: \"US\",\n      pin: \"31,95\",\n      offset: -10,\n      points: \"8,99,35,89\",\n      abbr: \"HST\"\n  },\n  {\n      timezone: \"Pacific/Johnston\",\n      country: \"UM\",\n      pin: \"15,102\",\n      offset: -10,\n      points: \"10,107,20,97\",\n      abbr: \"HST\"\n  },\n  {\n      timezone: \"Pacific/Kiritimati\",\n      country: \"KI\",\n      pin: \"31,122\",\n      offset: 14,\n      points: \"27,141,41,118\",\n      abbr: \"LINT\"\n  },\n  {\n      timezone: \"Pacific/Kosrae\",\n      country: \"FM\",\n      pin: \"476,118\",\n      offset: 11,\n      points: \"471,123,481,113\",\n      abbr: \"KOST\"\n  },\n  {\n      timezone: \"Pacific/Majuro\",\n      country: \"MH\",\n      pin: \"488,115\",\n      offset: 12,\n      points: \"474,119,489,105\",\n      abbr: \"MHT\"\n  },\n  {\n      timezone: \"Pacific/Midway\",\n      country: \"UM\",\n      pin: \"4,86\",\n      offset: -11,\n      points: \"-3,91,9,80\",\n      abbr: \"SST\"\n  },\n  {\n      timezone: \"Pacific/Marquesas\",\n      country: \"PF\",\n      pin: \"56,138\",\n      offset: -9.5,\n      points: \"50,145,63,131\",\n      abbr: \"MART\"\n  },\n  {\n      timezone: \"Pacific/Nauru\",\n      country: \"NR\",\n      pin: \"482,126\",\n      offset: 12,\n      points: \"477,131,487,121\",\n      abbr: \"NRT\"\n  },\n  {\n      timezone: \"Pacific/Niue\",\n      country: \"NU\",\n      pin: \"14,151\",\n      offset: -11,\n      points: \"9,157,19,146\",\n      abbr: \"NUT\"\n  },\n  {\n      timezone: \"Pacific/Norfolk\",\n      country: \"NF\",\n      pin: \"483,165\",\n      offset: 11.5,\n      points: \"478,170,488,160\",\n      abbr: \"NFT\"\n  },\n  {\n      timezone: \"Pacific/Noumea\",\n      country: \"NC\",\n      pin: \"481,156\",\n      offset: 11,\n      points: \"470,162,489,147\",\n      abbr: \"NCT\"\n  },\n  {\n      timezone: \"Pacific/Pago_Pago\",\n      country: \"AS\",\n      pin: \"13,145\",\n      offset: -11,\n      points: \"7,150,20,135\",\n      abbr: \"SST\"\n  },\n  {\n      timezone: \"Pacific/Palau\",\n      country: \"PW\",\n      pin: \"437,115\",\n      offset: 9,\n      points: \"427,126,442,109\",\n      abbr: \"PWT\"\n  },\n  {\n      timezone: \"Pacific/Pitcairn\",\n      country: \"PN\",\n      pin: \"69,160\",\n      offset: -8,\n      points: \"63,165,82,153\",\n      abbr: \"PST\"\n  },\n  {\n      timezone: \"Pacific/Pohnpei\",\n      country: \"FM\",\n      pin: \"470,115\",\n      offset: 11,\n      points: \"463,122,478,110\",\n      abbr: \"PONT\"\n  },\n  {\n      timezone: \"Pacific/Port_Moresby\",\n      country: \"PG\",\n      pin: \"454,138\",\n      offset: 10,\n      points: \"447,141,471,126\",\n      abbr: \"PGT\"\n  },\n  {\n      timezone: \"Pacific/Rarotonga\",\n      country: \"CK\",\n      pin: \"28,154\",\n      offset: -10,\n      points: \"20,155,32,137\",\n      abbr: \"CKT\"\n  },\n  {\n      timezone: \"Pacific/Saipan\",\n      country: \"MP\",\n      pin: \"452,104\",\n      offset: 10,\n      points: \"446,110,458,91\",\n      abbr: \"ChST\"\n  },\n  {\n      timezone: \"Pacific/Tahiti\",\n      country: \"PF\",\n      pin: \"42,149\",\n      offset: -10,\n      points: \"35,163,61,145\",\n      abbr: \"TAHT\"\n  },\n  {\n      timezone: \"Pacific/Tarawa\",\n      country: \"KI\",\n      pin: \"490,123\",\n      offset: 12,\n      points: \"485,134,496,115\",\n      abbr: \"GILT\"\n  },\n  {\n      timezone: \"Pacific/Tongatapu\",\n      country: \"TO\",\n      pin: \"7,154\",\n      offset: 13,\n      points: \"0,161,14,142\",\n      abbr: \"TOT\"\n  },\n  {\n      timezone: \"Pacific/Wake\",\n      country: \"UM\",\n      pin: \"481,98\",\n      offset: 12,\n      points: \"476,103,486,93\",\n      abbr: \"WAKT\"\n  },\n  {\n      timezone: \"Pacific/Wallis\",\n      country: \"WF\",\n      pin: \"5,143\",\n      offset: 12,\n      points: \"-3,150,10,138\",\n      abbr: \"WFT\"\n  }]\n  "],"names":[],"version":3,"file":"index.js.map"}